{"version":3,"sources":["hooks/useApprove.ts","config/constants/nfts.ts","utils/makeBatchRequest.ts","config/constants/endpoints.ts","config/constants/priceHelperLps.ts","state/farms/fetchPublicFarmData.ts","state/farms/fetchFarm.ts","state/farms/fetchFarms.ts","state/farms/fetchFarmsPrices.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","components/UnlockButton.tsx","hooks/useRefresh.ts","hooks/useAuth.ts","components/Tags.tsx","utils/getRpcUrl.ts","utils/wallet.ts","utils/web3React.ts","config/constants/index.ts","config/constants/teams.ts","state/teams/helpers.ts","contexts/Localization/helpers.ts","contexts/Localization/Provider.tsx","contexts/Localization/useTranslation.ts","state/pools/helpers.ts","config/constants/campaigns.ts","utils/bscscan.ts","config/constants/meta.ts","components/layout/Page.tsx","components/layout/Container.tsx","utils/collectibles.ts","config/constants/contracts.ts","utils/addressHelpers.ts","hooks/useStake.ts","config/constants/ifo.ts","state/block/index.ts","state/collectibles/index.ts","components/ApyCalculatorModal/index.tsx","state/achievements/helpers.ts","state/achievements/index.ts","utils/farmsPriceHelpers.ts","contexts/ThemeContext.tsx","utils/formatBalance.ts","contexts/ToastsContext/Provider.tsx","hooks/useTabVisibility.ts","contexts/RefreshContext.tsx","utils/bigNumber.ts","hooks/usePersistState.ts","utils/achievements.ts","config/index.ts","utils/latinise.ts","state/predictions/index.ts","state/hooks.ts","hooks/useLastUpdated.ts","components/PageLoader.tsx","utils/getTimePeriods.ts","utils/apr.ts","components/Select/Select.tsx","hooks/useUnstake.ts","hooks/useHarvest.ts","routerHistory.ts","utils/settings.ts","utils/contractHelpers.ts","components/Balance.tsx","config/constants/types.ts","utils/farmHelpers.ts","components/layout/Flex.tsx","hooks/usePreviousValue.ts","hooks/useDelayedUnmount.ts","components/PageHeader/PageHeader.tsx","components/SearchInput/SearchInput.tsx","config/constants/tokens.ts","hooks/useContract.ts","views/Pools/helpers.tsx","state/index.ts","hooks/useWeb3.ts","utils/multicall.ts","utils/web3.ts","state/actions.ts","utils/callHelpers.ts","state/pools/fetchPools.ts","state/pools/fetchPoolsUser.ts","state/pools/fetchVaultPublic.ts","state/pools/fetchVaultUser.ts","state/pools/index.ts","config/constants/pools.ts","state/types.ts","state/predictions/helpers.ts","state/predictions/queries.ts","hooks/useToast.ts","config/localization/languages.ts","config/constants/farms.ts","views/Pools/components/ToggleView/ToggleView.tsx","hooks/useEagerConnect.ts","style/Global.tsx","components/Menu/config.ts","components/Menu/index.tsx","components/SuspenseWithChunkError/index.tsx","components/ToastListener/index.tsx","components/EasterEgg/EasterEgg.tsx","views/Pools/components/PoolCard/AprRow.tsx","views/Pools/components/PoolCard/StyledCard.tsx","views/Pools/components/PoolCard/CardFooter/ExpandedFooter.tsx","views/Pools/components/PoolCard/CardFooter/index.tsx","views/Pools/components/PoolCard/StyledCardHeader.tsx","views/Pools/components/PoolCard/CardActions/ApprovalAction.tsx","views/Pools/components/PoolCard/Modals/NotEnoughTokensModal.tsx","views/Pools/components/PoolCard/Modals/PercentageButton.tsx","views/Pools/components/PoolCard/Modals/StakeModal.tsx","views/Pools/components/PoolCard/CardActions/StakeActions.tsx","views/Pools/components/PoolCard/Modals/CollectModal.tsx","views/Pools/components/PoolCard/CardActions/HarvestActions.tsx","views/Pools/components/PoolCard/CardActions/index.tsx","views/Pools/components/PoolCard/index.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/VaultApprovalAction.tsx","hooks/cakeVault/useWithdrawalFeeTimer.ts","views/Pools/components/CakeVaultCard/WithdrawalFeeTimer.tsx","views/Pools/components/CakeVaultCard/UnstakingFeeCountdownRow.tsx","views/Pools/components/CakeVaultCard/FeeSummary.tsx","views/Pools/components/CakeVaultCard/VaultStakeModal.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/HasSharesActions.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/VaultStakeActions.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/index.tsx","views/Pools/components/CakeVaultCard/RecentCakeProfitBalance.tsx","views/Pools/components/CakeVaultCard/RecentCakeProfitRow.tsx","views/Pools/components/CakeVaultCard/index.tsx","views/Pools/components/PoolTabButtons.tsx","views/Pools/components/PoolsTable/Cells/BaseCell.tsx","views/Pools/components/PoolsTable/Cells/NameCell.tsx","views/Pools/components/PoolsTable/Cells/EarningsCell.tsx","views/Pools/components/PoolsTable/Apr.tsx","views/Pools/components/PoolsTable/Cells/AprCell.tsx","views/Pools/components/PoolsTable/Cells/TotalStakedCell.tsx","views/Pools/components/PoolsTable/Cells/EndsInCell.tsx","views/Pools/components/PoolsTable/Cells/ExpandActionCell.tsx","views/Pools/components/PoolsTable/ActionPanel/styles.ts","views/Pools/components/PoolsTable/ActionPanel/Harvest.tsx","views/Pools/components/PoolsTable/ActionPanel/Stake.tsx","views/Pools/components/PoolsTable/ActionPanel/ActionPanel.tsx","views/Pools/components/PoolsTable/PoolRow.tsx","views/Pools/components/PoolsTable/PoolsTable.tsx","views/Pools/index.tsx","App.tsx","Providers.tsx","index.tsx","utils/compoundApyHelpers.ts","state/profile/helpers.ts","state/profile/getProfile.ts","state/profile/index.tsx","hooks/useTheme.ts","state/teams/index.tsx"],"names":["useApprove","lpContract","account","useWeb3React","masterChefContract","useMasterchef","onApprove","useCallback","a","approve","tx","useSousApprove","sousId","earningTokenSymbol","useState","requestedApproval","setRequestedApproval","useToast","toastSuccess","toastError","t","useTranslation","dispatch","useAppDispatch","sousChefContract","useSousChef","handleApprove","updateUserAllowance","symbol","console","error","useVaultApprove","setLastUpdated","cakeVaultContract","useCakeVaultContract","cakeContract","useCake","methods","options","address","ethers","constants","MaxUint256","send","from","on","useCheckVaultApprovalStatus","isVaultApproved","setIsVaultApproved","useLastUpdated","lastUpdated","useEffect","allowance","call","response","currentAllowance","BigNumber","gt","checkApprovalStatus","useIfoApprove","tokenContract","spenderAddress","IPFS_GATEWAY","nftSources","NftType","PANCAKE","56","97","identifierKey","MIXIE","Nfts","name","description","images","lg","md","sm","ipfs","sortOrder","identifier","type","variationId","video","webm","mp4","blur","makeBatchRequest","calls","batch","getWeb3NoAccount","BatchRequest","promises","map","Promise","resolve","reject","add","request","err","result","execute","all","GRAPH_API_PROFILE","process","GRAPH_API_PREDICTION","ARCHIVED_NODE","priceHelperLps","pid","lpSymbol","lpAddresses","token","tokens","qsd","quoteToken","wbnb","fetchFarm","farm","lpAddress","getAddress","params","getMasterChefAddress","multicall","erc20","tokenBalanceLP","quoteTokenBalanceLP","lpTokenBalanceMC","lpTotalSupply","tokenDecimals","quoteTokenDecimals","lpTokenRatio","div","tokenAmountTotal","BIG_TEN","pow","quoteTokenAmountTotal","tokenAmountMc","times","quoteTokenAmountMc","lpTotalInQuoteToken","masterchefABI","info","totalAllocPoint","allocPoint","_hex","BIG_ZERO","poolWeight","toJSON","tokenPriceVsQuote","multiplier","toString","fetchPublicFarmData","farmPublicData","fetchFarms","farmsToFetch","farmConfig","data","getFarmFromTokenSymbol","farms","tokenSymbol","preferredQuoteTokens","farmsWithTokenSymbol","filter","filterFarmsByQuoteToken","getFarmBaseTokenPrice","quoteTokenFarm","bnbPriceBusd","hasTokenPriceVsQuote","Boolean","quoteTokenInBusd","getFarmQuoteTokenPrice","BIG_ONE","fetchFarmsPrices","bnbBusdFarm","find","farmsWithPrices","baseTokenPrice","quoteTokenPrice","busdPrice","fetchFarmUserAllowances","masterChefAddress","erc20ABI","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","tokenBalance","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","stakedBalance","fetchFarmUserEarnings","rawEarnings","parsedEarnings","earnings","initialState","farmsConfig","userData","loadArchivedFarmsData","userDataLoaded","nonArchivedFarms","isArchivedPid","fetchFarmsPublicDataAsync","createAsyncThunk","pids","includes","farmsWithPriceHelpers","concat","priceHelperLpsConfig","farmsWithoutHelperLps","fetchFarmUserDataAsync","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","farmAllowance","index","farmsSlice","createSlice","reducers","setLoadArchivedFarmsData","state","action","payload","extraReducers","builder","addCase","fulfilled","liveFarmData","farmData","forEach","userDataEl","findIndex","actions","UnlockButton","props","useAuth","login","logout","onPresentConnectModal","useWalletModal","onClick","useRefresh","useContext","RefreshContext","fastRefresh","fast","slowRefresh","slow","activate","deactivate","connectorID","connector","connectorsByName","UnsupportedChainIdError","setupNetwork","window","localStorage","removeItem","connectorLocalStorageKey","NoEthereumProviderError","NoBscProviderError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","WalletConnectConnector","walletConnectProvider","message","profileClear","getItem","walletconnect","close","CoreTag","variant","outline","startIcon","width","color","mr","CommunityTag","DualTag","ManualPoolTag","CompoundingPoolTag","nodes","getNodeUrl","randomIndex","random","length","provider","ethereum","chainId","parseInt","method","chainName","nativeCurrency","decimals","rpcUrls","blockExplorerUrls","BASE_BSC_SCAN_URL","registerToken","tokenAddress","tokenImage","image","tokenAdded","rpcUrl","injected","InjectedConnector","supportedChainIds","rpc","bridge","qrcode","pollingInterval","bscConnector","BscConnector","ConnectorNames","Injected","WalletConnect","BSC","getLibrary","teams","id","alt","background","textColor","users","points","profileContract","getProfileContract","getTeam","teamId","getTeamProfile","teamName","numberUsers","numberPoints","isJoinable","staticTeamInfo","teamsList","staticTeam","merge","getTeams","teamsById","reduce","accum","team","numberTeams","nbTeams","i","push","teamData","onChainTeamData","Number","LS_KEY","fetchLocale","locale","fetch","json","getLanguageCodeFromLS","EN","isFetching","currentLanguage","languageMap","Map","set","translations","LanguageContext","createContext","undefined","LanguageProvider","children","codeFromStorage","languages","setState","enLocale","get","currentLocale","prevState","fetchInitialLocales","setLanguage","language","has","setItem","translate","key","translatedText","match","interpolatedText","Object","keys","dataKey","templateKey","RegExp","replace","Provider","value","languageContext","Error","transformUserData","stakingTokenBalance","pendingReward","transformPool","pool","totalStaked","stakingLimit","rest","getTokenPricesFromFarm","prices","quoteTokenAddress","toLocaleLowerCase","toNumber","campaigns","title","badge","campaignMap","campaign","getBscScanAddressUrl","getBscScanTransactionUrl","transactionHash","getBscScanBlockNumberUrl","block","getBscScanBlockCountdownUrl","DEFAULT_META","StyledPage","styled","Container","theme","mediaQueries","PageMeta","pathname","useLocation","cakePriceUsd","usePriceCakeBusd","cakePriceUsdDisplay","toLocaleString","minimumFractionDigits","maximumFractionDigits","pageMeta","path","getCustomMeta","pageTitle","join","property","content","Page","getIdentifierKeyFromAddress","nftAddress","nftSource","values","nftSourceEntry","getTokenUrl","tokenUri","startsWith","slice","getAddressByType","getTokenUriData","tokenId","contract","getErc721Contract","tokenURI","uriDataResponse","ok","uriData","getNftByTokenId","nft","MAINNET_CHAIN_ID","getCakeAddress","zeus","addresses","getMulticallAddress","getWbnbAddress","getLotteryAddress","getLotteryTicketAddress","getLotteryV2Address","getPancakeProfileAddress","getPancakeRabbitsAddress","getBunnyFactoryAddress","getClaimRefundAddress","getPointCenterIfoAddress","getBunnySpecialAddress","getTradingCompetitionAddress","getEasterNftAddress","getCakeVaultAddress","getPredictionsAddress","getChainlinkOracleAddress","useSousStake","isUsingBnb","handleStake","amount","stake","sousStakeBnb","sousStake","updateUserStakedBalance","updateUserBalance","onStake","useStake","txHash","cakeBnbLpToken","ifos","isActive","poolBasic","saleAmount","raiseAmount","cakeToBurn","distributionRatio","poolUnlimited","currency","kalm","releaseBlockNumber","campaignId","articleUrl","tokenOfferingPrice","version","hotcross","hzn","belt","watch","bry","wsote","helmet","ten","ditto","blink","blockSlice","currentBlock","initialBlock","setBlock","fetchWalletNfts","nftSourcePromises","nftSourceType","addressObj","getTokenIdAndData","tokenOfOwnerByIndex","walletNft","balanceOf","balanceOfResponse","nftDataFetchPromises","nftData","nftSourceData","flat","collectiblesSlice","isInitialized","isLoading","pending","association","Grid","GridItem","GridHeaderItem","ApyCalculatorModal","onDismiss","tokenPrice","apr","linkLabel","linkHref","roundingDecimals","compoundFrequency","performanceFee","oneThousandDollarsWorthOfToken","tokenEarnedPerThousand1D","tokenEarnedPerThousandDollarsCompounding","numberOfDays","farmApr","tokenEarnedPerThousand7D","tokenEarnedPerThousand30D","tokenEarnedPerThousand365D","fontSize","bold","textTransform","mb","ml","num","getRoi","amountEarned","amountInvested","toFixed","style","maxWidth","justifyContent","textAlign","freq","mt","fee","href","getUserPointIncreaseEvents","gql","toLowerCase","user","getAchievements","pointIncreaseEvents","userPoint","campaignMeta","getAchievementTitle","getAchievementDescription","achievementSlice","addAchievement","addAchievements","setAchievements","clearAchievements","fetchAchievements","achievements","preferredFarm","some","CACHE_KEY","ThemeContext","React","isDark","toggleTheme","ThemeContextProvider","isDarkUserSetting","JSON","parse","setIsDark","stringify","dark","light","getDecimalAmount","getBalanceAmount","dividedBy","getBalanceNumber","balance","getFullDisplayBalance","decimalsToAppear","formatNumber","number","minPrecision","maxPrecision","ToastsContext","ToastsProvider","toasts","setToasts","toast","prevToasts","kebabCase","currentToasts","prevToast","clear","remove","toastTypes","DANGER","toastInfo","INFO","SUCCESS","toastWarning","WARNING","useTabVisibility","tabVisibleRef","useRef","onVisibilityChange","current","document","hidden","addEventListener","removeEventListener","RefreshContextProvider","setSlow","setFast","interval","setInterval","prev","clearInterval","BIG_NINE","defaultOptions","hydrate","identity","dehydrate","usePersistState","initialValue","userOptions","localStorageKey","valueFromLS","setValue","getClaimableIfoData","ifoCampaigns","ifosList","ifoItem","ifoCampaignAddresses","pointCenterContract","getPointCenterIfoContract","checkClaimStatuses","claimStatuses","claimStatus","claimableIfoData","claimableIfoDataItem","ifoCampaign","config","EXPONENTIAL_AT","DECIMAL_PLACES","BSC_BLOCK_TIME","CAKE_PER_BLOCK","BLOCKS_PER_YEAR","CAKE_PER_YEAR","BASE_URL","BASE_EXCHANGE_URL","BASE_ADD_LIQUIDITY_URL","LOTTERY_TICKET_PRICE","DEFAULT_TOKEN_DECIMAL","DEFAULT_GAS_LIMIT","DEFAULT_GAS_PRICE","TESTNET_CHAIN_ID","Latinise","latin_map","τ","Τ","latinise","input","x","status","PredictionStatus","INITIAL","isHistoryPaneOpen","isChartPaneOpen","isFetchingHistory","historyFilter","HistoryFilter","ALL","currentEpoch","currentRoundStartBlockNumber","intervalBlocks","bufferBlocks","minBetAmount","lastOraclePrice","rounds","history","bets","fetchBet","getBet","bet","transformBetResponse","fetchRoundBet","roundId","getBetHistory","round","betResponses","betResponse","fetchCurrentBets","roundIds","round_in","fetchHistory","claimed","predictionsSlice","setPredictionStatus","setHistoryPaneState","setChartPaneState","setHistoryFilter","initialize","updateMarketData","market","newRoundData","makeRoundData","incomingCurrentRound","maxBy","epoch","newestRound","futureRound","transformRoundResponse","makeFutureRoundResponse","startBlock","paused","PAUSED","LIVE","setCurrentEpoch","markBetAsCollected","accountBets","markPositionAsEntered","setLastOraclePrice","betData","currentBet","rejected","ZERO","usePollFarmsData","includeArchive","web3","farmToFetch","usePollCoreFarmData","usePollBlockNumber","eth","getBlockNumber","blockNumber","useFarms","useSelector","useFarmFromPid","f","useFarmUser","useBusdPriceFromPid","useLpTokenPrice","farmTokenPriceInUsd","lpTokenPrice","overallValueOfAllTokensInFarm","totalLpTokens","useFetchPublicPoolsData","fetchPoolsPublicDataAsync","fetchPoolsPublicData","fetchPoolsStakingLimitsAsync","usePools","fetchPoolsUserDataAsync","pools","useFetchCakeVault","fetchCakeVaultPublicData","fetchCakeVaultUserData","fetchCakeVaultFees","useCakeVault","cakeVault","totalSharesAsString","totalShares","pricePerFullShareAsString","pricePerFullShare","totalCakeInVaultAsString","totalCakeInVault","estimatedCakeBountyRewardAsString","estimatedCakeBountyReward","totalPendingCakeHarvestAsString","totalPendingCakeHarvest","fees","callFee","withdrawalFee","withdrawalFeePeriod","userSharesAsString","userShares","cakeAtLastUserActionAsString","cakeAtLastUserAction","lastDepositedTime","lastUserActionTime","useMemo","useFetchProfile","fetchProfile","useProfile","profile","hasRegistered","hasProfile","useTeam","fetchTeam","useTeams","fetchTeams","useFetchAchievements","useAchievements","usePriceBnbBusd","bnbPriceUSD","useBlock","useInitialBlock","useIsHistoryPaneOpen","predictions","useIsChartPaneOpen","useGetRounds","useGetSortedRounds","roundData","orderBy","useGetCurrentEpoch","useGetIntervalBlocks","useGetTotalIntervalBlocks","useGetPredictionsStatus","useGetHistoryFilter","useGetCurrentRoundBlockNumber","useGetMinBetAmount","useGetIsFetchingHistory","useGetHistoryByAccount","useGetBetByRoundId","useBetCanClaim","getCanClaim","useGetLastOraclePrice","useGetCollectibles","collectibles","identifiers","tokenIds","nftsInWallet","Date","now","setStateLastUpdated","previousLastUpdated","usePreviousValue","Wrapper","PageLoader","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","getTimePeriods","seconds","delta","Math","abs","timeLeft","years","months","days","hours","minutes","floor","getPoolApr","stakingTokenPrice","rewardTokenPrice","tokenPerBlock","totalRewardPricePerYear","totalStakingTokenInPool","isNaN","isFinite","getFarmApr","poolLiquidityUsd","DropDownHeader","shadows","inset","colors","inputSecondary","DropDownListContainer","zIndices","dropdown","DropDownContainer","isOpen","css","tooltip","boxShadow","DropDownList","ul","ListItem","li","Select","onChange","containerRef","dropdownRef","setIsOpen","selectedOptionIndex","setSelectedOptionIndex","height","containerSize","setContainerSize","toggling","offsetWidth","offsetHeight","ref","label","option","selectedIndex","useSousUnstake","enableEmergencyWithdraw","handleUnstake","unstake","sousEmergencyUnstake","sousUnstake","updateUserPendingReward","onUnstake","useUnstake","useHarvest","farmPid","onReward","harvest","useSousHarvest","handleHarvest","soushHarvestBnb","soushHarvest","createBrowserHistory","GAS_SETTINGS","default","reallyfast","getDefaultSettings","gasPrice","getStorageKey","getSettings","settingsFromLs","getContract","abi","amountInGwei","_web3","web3NoAccount","Contract","getBep20Contract","bep20Abi","erc721Abi","getLpContract","lpTokenAbi","getIfoV1Contract","ifoV1Abi","getIfoV2Contract","ifoV2Abi","getSouschefContract","poolsConfig","poolCategory","PoolCategory","BINANCE","sousChefBnb","sousChef","contractAddress","getSouschefV2Contract","sousChefV2","pointCenterIfo","getCakeContract","cakeAbi","profileABI","getPancakeRabbitContract","pancakeRabbitsAbi","getBunnyFactoryContract","bunnyFactoryAbi","getBunnySpecialContract","bunnySpecialAbi","getLotteryContract","lotteryAbi","getLotteryTicketContract","lotteryTicketAbi","getLotteryV2Contract","lotteryV2Abi","getMasterchefContract","masterChef","getClaimRefundContract","claimRefundAbi","getTradingCompetitionContract","tradingCompetitionAbi","getEasterNftContract","easterNftAbi","getCakeVaultContract","cakeVaultAbi","getPredictionsContract","predictionsAbi","getChainlinkOracleContract","chainlinkOracleAbi","Balance","isDisabled","unit","prefix","previousValue","start","end","duration","separator","PoolIds","FlexLayout","useDelayedUnmount","isMounted","delayTime","shouldRender","setShouldRender","timeoutId","setTimeout","clearTimeout","Outer","Box","Inner","PageHeader","StyledInput","Input","InputWrapper","SearchInput","onChangeCallback","placeholder","toggled","setToggled","searchText","setSearchText","debouncedOnChange","debounce","e","target","onBlur","bnb","projectLink","txl","cos","bunny","alice","for","bux","nuls","ramp","bfi","dexe","bel","tpt","xmark","bmxx","iotx","bor","bopen","dodo","swingby","zee","swgb","swg","sfp","lina","lit","hget","bdo","egld","ust","front","btcst","bscx","balbt","asr","atm","og","reef","juv","psg","vai","unfi","twt","hard","broobee","stax","nar","nya","ctk","inj","sxp","alpha","xvs","sushi","comp","syrup","bifi","dusk","busd","beth","mamzn","mgoogl","mnflx","mtsla","ltc","usdc","dai","ada","band","dot","eos","link","usdt","btcb","xrp","atom","yfii","xtz","bch","yfi","uni","fil","bake","burger","bdigg","bbadger","trade","pnt","mir","pbtc","lto","pcws","zil","lien","swth","dft","gum","dego","nrv","easy","oddz","hoo","apys","bondly","tko","itam","arpa","eps","jgn","tlm","perl","alpa","suter","cgg","mix","hakka","xed","τbtc","alpaca","dfd","lmt","btt","trx","win","mcoin","math","kun","hyfi","oin","doge","fine","one","pmon","τdoge","btr","ubxt","wmass","rfox","xend","cyc","chr","deri","well","popen","ez","vrt","tusd","mtrg","ktn","qkc","bcfx","mx","ata","mbox","boring","marsh","useIfoV1Contract","useWeb3","useIfoV2Contract","useERC20","useERC721","useBunnyFactory","useLottery","useLotteryTicket","usePointCenterIfoContract","useBunnySpecialContract","useClaimRefundContract","useTradingCompetitionContract","useEasterNftContract","usePredictionsContract","useChainlinkOracleContract","convertSharesToCake","shares","cakePerFullShare","decimalsToRound","sharePriceNumber","amountInCake","multipliedBy","cakeAsNumberBalance","cakeAsBigNumber","cakeAsDisplayBalance","convertCakeToShares","cake","amountInShares","sharesAsNumberBalance","sharesAsBigNumber","sharesAsDisplayBalance","getAprData","isAutoVault","earningTokenPrice","isHighValueToken","getCakeVaultEarnings","hasAutoEarnings","autoCakeProfit","minus","autoCakeToDisplay","gte","autoUsdProfit","autoUsdToDisplay","getPoolBlockInfo","endBlock","isFinished","shouldShowBlockCountdown","blocksUntilStart","max","blocksRemaining","hasPoolStarted","blocksToDisplay","store","configureStore","devTools","reducer","achievementsReducer","blockReducer","farmsReducer","poolsReducer","predictionsReducer","profileReducer","teamsReducer","collectiblesReducer","useDispatch","library","refEth","Web3","setweb3","multi","MultiCallAbi","itf","Interface","calldata","encodeFunctionData","aggregate","returnData","res","decodeFunctionResult","multicallv2","tryAggregate","requireSuccess","RPC_URL","getRpcUrl","httpProvider","providers","HttpProvider","timeout","getWeb3WithArchivedNodeProvider","archivedHttpProvider","enterStaking","gas","deposit","leaveStaking","withdraw","emergencyWithdraw","cakeBnbFarm","Token","fetchPoolsBlockLimits","poolsWithEnd","p","callsStartBlock","poolConfig","callsEndBlock","sousChefABI","starts","ends","cakePoolConfig","fetchPoolsTotalStaking","nonBnbPools","stakingToken","bnbPool","callsNonBnbPools","callsBnbPools","cakeABI","nonBnbPoolsTotalStaked","wbnbABI","bnbPoolsTotalStaked","fetchPoolStakingLimit","sousContract","poolLimitPerUser","fetchPoolsStakingLimits","poolsWithStakingLimit","validPools","stakingLimitPromises","validPool","stakingLimits","bnbPools","nonMasterPools","masterChefABI","fetchPoolsAllowance","allowances","acc","fetchUserBalances","tokenBalancesRaw","tokenBalances","getBalance","bnbBalance","bnbBalances","fetchUserStakeBalances","userInfo","stakedBalances","masterPoolAmount","0","fetchUserPendingRewards","pendingRewards","pendingCake","fetchPublicVaultData","getPricePerFullShare","calculateHarvestCakeRewards","calculateTotalPendingCakeRewards","sharePrice","totalSharesAsBigNumber","sharePriceAsBigNumber","totalCakeInVaultEstimate","fetchVaultFees","withdrawFee","withdrawFeePeriod","fetchVaultUser","userContractResponse","getState","blockLimits","totalStakings","liveData","blockLimit","entry","totalStaking","isPoolEndBlockExceeded","isPoolFinished","stakingTokenAddress","earningTokenAddress","earningToken","parseFloat","setPoolsPublicData","stakingLimitData","stakingTokenBalances","setPoolsUserData","updatePoolsUserData","field","publicVaultInfo","vaultFees","PoolsSlice","livePoolsData","livePoolData","userPoolData","CORE","BetPosition","Result","numberOrNull","valueNum","failed","startAt","lockAt","lockBlock","lockPrice","closePrice","totalBets","totalAmount","bearBets","bullBets","bearAmount","bullAmount","position","hash","BULL","BEAR","claimedHash","totalBNB","roundResponse","positionResponse","getRoundResult","CANCELED","roundResultPosition","WIN","LOSE","getUnclaimedWinningBets","getStaticPredictionsData","isPaused","getMarketData","marketResponse","where","first","skip","betId","toastContext","code","languageList","isEvent","ViewMode","_binanceChainListener","defineProperty","this","bsc","useEagerConnect","connectorId","isConnectorBinanceChain","isBinanceChainDefined","Reflect","then","GlobalStyle","createGlobalStyle","icon","items","Menu","useTheme","currentLang","langs","setLang","links","SuspenseWithChunkError","hasError","isJsChunkLoadError","isCssChunkLoadError","isChunkLoadError","isRecoveringFromChunkError","nextState","replaceState","location","reload","fallback","Component","ToastListener","onRemove","EasterEgg","show","setShow","startFalling","useKonamiCheatCode","onAnimationEnd","memo","AprRow","tooltipContent","useTooltip","placement","targetRef","tooltipVisible","earningsPercentageToDisplay","apyModalLink","useModal","alignItems","RainbowLight","keyframes","StyledCard","Card","isPromoted","card","isDesktop","ExpandedWrapper","Flex","ExpandedFooter","poolContractAddress","cakeVaultContractAddress","imageSrc","isMetaMaskInScope","isMetaMask","isManualCakePool","flexDirection","small","manualCakeTotalMinusAutoVault","getTotalStakedBalance","ExpandableButtonWrapper","Footer","isExpanded","setIsExpanded","manualTooltipText","autoTooltipText","expanded","CardHeader","backgroundDisabled","gradients","radii","StyledCardHeader","stakingTokenSymbol","isStaking","poolImageSrc","isCakePool","scale","src","ApprovalAction","stakingTokenContract","endIcon","spin","disabled","StyledLink","Link","NotEnoughTokensModal","headerBackground","cardHeader","as","external","StyledButton","Button","PercentageButton","StakeModal","isBnbPool","isRemovingStake","pendingTx","setPendingTx","stakeAmount","setStakeAmount","hasReachedStakeLimit","setHasReachedStakedLimit","percent","setPercent","getCalculatedStakingLimit","usdValueStaked","fullDecimalStakeAmount","plus","handleChangePercent","sliderPercent","percentageOfStakingMax","amountToStake","handleConfirmClick","minWidth","onUserInput","convertedInput","percentage","min","currencyValue","isWarning","onValueChanged","valueLabel","step","StakeAction","isStaked","stakedTokenBalance","stakedTokenDollarBalance","onPresentTokenRequired","onPresentStake","onPresentUnstake","reachStakingLimit","CollectModal","formattedBalance","fullBalance","earningsDollarValue","isCompoundPool","shouldCompound","setShouldCompound","tooltipOffset","handleHarvestConfirm","activeIndex","onItemClick","pb","HarvestActions","earningTokenBalance","earningTokenDollarBalance","hasEarnings","onPresentCollect","display","InlineText","Text","CardActions","needsApproval","StakeActions","PoolCard","isXl","useMatchBreakpoints","accountHasStakedBalance","ribbon","variantColor","text","CardFooter","VaultApprovalAction","useWithdrawalFeeTimer","secondsRemaining","setSecondsRemaining","hasUnstakingFee","setHasUnstakingFee","currentSeconds","setCurrentSeconds","secondsRemainingCalc","doesUnstakingFeeApply","timerInterval","prevSeconds","WithdrawalFeeTimer","day","hour","minute","UnstakingFeeCountdownRow","isTableVariant","feeAsDecimal","noFeeToPay","shouldShowTimer","FeeSummary","feeInCake","VaultStakeModal","stakingMax","cakePriceBusd","handleWithdrawal","convertedStakeAmount","shareStakeToWithdraw","triggerWithdrawAllThreshold","sharesRemaining","lte","withdrawAll","handleDeposit","HasSharesActions","stakedDollarValue","VaultStakeActions","accountHasSharesStaked","CakeVaultCardActions","RecentCakeProfitBalance","cakeToDisplay","dollarValueToDisplay","dateStringToDisplay","RecentCakeProfitCountdownRow","lastActionInMs","StyledCardBody","CardBody","CakeVaultCard","showStakedOnly","isVaultUserDataLoading","performanceFeeAsDecimal","RecentCakeProfitRow","VaultCardActions","ToggleView","viewMode","onToggle","handleToggle","mode","CARD","TABLE","PoolTabButtons","stakedOnly","setStakedOnly","hasStakeInFinishedPools","setViewMode","useRouteMatch","url","isExact","isXs","isSm","viewModeToggle","liveOrFinishedSwitch","to","stakedOnlySwitch","checked","BaseCell","CellContent","StyledCell","NameCell","hasVaultShares","iconFile","showStakedTag","subtitle","showSubtitle","role","HelpIconWrapper","EarningsCell","labelText","asset","event","stopPropagation","Apr","showIcon","onPresentApyModal","openRoiModal","AprCell","TotalStakedCell","totalStakedBalance","EndsInCell","renderBlocks","flex","showLoading","ArrowIcon","ChevronDownIcon","isFullLayout","ActionContainer","xl","ActionTitles","ActionContent","HarvestAction","displayBalance","actionTitle","pt","alignSelf","lineHeight","marginTop","IconButtonWrapper","Staked","handlePoolApprove","requestedPoolApproval","handleVaultApprove","requestedVaultApproval","isNotVaultAndHasStake","hasSharesStaked","isVaultWithShares","stakedAutoDollarValue","onPresentVaultStake","onPresentVaultUnstake","expandAnimation","collapseAnimation","StyledActionPanel","InfoSection","ActionPanel","breakpoints","isMd","totalStakedTargetRef","totalStakedTooltip","totalStakedTooltipVisible","tagTargetRef","tagTooltip","tagTooltipVisible","maxStakeRow","blocksRow","aprRow","totalStakedRow","Harvest","Stake","StyledRow","PoolRow","isLg","setExpanded","shouldRenderActionPanel","ExpandActionCell","StyledTable","StyledTableBorder","cardBorder","ScrollButtonContainer","PoolsTable","tableWrapperEl","scrollIntoView","behavior","CardLayout","PoolControls","SearchSortContainer","ControlStretch","Pools","poolsWithoutAutoVault","numberOfPoolsVisible","setNumberOfPoolsVisible","observerIsSet","setObserverIsSet","loadMoreRef","searchQuery","setSearchQuery","sortOption","setSortOption","accountHasVaultShares","partition","finishedPools","openPools","stakedOnlyFinishedPools","isGreaterThan","stakedOnlyOpenPools","IntersectionObserver","entries","isIntersecting","poolsCurrentlyVisible","rootMargin","threshold","observe","showFinishedPools","poolsToShow","chosenPools","lowercaseQuery","poolsToSort","sortPools","cardLayout","tableLayout","Home","lazy","Farms","Lottery","Ifos","NotFound","Collectibles","Teams","Team","Profile","TradingCompetition","Predictions","App","Global","exact","component","iterations","Providers","ReactDOM","render","StrictMode","getElementById","timesCompounded","aprAsDecimal","daysAsDecimalOfYear","principal","finalAmount","transformProfileResponse","profileResponse","userId","getUsername","username","getProfile","getUserProfile","Cookies","avatar","domain","secure","expires","profileSlice","profileFetchStart","profileFetchSucceeded","_state","profileFetchFailed","addPoints","StyledThemeContext","teamsSlice","fetchStart","fetchFailed","teamFetchSucceeded","teamsFetchSucceeded"],"mappings":"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","file":"static/js/main.d0baab22.chunk.js","sourcesContent":["import { useCallback, useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Contract } from 'web3-eth-contract'\nimport { ethers } from 'ethers'\nimport BigNumber from 'bignumber.js'\nimport { useAppDispatch } from 'state'\nimport { updateUserAllowance } from 'state/actions'\nimport { approve } from 'utils/callHelpers'\nimport { useTranslation } from 'contexts/Localization'\nimport { useMasterchef, useCake, useSousChef, useLottery, useCakeVaultContract } from './useContract'\nimport useToast from './useToast'\nimport useLastUpdated from './useLastUpdated'\n\n// Approve a Farm\nexport const useApprove = (lpContract: Contract) => {\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, masterChefContract, account)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, lpContract, masterChefContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve a Pool\nexport const useSousApprove = (lpContract: Contract, sousId, earningTokenSymbol) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { toastSuccess, toastError } = useToast()\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const tx = await approve(lpContract, sousChefContract, account)\n      dispatch(updateUserAllowance(sousId, account))\n      if (tx) {\n        toastSuccess(\n          t('Contract Enabled'),\n          t('You can now stake in the %symbol% pool!', { symbol: earningTokenSymbol }),\n        )\n        setRequestedApproval(false)\n      } else {\n        // user rejected tx or didn't go thru\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setRequestedApproval(false)\n      }\n    } catch (e) {\n      console.error(e)\n     }\n  }, [account, dispatch, lpContract, sousChefContract, sousId, earningTokenSymbol, t, toastError, toastSuccess])\n\n  return { handleApprove, requestedApproval }\n}\n\n// Approve CAKE auto pool\nexport const useVaultApprove = (setLastUpdated: () => void) => {\n  const { account } = useWeb3React()\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { t } = useTranslation()\n  const { toastSuccess, toastError } = useToast()\n  const cakeVaultContract = useCakeVaultContract()\n  const cakeContract = useCake()\n\n  const handleApprove = () => {\n    cakeContract.methods\n      .approve(cakeVaultContract.options.address, ethers.constants.MaxUint256)\n      .send({ from: account })\n      .on('sending', () => {\n        setRequestedApproval(true)\n      })\n      .on('receipt', () => {\n        toastSuccess(t('Contract Enabled'), t('You can now stake in the %symbol% vault!', { symbol: 'CAKE' }))\n        setLastUpdated()\n        setRequestedApproval(false)\n      })\n      .on('error', (error) => {\n        console.error(error)\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setRequestedApproval(false)\n      })\n  }\n\n  return { handleApprove, requestedApproval }\n}\n\nexport const useCheckVaultApprovalStatus = () => {\n  const [isVaultApproved, setIsVaultApproved] = useState(false)\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const cakeVaultContract = useCakeVaultContract()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n  useEffect(() => {\n    const checkApprovalStatus = async () => {\n      try {\n        const response = await cakeContract.methods.allowance(account, cakeVaultContract.options.address).call()\n        const currentAllowance = new BigNumber(response)\n        setIsVaultApproved(currentAllowance.gt(0))\n      } catch (error) {\n        setIsVaultApproved(false)\n      }\n    }\n\n    checkApprovalStatus()\n  }, [account, cakeContract, cakeVaultContract, lastUpdated])\n\n  return { isVaultApproved, setLastUpdated }\n}\n\n// Approve the lottery\nexport const useLotteryApprove = () => {\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const lotteryContract = useLottery()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(cakeContract, lotteryContract, account)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, cakeContract, lotteryContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve an IFO\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\n  const { account } = useWeb3React()\n  const onApprove = useCallback(async () => {\n    const tx = await tokenContract.methods.approve(spenderAddress, ethers.constants.MaxUint256).send({ from: account })\n    return tx\n  }, [account, spenderAddress, tokenContract])\n\n  return onApprove\n}\n","import { Nft, NftSource, NftType } from './types'\n\nexport const IPFS_GATEWAY = 'https://gateway.pinata.cloud'\n\nexport const nftSources: NftSource = {\n  [NftType.PANCAKE]: {\n    address: {\n      56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\n      97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n    },\n    identifierKey: 'image',\n  },\n  [NftType.MIXIE]: {\n    address: {\n      56: '0xa251b5EAa9E67F2Bc8b33F33e20E91552Bf85566',\n      97: '',\n    },\n    identifierKey: 'image',\n  },\n}\n\nconst Nfts: Nft[] = [\n  {\n    name: 'Mixie v1',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-1-lg.png',\n      md: 'mixie-1-md.png',\n      sm: 'mixie-1-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/001-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '001-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 1,\n  },\n  {\n    name: 'Mixie v2',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-2-lg.png',\n      md: 'mixie-2-md.png',\n      sm: 'mixie-2-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/002-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '002-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 2,\n  },\n  {\n    name: 'Mixie v3',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-3-lg.png',\n      md: 'mixie-3-md.png',\n      sm: 'mixie-3-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/003-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '003-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 3,\n  },\n  {\n    name: 'Easter ‘21 Champions',\n    description: 'Eggscellent! Celebrating Syrup Storm winning the Easter Battle!',\n    images: {\n      lg: 'easter-champion-storm-lg.png',\n      md: 'easter-champion-storm-md.png',\n      sm: 'easter-champion-storm-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.png',\n    },\n    video: {\n      webm: 'https://gateway.pinata.cloud/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.webm',\n      mp4: 'https://gateway.pinata.cloud/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.mp4',\n    },\n    sortOrder: 999,\n    identifier: 'easter-champion-storm',\n    type: NftType.PANCAKE,\n    variationId: 15,\n  },\n  {\n    name: \"Cakeston Easter '21\",\n    description: 'Melting Easter eggs and melting hearts!',\n    images: {\n      lg: 'cakeston-easter-21-lg.png',\n      md: 'cakeston-easter-21-md.png',\n      sm: 'cakeston-easter-21-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-caker.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-caker',\n    type: NftType.PANCAKE,\n    variationId: 15,\n  },\n  {\n    name: \"Flipsie Easter '21\",\n    description: 'Watch out for Flipsie’s spatula smash!',\n    images: {\n      lg: 'flipsie-easter-21-lg.png',\n      md: 'flipsie-easter-21-md.png',\n      sm: 'flipsie-easter-21-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-flipper.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-flipper',\n    type: NftType.PANCAKE,\n    variationId: 14,\n  },\n  {\n    name: \"Stormy Easter '21\",\n    description: 'Do you like chocolate with your syrup? Go long!',\n    images: {\n      lg: 'stormy-easter-21-lg.png',\n      md: 'stormy-easter-21-md.png',\n      sm: 'stormy-easter-21-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-storm.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-storm',\n    type: NftType.PANCAKE,\n    variationId: 12,\n  },\n  {\n    name: 'Bullish',\n    description: 'Happy Niu Year! This bunny’s excited for the year of the bull (market!)',\n    images: {\n      lg: 'bullish-lg.png',\n      md: 'bullish-md.png',\n      sm: 'bullish-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.png',\n    },\n    video: {\n      webm: 'https://gateway.pinata.cloud/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.webm',\n      mp4: 'https://gateway.pinata.cloud/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.mp4',\n    },\n    sortOrder: 999,\n    identifier: 'bullish',\n    type: NftType.PANCAKE,\n    variationId: 11,\n  },\n  {\n    name: 'Hiccup',\n    description: \"Oopsie daisy! Hiccup's had a bit of an accident. Poor little fella.\",\n    images: {\n      lg: 'hiccup-lg.png',\n      md: 'hiccup-md.png',\n      sm: 'hiccup-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmQ6EE6gkVzAQUdQLLM7CyrnME6LZHCoy92ZERW8HXmyjw/hiccup.png',\n    },\n    sortOrder: 999,\n    identifier: 'hiccup',\n    type: NftType.PANCAKE,\n    variationId: 10,\n  },\n  {\n    name: 'Sleepy',\n    description: 'Aww, looks like eating pancakes all day is tough work. Sweet dreams!',\n    images: {\n      lg: 'sleepy-lg.png',\n      md: 'sleepy-md.png',\n      sm: 'sleepy-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sleepy.png',\n      blur: 'sleepy-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sleepy',\n    type: NftType.PANCAKE,\n    variationId: 5,\n  },\n  {\n    name: 'Sunny',\n    description: 'Sunny is always cheerful when there are pancakes around. Smile!',\n    images: {\n      lg: 'sunny-lg.png',\n      md: 'sunny-md.png',\n      sm: 'sunny-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sunny.png',\n      blur: 'sunny-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sunny',\n    type: NftType.PANCAKE,\n    variationId: 9,\n  },\n  {\n    name: 'Churro',\n    description: \"Don't let that dopey smile deceive you... Churro's a master CAKE chef!\",\n    images: {\n      lg: 'churro-lg.png',\n      md: 'churro-md.png',\n      sm: 'churro-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/churro.png',\n      blur: 'churro-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'churro',\n    type: NftType.PANCAKE,\n    variationId: 8,\n  },\n  {\n    name: 'Dollop',\n    description: \"Nommm... Oh hi, I'm just meditating on the meaning of CAKE.\",\n    images: {\n      lg: 'dollop-lg.png',\n      md: 'dollop-md.png',\n      sm: 'dollop-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/dollop.png',\n      blur: 'dollop-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'dollop',\n    type: NftType.PANCAKE,\n    variationId: 6,\n  },\n  {\n    name: 'Twinkle',\n    description: \"Three guesses what's put that twinkle in those eyes! (Hint: it's CAKE)\",\n    images: {\n      lg: 'twinkle-lg.png',\n      md: 'twinkle-md.png',\n      sm: 'twinkle-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/twinkle.png',\n      blur: 'twinkle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'twinkle',\n    type: NftType.PANCAKE,\n    variationId: 7,\n  },\n  {\n    name: 'Swapsies',\n    description: 'These bunnies love nothing more than swapping pancakes. Especially on BSC.',\n    images: {\n      lg: 'swapsies-lg.png',\n      md: 'swapsies-md.png',\n      sm: 'swapsies-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/swapsies.png',\n      blur: 'swapsies-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'swapsies',\n    type: NftType.PANCAKE,\n    variationId: 0,\n  },\n  {\n    name: 'Drizzle',\n    description: \"It's raining syrup on this bunny, but he doesn't seem to mind. Can you blame him?\",\n    images: {\n      lg: 'drizzle-lg.png',\n      md: 'drizzle-md.png',\n      sm: 'drizzle-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/drizzle.png',\n      blur: 'drizzle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'drizzle',\n    type: NftType.PANCAKE,\n    variationId: 1,\n  },\n  {\n    name: 'Blueberries',\n    description: \"These bunnies like their pancakes with blueberries. What's your favorite topping?\",\n    images: {\n      lg: 'blueberries-lg.png',\n      md: 'blueberries-md.png',\n      sm: 'blueberries-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/blueberries.png',\n      blur: 'blueberries-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'blueberries',\n    type: NftType.PANCAKE,\n    variationId: 2,\n  },\n  {\n    name: 'Circular',\n    description: \"Love makes the world go 'round... but so do pancakes. And these bunnies know it.\",\n    images: {\n      lg: 'circular-lg.png',\n      md: 'circular-md.png',\n      sm: 'circular-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/circular.png',\n      blur: 'circular-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'circular',\n    type: NftType.PANCAKE,\n    variationId: 3,\n  },\n  {\n    name: 'Sparkle',\n    description: 'It’s sparkling syrup, pancakes, and even lottery tickets! This bunny really loves it.',\n    images: {\n      lg: 'sparkle-lg.png',\n      md: 'sparkle-md.png',\n      sm: 'sparkle-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/sparkle.png',\n      blur: 'sparkle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sparkle',\n    type: NftType.PANCAKE,\n    variationId: 4,\n  },\n]\n\nexport default Nfts\n","import { getWeb3NoAccount } from './web3'\n\n/**\n * Accepts an array of contract method calls and batches them\n *\n * Example:\n *\n * [\n *  contract.method.balanceOf().call,\n *  contract.method.startBlockNumber().call\n * ]\n */\nconst makeBatchRequest = (calls: any[]) => {\n  try {\n    const web3 = getWeb3NoAccount()\n    const batch = new web3.BatchRequest()\n\n    const promises = calls.map((call) => {\n      return new Promise((resolve, reject) => {\n        batch.add(\n          call.request({}, (err, result) => {\n            if (err) {\n              reject(err)\n            } else {\n              resolve(result)\n            }\n          }),\n        )\n      })\n    })\n\n    batch.execute()\n\n    return Promise.all(promises)\n  } catch {\n    return null\n  }\n}\n\nexport default makeBatchRequest\n","export const GRAPH_API_PROFILE = process.env.REACT_APP_GRAPH_API_PROFILE\nexport const GRAPH_API_PREDICTION = process.env.REACT_APP_GRAPH_API_PREDICTION\nexport const ARCHIVED_NODE = process.env.REACT_APP_ARCHIVED_NODE\n","import tokens from './tokens'\nimport { FarmConfig } from './types'\n\nconst priceHelperLps: FarmConfig[] = [\n  /**\n   * These LPs are just used to help with price calculation for MasterChef LPs (farms.ts).\n   * This list is added to the MasterChefLps and passed to fetchFarm. The calls to get contract information about the token/quoteToken in the LP are still made.\n   * The absense of a PID means the masterchef contract calls are skipped for this farm.\n   * Prices are then fetched for all farms (masterchef + priceHelperLps).\n   * Before storing to redux, farms without a PID are filtered out.\n   */\n  {\n    pid: null,\n    lpSymbol: 'QSD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7b3ae32eE8C532016f3E31C8941D937c59e055B9',\n    },\n    token: tokens.qsd,\n    quoteToken: tokens.wbnb,\n  },\n]\n\nexport default priceHelperLps\n","import BigNumber from 'bignumber.js'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport erc20 from 'config/abi/erc20.json'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { BIG_TEN, BIG_ZERO } from 'utils/bigNumber'\nimport multicall from 'utils/multicall'\nimport { Farm, SerializedBigNumber } from '../types'\n\ntype PublicFarmData = {\n  tokenAmountMc: SerializedBigNumber\n  quoteTokenAmountMc: SerializedBigNumber\n  tokenAmountTotal: SerializedBigNumber\n  quoteTokenAmountTotal: SerializedBigNumber\n  lpTotalInQuoteToken: SerializedBigNumber\n  lpTotalSupply: SerializedBigNumber\n  tokenPriceVsQuote: SerializedBigNumber\n  poolWeight: SerializedBigNumber\n  multiplier: string\n}\n\nconst fetchFarm = async (farm: Farm): Promise<PublicFarmData> => {\n  const { pid, lpAddresses, token, quoteToken } = farm\n  const lpAddress = getAddress(lpAddresses)\n  const calls = [\n    // Balance of token in the LP contract\n    {\n      address: getAddress(token.address),\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of quote token on LP contract\n    {\n      address: getAddress(quoteToken.address),\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of LP tokens in the master chef contract\n    {\n      address: lpAddress,\n      name: 'balanceOf',\n      params: [getMasterChefAddress()],\n    },\n    // Total supply of LP tokens\n    {\n      address: lpAddress,\n      name: 'totalSupply',\n    },\n    // Token decimals\n    {\n      address: getAddress(token.address),\n      name: 'decimals',\n    },\n    // Quote token decimals\n    {\n      address: getAddress(quoteToken.address),\n      name: 'decimals',\n    },\n  ]\n\n  const [tokenBalanceLP, quoteTokenBalanceLP, lpTokenBalanceMC, lpTotalSupply, tokenDecimals, quoteTokenDecimals] =\n    await multicall(erc20, calls)\n\n  // Ratio in % of LP tokens that are staked in the MC, vs the total number in circulation\n  const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\n\n  // Raw amount of token in the LP, including those not staked\n  const tokenAmountTotal = new BigNumber(tokenBalanceLP).div(BIG_TEN.pow(tokenDecimals))\n  const quoteTokenAmountTotal = new BigNumber(quoteTokenBalanceLP).div(BIG_TEN.pow(quoteTokenDecimals))\n\n  // Amount of token in the LP that are staked in the MC (i.e amount of token * lp ratio)\n  const tokenAmountMc = tokenAmountTotal.times(lpTokenRatio)\n  const quoteTokenAmountMc = quoteTokenAmountTotal.times(lpTokenRatio)\n\n  // Total staked in LP, in quote token value\n  const lpTotalInQuoteToken = quoteTokenAmountMc.times(new BigNumber(2))\n\n  // Only make masterchef calls if farm has pid\n  const [info, totalAllocPoint] =\n    pid || pid === 0\n      ? await multicall(masterchefABI, [\n          {\n            address: getMasterChefAddress(),\n            name: 'poolInfo',\n            params: [pid],\n          },\n          {\n            address: getMasterChefAddress(),\n            name: 'totalAllocPoint',\n          },\n        ])\n      : [null, null]\n\n  const allocPoint = info ? new BigNumber(info.allocPoint?._hex) : BIG_ZERO\n  const poolWeight = totalAllocPoint ? allocPoint.div(new BigNumber(totalAllocPoint)) : BIG_ZERO\n\n  return {\n    tokenAmountMc: tokenAmountMc.toJSON(),\n    quoteTokenAmountMc: quoteTokenAmountMc.toJSON(),\n    tokenAmountTotal: tokenAmountTotal.toJSON(),\n    quoteTokenAmountTotal: quoteTokenAmountTotal.toJSON(),\n    lpTotalSupply: new BigNumber(lpTotalSupply).toJSON(),\n    lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\n    tokenPriceVsQuote: quoteTokenAmountTotal.div(tokenAmountTotal).toJSON(),\n    poolWeight: poolWeight.toJSON(),\n    multiplier: `${allocPoint.div(100).toString()}X`,\n  }\n}\n\nexport default fetchFarm\n","import { Farm } from 'state/types'\nimport fetchPublicFarmData from './fetchPublicFarmData'\n\nconst fetchFarm = async (farm: Farm): Promise<Farm> => {\n  const farmPublicData = await fetchPublicFarmData(farm)\n\n  return { ...farm, ...farmPublicData }\n}\n\nexport default fetchFarm\n","import { FarmConfig } from 'config/constants/types'\nimport fetchFarm from './fetchFarm'\n\nconst fetchFarms = async (farmsToFetch: FarmConfig[]) => {\n  const data = await Promise.all(\n    farmsToFetch.map(async (farmConfig) => {\n      const farm = await fetchFarm(farmConfig)\n      return farm\n    }),\n  )\n  return data\n}\n\nexport default fetchFarms\n","import BigNumber from 'bignumber.js'\nimport { BIG_ONE, BIG_ZERO } from 'utils/bigNumber'\nimport { filterFarmsByQuoteToken } from 'utils/farmsPriceHelpers'\nimport { Farm } from 'state/types'\n\nconst getFarmFromTokenSymbol = (farms: Farm[], tokenSymbol: string, preferredQuoteTokens?: string[]): Farm => {\n  const farmsWithTokenSymbol = farms.filter((farm) => farm.token.symbol === tokenSymbol)\n  const filteredFarm = filterFarmsByQuoteToken(farmsWithTokenSymbol, preferredQuoteTokens)\n  return filteredFarm\n}\n\nconst getFarmBaseTokenPrice = (farm: Farm, quoteTokenFarm: Farm, bnbPriceBusd: BigNumber): BigNumber => {\n  const hasTokenPriceVsQuote = Boolean(farm.tokenPriceVsQuote)\n\n  if (farm.quoteToken.symbol === 'BUSD') {\n    return hasTokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (farm.quoteToken.symbol === 'wBNB') {\n    return hasTokenPriceVsQuote ? bnbPriceBusd.times(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  // We can only calculate profits without a quoteTokenFarm for BUSD/BNB farms\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  // Possible alternative farm quoteTokens:\n  // UST (i.e. MIR-UST), pBTC (i.e. PNT-pBTC), BTCB (i.e. bBADGER-BTCB), ETH (i.e. SUSHI-ETH)\n  // If the farm's quote token isn't BUSD or wBNB, we then use the quote token, of the original farm's quote token\n  // i.e. for farm PNT - pBTC we use the pBTC farm's quote token - BNB, (pBTC - BNB)\n  // from the BNB - pBTC price, we can calculate the PNT - BUSD price\n  if (quoteTokenFarm.quoteToken.symbol === 'wBNB') {\n    const quoteTokenInBusd = bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote)\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\n    const quoteTokenInBusd = quoteTokenFarm.tokenPriceVsQuote\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  // Catch in case token does not have immediate or once-removed BUSD/wBNB quoteToken\n  return BIG_ZERO\n}\n\nconst getFarmQuoteTokenPrice = (farm: Farm, quoteTokenFarm: Farm, bnbPriceBusd: BigNumber): BigNumber => {\n  if (farm.quoteToken.symbol === 'BUSD') {\n    return BIG_ONE\n  }\n\n  if (farm.quoteToken.symbol === 'wBNB') {\n    return bnbPriceBusd\n  }\n\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'wBNB') {\n    return quoteTokenFarm.tokenPriceVsQuote ? bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\n    return quoteTokenFarm.tokenPriceVsQuote ? new BigNumber(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  return BIG_ZERO\n}\n\nconst fetchFarmsPrices = async (farms) => {\n  const bnbBusdFarm = farms.find((farm: Farm) => farm.pid === 2)\n  const bnbPriceBusd = bnbBusdFarm.tokenPriceVsQuote ? BIG_ONE.div(bnbBusdFarm.tokenPriceVsQuote) : BIG_ZERO\n\n  const farmsWithPrices = farms.map((farm) => {\n    const quoteTokenFarm = getFarmFromTokenSymbol(farms, farm.quoteToken.symbol)\n    const baseTokenPrice = getFarmBaseTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\n    const quoteTokenPrice = getFarmQuoteTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\n    const token = { ...farm.token, busdPrice: baseTokenPrice.toJSON() }\n    const quoteToken = { ...farm.quoteToken, busdPrice: quoteTokenPrice.toJSON() }\n    return { ...farm, token, quoteToken }\n  })\n\n  return farmsWithPrices\n}\n\nexport default fetchFarmsPrices\n","import BigNumber from 'bignumber.js'\nimport erc20ABI from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { FarmConfig } from 'config/constants/types'\n\nexport const fetchFarmUserAllowances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAddress] }\n  })\n\n  const rawLpAllowances = await multicall(erc20ABI, calls)\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n  return parsedLpAllowances\n}\n\nexport const fetchFarmUserTokenBalances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return {\n      address: lpContractAddress,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(erc20ABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\nexport const fetchFarmUserStakedBalances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'userInfo',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawStakedBalances = await multicall(masterchefABI, calls)\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\n  })\n  return parsedStakedBalances\n}\n\nexport const fetchFarmUserEarnings = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'pendingCake',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawEarnings = await multicall(masterchefABI, calls)\n  const parsedEarnings = rawEarnings.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parsedEarnings\n}\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport farmsConfig from 'config/constants/farms'\nimport isArchivedPid from 'utils/farmHelpers'\nimport priceHelperLpsConfig from 'config/constants/priceHelperLps'\nimport fetchFarms from './fetchFarms'\nimport fetchFarmsPrices from './fetchFarmsPrices'\nimport {\n  fetchFarmUserEarnings,\n  fetchFarmUserAllowances,\n  fetchFarmUserTokenBalances,\n  fetchFarmUserStakedBalances,\n} from './fetchFarmUser'\nimport { FarmsState, Farm } from '../types'\n\nconst noAccountFarmConfig = farmsConfig.map((farm) => ({\n  ...farm,\n  userData: {\n    allowance: '0',\n    tokenBalance: '0',\n    stakedBalance: '0',\n    earnings: '0',\n  },\n}))\n\nconst initialState: FarmsState = { data: noAccountFarmConfig, loadArchivedFarmsData: false, userDataLoaded: false }\n\nexport const nonArchivedFarms = farmsConfig.filter(({ pid }) => !isArchivedPid(pid))\n\n// Async thunks\nexport const fetchFarmsPublicDataAsync = createAsyncThunk<Farm[], number[]>(\n  'farms/fetchFarmsPublicDataAsync',\n  async (pids) => {\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\n\n    // Add price helper farms\n    const farmsWithPriceHelpers = farmsToFetch.concat(priceHelperLpsConfig)\n\n    const farms = await fetchFarms(farmsWithPriceHelpers)\n    const farmsWithPrices = await fetchFarmsPrices(farms)\n\n    // Filter out price helper LP config farms\n    const farmsWithoutHelperLps = farmsWithPrices.filter((farm: Farm) => {\n      return farm.pid || farm.pid === 0\n    })\n\n    return farmsWithoutHelperLps\n  },\n)\n\ninterface FarmUserDataResponse {\n  pid: number\n  allowance: string\n  tokenBalance: string\n  stakedBalance: string\n  earnings: string\n}\n\nexport const fetchFarmUserDataAsync = createAsyncThunk<FarmUserDataResponse[], { account: string; pids: number[] }>(\n  'farms/fetchFarmUserDataAsync',\n  async ({ account, pids }) => {\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\n    const userFarmAllowances = await fetchFarmUserAllowances(account, farmsToFetch)\n    const userFarmTokenBalances = await fetchFarmUserTokenBalances(account, farmsToFetch)\n    const userStakedBalances = await fetchFarmUserStakedBalances(account, farmsToFetch)\n    const userFarmEarnings = await fetchFarmUserEarnings(account, farmsToFetch)\n\n    return userFarmAllowances.map((farmAllowance, index) => {\n      return {\n        pid: farmsToFetch[index].pid,\n        allowance: userFarmAllowances[index],\n        tokenBalance: userFarmTokenBalances[index],\n        stakedBalance: userStakedBalances[index],\n        earnings: userFarmEarnings[index],\n      }\n    })\n  },\n)\n\nexport const farmsSlice = createSlice({\n  name: 'Farms',\n  initialState,\n  reducers: {\n    setLoadArchivedFarmsData: (state, action) => {\n      const loadArchivedFarmsData = action.payload\n      state.loadArchivedFarmsData = loadArchivedFarmsData\n    },\n  },\n  extraReducers: (builder) => {\n    // Update farms with live data\n    builder.addCase(fetchFarmsPublicDataAsync.fulfilled, (state, action) => {\n      state.data = state.data.map((farm) => {\n        const liveFarmData = action.payload.find((farmData) => farmData.pid === farm.pid)\n        return { ...farm, ...liveFarmData }\n      })\n    })\n\n    // Update farms with user data\n    builder.addCase(fetchFarmUserDataAsync.fulfilled, (state, action) => {\n      action.payload.forEach((userDataEl) => {\n        const { pid } = userDataEl\n        const index = state.data.findIndex((farm) => farm.pid === pid)\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n      state.userDataLoaded = true\n    })\n  },\n})\n\n// Actions\nexport const { setLoadArchivedFarmsData } = farmsSlice.actions\n\nexport default farmsSlice.reducer\n","import React from 'react'\nimport { Button, useWalletModal } from '@pancakeswap/uikit'\nimport useAuth from 'hooks/useAuth'\nimport { useTranslation } from 'contexts/Localization'\n\nconst UnlockButton = (props) => {\n  const { t } = useTranslation()\n  const { login, logout } = useAuth()\n  const { onPresentConnectModal } = useWalletModal(login, logout)\n\n  return (\n    <Button onClick={onPresentConnectModal} {...props}>\n      {t('Unlock Wallet')}\n    </Button>\n  )\n}\n\nexport default UnlockButton\n","import { useContext } from 'react'\nimport { RefreshContext } from 'contexts/RefreshContext'\n\nconst useRefresh = () => {\n  const { fast, slow } = useContext(RefreshContext)\n  return { fastRefresh: fast, slowRefresh: slow }\n}\n\nexport default useRefresh\n","import { useCallback } from 'react'\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\nimport { NoBscProviderError } from '@binance-chain/bsc-connector'\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected,\n} from '@web3-react/injected-connector'\nimport {\n  UserRejectedRequestError as UserRejectedRequestErrorWalletConnect,\n  WalletConnectConnector,\n} from '@web3-react/walletconnect-connector'\nimport { ConnectorNames, connectorLocalStorageKey } from '@pancakeswap/uikit'\nimport { connectorsByName } from 'utils/web3React'\nimport { setupNetwork } from 'utils/wallet'\nimport useToast from 'hooks/useToast'\nimport { profileClear } from 'state/profile'\nimport { useAppDispatch } from 'state'\nimport { useTranslation } from 'contexts/Localization'\n\nconst useAuth = () => {\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { activate, deactivate } = useWeb3React()\n  const { toastError } = useToast()\n\n  const login = useCallback(\n    (connectorID: ConnectorNames) => {\n      const connector = connectorsByName[connectorID]\n      if (connector) {\n        activate(connector, async (error: Error) => {\n          if (error instanceof UnsupportedChainIdError) {\n            const hasSetup = await setupNetwork()\n            if (hasSetup) {\n              activate(connector)\n            }\n          } else {\n            window.localStorage.removeItem(connectorLocalStorageKey)\n            if (error instanceof NoEthereumProviderError || error instanceof NoBscProviderError) {\n              toastError(t('Provider Error'), t('No provider was found'))\n            } else if (\n              error instanceof UserRejectedRequestErrorInjected ||\n              error instanceof UserRejectedRequestErrorWalletConnect\n            ) {\n              if (connector instanceof WalletConnectConnector) {\n                const walletConnector = connector as WalletConnectConnector\n                walletConnector.walletConnectProvider = null\n              }\n              toastError(t('Authorization Error'), t('Please authorize to access your account'))\n            } else {\n              toastError(error.name, error.message)\n            }\n          }\n        })\n      } else {\n        toastError(t('Unable to find connector'), t('The connector config is wrong'))\n      }\n    },\n    [t, activate, toastError],\n  )\n\n  const logout = useCallback(() => {\n    dispatch(profileClear())\n    deactivate()\n    // This localStorage key is set by @web3-react/walletconnect-connector\n    if (window.localStorage.getItem('walletconnect')) {\n      connectorsByName.walletconnect.close()\n      connectorsByName.walletconnect.walletConnectProvider = null\n    }\n  }, [deactivate, dispatch])\n\n  return { login, logout }\n}\n\nexport default useAuth\n","import React from 'react'\nimport { Tag, VerifiedIcon, CommunityIcon, BinanceIcon, RefreshIcon, AutoRenewIcon, TagProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst CoreTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      {t('Core')}\n    </Tag>\n  )\n}\n\nconst CommunityTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"failure\" outline startIcon={<CommunityIcon width=\"18px\" color=\"failure\" mr=\"4px\" />} {...props}>\n      {t('Community')}\n    </Tag>\n  )\n}\n\nconst BinanceTag: React.FC<TagProps> = (props) => {\n  return (\n    <Tag variant=\"binance\" outline startIcon={<BinanceIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      Binance\n    </Tag>\n  )\n}\n\nconst DualTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"textSubtle\" outline {...props}>\n      {t('Dual')}\n    </Tag>\n  )\n}\n\nconst ManualPoolTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"secondary\" outline startIcon={<RefreshIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      {t('Manual')}\n    </Tag>\n  )\n}\n\nconst CompoundingPoolTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"success\" outline startIcon={<AutoRenewIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Auto')}\n    </Tag>\n  )\n}\n\nexport { CoreTag, CommunityTag, BinanceTag, DualTag, ManualPoolTag, CompoundingPoolTag }\n","import random from 'lodash/random'\n\n// Array of available nodes to connect to\nexport const nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\n\nconst getNodeUrl = () => {\n  const randomIndex = random(0, nodes.length - 1)\n  return nodes[randomIndex]\n}\n\nexport default getNodeUrl\n","// Set of helper functions to facilitate wallet setup\n\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { nodes } from './getRpcUrl'\n\n/**\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\n * @returns {boolean} true if the setup succeeded, false otherwise\n */\nexport const setupNetwork = async () => {\n  const provider = (window as WindowChain).ethereum\n  if (provider) {\n    const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n    try {\n      await provider.request({\n        method: 'wallet_addEthereumChain',\n        params: [\n          {\n            chainId: `0x${chainId.toString(16)}`,\n            chainName: 'Binance Smart Chain Mainnet',\n            nativeCurrency: {\n              name: 'BNB',\n              symbol: 'bnb',\n              decimals: 18,\n            },\n            rpcUrls: nodes,\n            blockExplorerUrls: [`${BASE_BSC_SCAN_URL}/`],\n          },\n        ],\n      })\n      return true\n    } catch (error) {\n      console.error(error)\n      return false\n    }\n  } else {\n    console.error(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\n    return false\n  }\n}\n\n/**\n * Prompt the user to add a custom token to metamask\n * @param tokenAddress\n * @param tokenSymbol\n * @param tokenDecimals\n * @param tokenImage\n * @returns {boolean} true if the token has been added, false otherwise\n */\nexport const registerToken = async (\n  tokenAddress: string,\n  tokenSymbol: string,\n  tokenDecimals: number,\n  tokenImage: string,\n) => {\n  const tokenAdded = await (window as WindowChain).ethereum.request({\n    method: 'wallet_watchAsset',\n    params: {\n      type: 'ERC20',\n      options: {\n        address: tokenAddress,\n        symbol: tokenSymbol,\n        decimals: tokenDecimals,\n        image: tokenImage,\n      },\n    },\n  })\n\n  return tokenAdded\n}\n","import { InjectedConnector } from '@web3-react/injected-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport { BscConnector } from '@binance-chain/bsc-connector'\nimport { ConnectorNames } from '@pancakeswap/uikit'\nimport Web3 from 'web3'\nimport getNodeUrl from './getRpcUrl'\n\nconst POLLING_INTERVAL = 12000\nconst rpcUrl = getNodeUrl()\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n\nconst injected = new InjectedConnector({ supportedChainIds: [chainId] })\n\nconst walletconnect = new WalletConnectConnector({\n  rpc: { [chainId]: rpcUrl },\n  bridge: 'https://pancakeswap.bridge.walletconnect.org/',\n  qrcode: true,\n  pollingInterval: POLLING_INTERVAL,\n})\n\nconst bscConnector = new BscConnector({ supportedChainIds: [chainId] })\n\nexport const connectorsByName: { [connectorName in ConnectorNames]: any } = {\n  [ConnectorNames.Injected]: injected,\n  [ConnectorNames.WalletConnect]: walletconnect,\n  [ConnectorNames.BSC]: bscConnector,\n}\n\nexport const getLibrary = (provider): Web3 => {\n  return provider\n}\n","export { default as farmsConfig } from './farms'\nexport { default as poolsConfig } from './pools'\nexport { default as ifosConfig } from './ifo'\n","import { Team } from './types'\n\nconst teams: Team[] = [\n  {\n    id: 1,\n    name: 'Syrup Storm',\n    description: \"The storm's a-comin! Watch out! These bulls are stampeding in a syrupy surge!\",\n    images: {\n      lg: 'syrup-storm-lg.png',\n      md: 'syrup-storm-md.png',\n      sm: 'syrup-storm-sm.png',\n      alt: 'syrup-storm-alt.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/syrup-storm.png',\n    },\n    background: 'syrup-storm-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 2,\n    name: 'Fearsome Flippers',\n    description: \"The flippening is coming. Don't get in these bunnies' way, or you'll get flipped, too!\",\n    images: {\n      lg: 'fearsome-flippers-lg.png',\n      md: 'fearsome-flippers-md.png',\n      sm: 'fearsome-flippers-sm.png',\n      alt: 'fearsome-flippers-alt.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/fearsome-flippers.png',\n    },\n    background: 'fearsome-flippers-bg.svg',\n    textColor: '#FFFFFF',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 3,\n    name: 'Chaotic Cakers',\n    description: 'Can you stand the heat? Stay out of the kitchen or you might get burned to a crisp!',\n    images: {\n      lg: 'chaotic-cakers-lg.png',\n      md: 'chaotic-cakers-md.png',\n      sm: 'chaotic-cakers-sm.png',\n      alt: 'chaotic-cakers-alt.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/chaotic-cakers.png',\n    },\n    background: 'chaotic-cakers-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n]\n\nexport default teams\n","import merge from 'lodash/merge'\nimport teamsList from 'config/constants/teams'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Team } from 'config/constants/types'\nimport makeBatchRequest from 'utils/makeBatchRequest'\nimport { TeamsById, TeamResponse } from 'state/types'\n\nconst profileContract = getProfileContract()\n\nexport const getTeam = async (teamId: number): Promise<Team> => {\n  try {\n    const {\n      0: teamName,\n      2: numberUsers,\n      3: numberPoints,\n      4: isJoinable,\n    } = await profileContract.methods.getTeamProfile(teamId).call()\n    const staticTeamInfo = teamsList.find((staticTeam) => staticTeam.id === teamId)\n\n    return merge({}, staticTeamInfo, {\n      isJoinable,\n      name: teamName,\n      users: numberUsers,\n      points: numberPoints,\n    })\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets on-chain data and merges it with the existing static list of teams\n */\nexport const getTeams = async (): Promise<TeamsById> => {\n  try {\n    const teamsById = teamsList.reduce((accum, team) => {\n      return {\n        ...accum,\n        [team.id]: team,\n      }\n    }, {})\n    const nbTeams = await profileContract.methods.numberTeams().call()\n    const calls = []\n\n    for (let i = 1; i <= nbTeams; i++) {\n      calls.push(profileContract.methods.getTeamProfile(i).call)\n    }\n\n    const teamData = (await makeBatchRequest(calls)) as TeamResponse[]\n    const onChainTeamData = teamData.reduce((accum, team, index) => {\n      const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = team\n\n      return {\n        ...accum,\n        [index + 1]: {\n          name: teamName,\n          users: Number(numberUsers),\n          points: Number(numberPoints),\n          isJoinable,\n        },\n      }\n    }, {})\n\n    return merge({}, teamsById, onChainTeamData)\n  } catch (error) {\n    return null\n  }\n}\n","import { EN } from 'config/localization/languages'\n\nconst publicUrl = process.env.PUBLIC_URL\n\nexport const LS_KEY = 'pancakeswap_language'\n\nexport const fetchLocale = async (locale) => {\n  const response = await fetch(`${publicUrl}/locales/${locale}.json`)\n  const data = await response.json()\n  return data\n}\n\nexport const getLanguageCodeFromLS = () => {\n  try {\n    const codeFromStorage = localStorage.getItem(LS_KEY)\n\n    return codeFromStorage || EN.locale\n  } catch {\n    return EN.locale\n  }\n}\n","import React, { createContext, useCallback, useEffect, useState } from 'react'\nimport { Language } from '@pancakeswap/uikit'\nimport { EN, languages } from 'config/localization/languages'\nimport translations from 'config/localization/translations.json'\nimport { ContextApi, ContextData, ProviderState } from './types'\nimport { LS_KEY, fetchLocale, getLanguageCodeFromLS } from './helpers'\n\nconst initialState: ProviderState = {\n  isFetching: true,\n  currentLanguage: EN,\n}\n\n// Export the translations directly\nexport const languageMap = new Map<Language['locale'], Record<string, string>>()\nlanguageMap.set(EN.locale, translations)\n\nexport const LanguageContext = createContext<ContextApi>(undefined)\n\nexport const LanguageProvider: React.FC = ({ children }) => {\n  const [state, setState] = useState<ProviderState>(() => {\n    const codeFromStorage = getLanguageCodeFromLS()\n\n    return {\n      ...initialState,\n      currentLanguage: languages[codeFromStorage],\n    }\n  })\n  const { currentLanguage } = state\n\n  useEffect(() => {\n    const fetchInitialLocales = async () => {\n      const codeFromStorage = getLanguageCodeFromLS()\n\n      if (codeFromStorage !== EN.locale) {\n        const enLocale = languageMap.get(EN.locale)\n        const currentLocale = await fetchLocale(codeFromStorage)\n        languageMap.set(codeFromStorage, { ...enLocale, ...currentLocale })\n      }\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n      }))\n    }\n\n    fetchInitialLocales()\n  }, [setState])\n\n  const setLanguage = async (language: Language) => {\n    if (!languageMap.has(language.locale)) {\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: true,\n      }))\n\n      const locale = await fetchLocale(language.locale)\n      const enLocale = languageMap.get(EN.locale)\n\n      // Merge the EN locale to ensure that any locale fetched has all the keys\n      languageMap.set(language.locale, { ...enLocale, ...locale })\n      localStorage.setItem(LS_KEY, language.locale)\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    } else {\n      localStorage.setItem(LS_KEY, language.locale)\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    }\n  }\n\n  const translate = useCallback(\n    (key: string, data?: ContextData) => {\n      const translationSet = languageMap.has(currentLanguage.locale)\n        ? languageMap.get(currentLanguage.locale)\n        : languageMap.get(EN.locale)\n      const translatedText = translationSet[key] || key\n\n      // Check the existence of at least one combination of %%, separated by 1 or more non space characters\n      const includesVariable = translatedText.match(/%\\S+?%/gm)\n\n      if (includesVariable && data) {\n        let interpolatedText = translatedText\n        Object.keys(data).forEach((dataKey) => {\n          const templateKey = new RegExp(`%${dataKey}%`, 'g')\n          interpolatedText = interpolatedText.replace(templateKey, data[dataKey].toString())\n        })\n\n        return interpolatedText\n      }\n\n      return translatedText\n    },\n    [currentLanguage],\n  )\n\n  return <LanguageContext.Provider value={{ ...state, setLanguage, t: translate }}>{children}</LanguageContext.Provider>\n}\n","import { useContext } from 'react'\nimport { LanguageContext } from './Provider'\n\nconst useTranslation = () => {\n  const languageContext = useContext(LanguageContext)\n\n  if (languageContext === undefined) {\n    throw new Error('Language context is undefined')\n  }\n\n  return languageContext\n}\n\nexport default useTranslation\n","import BigNumber from 'bignumber.js'\nimport { Farm, Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\ntype UserData =\n  | Pool['userData']\n  | {\n      allowance: number | string\n      stakingTokenBalance: number | string\n      stakedBalance: number | string\n      pendingReward: number | string\n    }\n\nexport const transformUserData = (userData: UserData) => {\n  return {\n    allowance: userData ? new BigNumber(userData.allowance) : BIG_ZERO,\n    stakingTokenBalance: userData ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO,\n    stakedBalance: userData ? new BigNumber(userData.stakedBalance) : BIG_ZERO,\n    pendingReward: userData ? new BigNumber(userData.pendingReward) : BIG_ZERO,\n  }\n}\n\nexport const transformPool = (pool: Pool): Pool => {\n  const { totalStaked, stakingLimit, userData, ...rest } = pool\n\n  return {\n    ...rest,\n    userData: transformUserData(userData),\n    totalStaked: new BigNumber(totalStaked),\n    stakingLimit: new BigNumber(stakingLimit),\n  } as Pool\n}\n\nexport const getTokenPricesFromFarm = (farms: Farm[]) => {\n  return farms.reduce((prices, farm) => {\n    const quoteTokenAddress = getAddress(farm.quoteToken.address).toLocaleLowerCase()\n    const tokenAddress = getAddress(farm.token.address).toLocaleLowerCase()\n    /* eslint-disable no-param-reassign */\n    if (!prices[quoteTokenAddress]) {\n      prices[quoteTokenAddress] = new BigNumber(farm.quoteToken.busdPrice).toNumber()\n    }\n    if (!prices[tokenAddress]) {\n      prices[tokenAddress] = new BigNumber(farm.token.busdPrice).toNumber()\n    }\n    /* eslint-enable no-param-reassign */\n    return prices\n  }, {})\n}\n","import { Campaign } from './types'\n\n/**\n * id: The campaign id (required)\n * type: The type of the achievement\n * title: A string or an object to be translated.\n * Note: If the value is a string it is likely used as data in a translation object\n *\n * badge: Achievement avatar\n */\n\nconst campaigns: Campaign[] = [\n  {\n    id: '511110000',\n    type: 'ifo',\n    title: 'Kalmar',\n    badge: 'ifo-kalm.svg',\n  },\n  {\n    id: '511100000',\n    type: 'ifo',\n    title: 'Hotcross',\n    badge: 'ifo-hotcross.svg',\n  },\n  {\n    id: '511090000',\n    type: 'ifo',\n    title: 'Horizon Protocol',\n    badge: 'ifo-hzn.svg',\n  },\n  {\n    id: '511080000',\n    type: 'ifo',\n    title: 'Belt',\n    badge: 'ifo-belt.svg',\n  },\n  {\n    id: '511070000',\n    type: 'ifo',\n    title: 'Yieldwatch',\n    badge: 'ifo-watch.svg',\n  },\n  {\n    id: '511060000',\n    type: 'ifo',\n    title: 'Berry',\n    badge: 'ifo-bry.svg',\n  },\n  {\n    id: '511050000',\n    type: 'ifo',\n    title: 'Soteria',\n    badge: 'ifo-wsote.svg',\n  },\n  {\n    id: '511040000',\n    type: 'ifo',\n    title: 'Helmet',\n    badge: 'ifo-helmet.svg',\n  },\n  {\n    id: '511030000',\n    type: 'ifo',\n    title: 'Tenet',\n    badge: 'ifo-ten.svg',\n  },\n  {\n    id: '511020000',\n    type: 'ifo',\n    title: 'Ditto',\n    badge: 'ifo-ditto.svg',\n  },\n  {\n    id: '511010000',\n    type: 'ifo',\n    title: 'Blink',\n    badge: 'ifo-blk.svg',\n  },\n  {\n    id: '512010001',\n    type: 'teambattle',\n    title: 'Easter Champion: Gold',\n    badge: 'easter-champion-gold.svg',\n  },\n  {\n    id: '512010002',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010003',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010004',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010005',\n    type: 'teambattle',\n    title: 'Easter Participant: Gold',\n    badge: 'easter-participant-gold.svg',\n  },\n  {\n    id: '512010006',\n    type: 'teambattle',\n    title: 'Easter Champion: Silver',\n    badge: 'easter-champion-silver.svg',\n  },\n  {\n    id: '512010007',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010008',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010009',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010010',\n    type: 'teambattle',\n    title: 'Easter Participant: Silver',\n    badge: 'easter-participant-silver.svg',\n  },\n  {\n    id: '512010011',\n    type: 'teambattle',\n    title: 'Easter Champion: Bronze',\n    badge: 'easter-champion-bronze.svg',\n  },\n  {\n    id: '512010012',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010013',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010014',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010015',\n    type: 'teambattle',\n    title: 'Easter Participant: Bronze',\n    badge: 'easter-participant-bronze.svg',\n  },\n]\n\n/**\n * Transform the campaign config into a map. Keeps the config the same\n * as the others and allows easy access to a campaign by id\n */\nexport const campaignMap = new Map<string, Campaign>()\n\ncampaigns.forEach((campaign) => {\n  campaignMap.set(campaign.id, campaign)\n})\n\nexport default campaigns\n","import { BASE_BSC_SCAN_URL } from 'config'\n\nexport const getBscScanAddressUrl = (address: string) => {\n  return `${BASE_BSC_SCAN_URL}/address/${address}`\n}\n\nexport const getBscScanTransactionUrl = (transactionHash: string) => {\n  return `${BASE_BSC_SCAN_URL}/tx/${transactionHash}`\n}\n\nexport const getBscScanBlockNumberUrl = (block: string | number) => {\n  return `${BASE_BSC_SCAN_URL}/block/${block}`\n}\n\nexport const getBscScanBlockCountdownUrl = (block: string | number) => {\n  return `${BASE_BSC_SCAN_URL}/block/countdown/${block}`\n}\n","import { ContextApi } from 'contexts/Localization/types'\nimport { PageMeta } from './types'\n\nexport const DEFAULT_META: PageMeta = {\n  title: 'ZeusSwap',\n  description:\n    'The #1 AMM and yield farm in Slovakia.',\n  image: 'https://zeusswap.app/logo.png',\n}\n\nexport const getCustomMeta = (path: string, t: ContextApi['t']): PageMeta => {\n  switch (path) {\n    case '/':\n      return {\n        title: `${t('Home')} | ${t('ZeusSwap')}`,\n      }\n    case '/competition':\n      return {\n        title: `${t('Trading Battle')} | ${t('ZeusSwap')}`,\n      }\n    case '/prediction':\n      return {\n        title: `${t('Prediction')} | ${t('ZeusSwap')}`,\n      }\n    case '/farms':\n      return {\n        title: `${t('Farms')} | ${t('ZeusSwap')}`,\n      }\n    case '/pools':\n      return {\n        title: `${t('Pools')} | ${t('ZeusSwap')}`,\n      }\n    case '/lottery':\n      return {\n        title: `${t('Lottery')} | ${t('ZeusSwap')}`,\n      }\n    case '/collectibles':\n      return {\n        title: `${t('Collectibles')} | ${t('ZeusSwap')}`,\n      }\n    case '/ifo':\n      return {\n        title: `${t('Initial Farm Offering')} | ${t('ZeusSwap')}`,\n      }\n    case '/teams':\n      return {\n        title: `${t('Leaderboard')} | ${t('ZeusSwap')}`,\n      }\n    case '/profile/tasks':\n      return {\n        title: `${t('Task Center')} | ${t('ZeusSwap')}`,\n      }\n    case '/profile':\n      return {\n        title: `${t('Your Profile')} | ${t('ZeusSwap')}`,\n      }\n    default:\n      return null\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Helmet } from 'react-helmet-async'\nimport { useLocation } from 'react-router'\nimport { DEFAULT_META, getCustomMeta } from 'config/constants/meta'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport Container from './Container'\n\nconst StyledPage = styled(Container)`\n  min-height: calc(100vh - 64px);\n  padding-top: 16px;\n  padding-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 24px;\n    padding-bottom: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n`\n\nconst PageMeta = () => {\n  const { t } = useTranslation()\n  const { pathname } = useLocation()\n  const cakePriceUsd = usePriceCakeBusd()\n  const cakePriceUsdDisplay = cakePriceUsd.gt(0)\n    ? `$${cakePriceUsd.toNumber().toLocaleString(undefined, {\n        minimumFractionDigits: 3,\n        maximumFractionDigits: 3,\n      })}`\n    : ''\n\n  const pageMeta = getCustomMeta(pathname, t) || {}\n  const { title, description, image } = { ...DEFAULT_META, ...pageMeta }\n  const pageTitle = cakePriceUsdDisplay ? [title, cakePriceUsdDisplay].join(' - ') : title\n\n  return (\n    <Helmet>\n      <title>{pageTitle}</title>\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={image} />\n    </Helmet>\n  )\n}\n\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\n  return (\n    <>\n      <PageMeta />\n      <StyledPage {...props}>{children}</StyledPage>\n    </>\n  )\n}\n\nexport default Page\n","import styled from 'styled-components'\n\nconst Container = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 1200px;\n  padding-left: 16px;\n  padding-right: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 24px;\n    padding-right: 24px;\n  }\n`\n\nexport default Container\n","import Nfts, { IPFS_GATEWAY, nftSources } from 'config/constants/nfts'\nimport { Nft, NftType } from 'config/constants/types'\nimport { getAddress } from './addressHelpers'\nimport { getErc721Contract } from './contractHelpers'\n\n/**\n * Gets the identifier key based on the nft address\n * Helpful for looking up the key when all you have is the address\n */\nexport const getIdentifierKeyFromAddress = (nftAddress: string) => {\n  const nftSource = Object.values(nftSources).find((nftSourceEntry) => {\n    const address = getAddress(nftSourceEntry.address)\n    return address === nftAddress\n  })\n\n  return nftSource ? nftSource.identifierKey : null\n}\n\n/**\n * Some sources like Pancake do not return HTTP tokenURI's\n */\nexport const getTokenUrl = (tokenUri: string) => {\n  if (tokenUri.startsWith('ipfs://')) {\n    return `${IPFS_GATEWAY}/ipfs/${tokenUri.slice(6)}`\n  }\n\n  return tokenUri\n}\n\nexport const getAddressByType = (type: NftType) => {\n  return getAddress(nftSources[type].address)\n}\n\nexport const getTokenUriData = async (nftAddress: string, tokenId: number) => {\n  try {\n    const contract = getErc721Contract(nftAddress)\n    const tokenUri = await contract.methods.tokenURI(tokenId).call()\n    const uriDataResponse = await fetch(getTokenUrl(tokenUri))\n\n    if (!uriDataResponse.ok) {\n      return null\n    }\n\n    const uriData = await uriDataResponse.json()\n    return uriData\n  } catch (error) {\n    console.error('getTokenUriData', error)\n    return null\n  }\n}\n\nexport const getNftByTokenId = async (nftAddress: string, tokenId: number): Promise<Nft | null> => {\n  const uriData = await getTokenUriData(nftAddress, tokenId)\n  const identifierKey = getIdentifierKeyFromAddress(nftAddress)\n\n  // Bail out early if we have no uriData, identifierKey, or the value does not\n  // exist in the object\n  if (!uriData) {\n    return null\n  }\n\n  if (!identifierKey) {\n    return null\n  }\n\n  if (!uriData[identifierKey]) {\n    return null\n  }\n\n  return Nfts.find((nft) => {\n    return uriData[identifierKey].includes(nft.identifier)\n  })\n}\n","export default {\n  masterChef: {\n    97: '',\n    56: '0x53dD4Ff459a03c502a9F1fE408D6EE63aC600555',\n  },\n  sousChef: {\n    97: '',\n    56: '0x30b6Fd64a46f504D5bb0f2258D6d08CC78A5db34',\n  },\n  lottery: {\n    97: '0x99c2EcD51d52c036B00130d882Bc65f20Fdecf9f',\n    56: '0x3C3f2049cc17C136a604bE23cF7E42745edf3b91',\n  },\n  lotteryNFT: {\n    97: '0x8175c10383511b3a1C68f9dB222dc14A19CC950e',\n    56: '0x5e74094Cd416f55179DBd0E45b1a8ED030e396A1',\n  },\n  lotteryV2: {\n    97: '0x4D8B718b4e617ea49bCe6B508c23353Cc7bADd28',\n    56: '',\n  },\n  multiCall: {\n    56: '0xfF6FD90A470Aaa0c1B8A54681746b07AcdFedc9B',\n    97: '',\n  },\n  pancakeProfile: {\n    56: '0xDf4dBf6536201370F95e06A0F8a7a70fE40E388a',\n    97: '0x4B683C7E13B6d5D7fd1FeA9530F451954c1A7c8A',\n  },\n  pancakeRabbits: {\n    56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\n    97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n  },\n  bunnyFactory: {\n    56: '0xfa249Caa1D16f75fa159F7DFBAc0cC5EaB48CeFf',\n    97: '0x707CBF373175fdB601D34eeBF2Cf665d08f01148',\n  },\n  claimRefund: {\n    56: '0xE7e53A7e9E3Cf6b840f167eF69519175c497e149',\n    97: '',\n  },\n  pointCenterIfo: {\n    56: '0x3C6919b132462C1FEc572c6300E83191f4F0012a',\n    97: '0xd2Ac1B1728Bb1C11ae02AB6e75B76Ae41A2997e3',\n  },\n  bunnySpecial: {\n    56: '0xFee8A195570a18461146F401d6033f5ab3380849',\n    97: '0x7b7b1583De1DeB32Ce6605F6deEbF24A0671c17C',\n  },\n  tradingCompetition: {\n    56: '0xd718baa0B1F4f70dcC8458154042120FFE0DEFFA',\n    97: '0xC787F45B833721ED3aC46E99b703B3E1E01abb97',\n  },\n  easterNft: {\n    56: '0x23c41D28A239dDCAABd1bb1deF8d057189510066',\n    97: '0x24ec6962dbe874F6B67B5C50857565667fA0854F'\n  },\n  cakeVault: {\n    56: '',\n    97: '',\n  },\n  predictions: {\n    56: '0x516ffd7D1e0Ca40b1879935B2De87cb20Fc1124b',\n    97: '0x4f3140C74789F1D809420343ea83BcE52B7bbAA5',\n  },\n  chainlinkOracle: {\n    56: '0x0567F2323251f0Aab15c8dFb1967E4e8A7D42aeE',\n    97: '',\n  },\n}\n","import { MAINNET_CHAIN_ID } from 'config'\nimport addresses from 'config/constants/contracts'\nimport tokens from 'config/constants/tokens'\nimport { Address } from 'config/constants/types'\n\nexport const getAddress = (address: Address): string => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  return address[chainId] ? address[chainId] : address[MAINNET_CHAIN_ID]\n}\n\nexport const getCakeAddress = () => {\n  return getAddress(tokens.zeus.address)\n}\nexport const getMasterChefAddress = () => {\n  return getAddress(addresses.masterChef)\n}\nexport const getMulticallAddress = () => {\n  return getAddress(addresses.multiCall)\n}\nexport const getWbnbAddress = () => {\n  return getAddress(tokens.wbnb.address)\n}\nexport const getLotteryAddress = () => {\n  return getAddress(addresses.lottery)\n}\nexport const getLotteryTicketAddress = () => {\n  return getAddress(addresses.lotteryNFT)\n}\nexport const getLotteryV2Address = () => {\n  return getAddress(addresses.lotteryV2)\n}\nexport const getPancakeProfileAddress = () => {\n  return getAddress(addresses.pancakeProfile)\n}\nexport const getPancakeRabbitsAddress = () => {\n  return getAddress(addresses.pancakeRabbits)\n}\nexport const getBunnyFactoryAddress = () => {\n  return getAddress(addresses.bunnyFactory)\n}\nexport const getClaimRefundAddress = () => {\n  return getAddress(addresses.claimRefund)\n}\nexport const getPointCenterIfoAddress = () => {\n  return getAddress(addresses.pointCenterIfo)\n}\nexport const getBunnySpecialAddress = () => {\n  return getAddress(addresses.bunnySpecial)\n}\nexport const getTradingCompetitionAddress = () => {\n  return getAddress(addresses.tradingCompetition)\n}\nexport const getEasterNftAddress = () => {\n  return getAddress(addresses.easterNft)\n}\nexport const getCakeVaultAddress = () => {\n  return getAddress(addresses.cakeVault)\n}\nexport const getPredictionsAddress = () => {\n  return getAddress(addresses.predictions)\n}\nexport const getChainlinkOracleAddress = () => {\n  return getAddress(addresses.chainlinkOracle)\n}\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserStakedBalance, updateUserBalance } from 'state/actions'\nimport { stake, sousStake, sousStakeBnb } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nconst useStake = (pid: number) => {\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      const txHash = await stake(masterChefContract, pid, amount, account)\n      console.info(txHash)\n    },\n    [account, masterChefContract, pid],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport const useSousStake = (sousId: number, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleStake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        await stake(masterChefContract, 0, amount, account)\n      } else if (isUsingBnb) {\n        await sousStakeBnb(sousChefContract, amount, account)\n      } else {\n        await sousStake(sousChefContract, amount, decimals, account)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n    },\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStake\n","import tokens from './tokens'\nimport farms from './farms'\nimport { Ifo, Token } from './types'\n\nconst cakeBnbLpToken: Token = {\n  symbol: farms[1].lpSymbol,\n  address: farms[1].lpAddresses,\n  decimals: 18,\n}\n\nconst ifos: Ifo[] = [\n  {\n    id: 'kalmar',\n    address: '0x1aFB32b76696CdF05593Ca3f3957AEFB23a220FB',\n    isActive: true,\n    name: 'Kalmar (KALM)',\n    poolBasic: {\n      saleAmount: '375,000 KALM',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '875,000 KALM',\n      raiseAmount: '$2,500,000',\n      cakeToBurn: '$1,250,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.kalm,\n    releaseBlockNumber: 7707736,\n    campaignId: '511110000',\n    articleUrl: 'https://pancakeswap.medium.com/kalmar-kalm-ifo-to-be-hosted-on-pancakeswap-4540059753e4',\n    tokenOfferingPrice: 2.0,\n    version: 2,\n  },\n  {\n    id: 'hotcross',\n    address: '0xb664cdbe385656F8c54031c0CB12Cea55b584b63',\n    isActive: false,\n    name: 'Hot Cross (HOTCROSS)',\n    poolBasic: {\n      saleAmount: '15,000,000 HOTCROSS',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '35,000,000 HOTCROSS',\n      raiseAmount: '$1,750,000',\n      cakeToBurn: '$875,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.hotcross,\n    releaseBlockNumber: 7477900,\n    campaignId: '511100000',\n    articleUrl: 'https://pancakeswap.medium.com/hot-cross-hotcross-ifo-to-be-hosted-on-pancakeswap-10e70f1f6841',\n    tokenOfferingPrice: 0.05,\n    version: 2,\n  },\n  {\n    id: 'horizon',\n    address: '0x6137B571f7F1E44839ae10310a08be86D1A4D03B',\n    isActive: false,\n    name: 'Horizon Protocol (HZN)',\n    poolBasic: {\n      saleAmount: '3,000,000 HZN',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '7,000,000 HZN',\n      raiseAmount: '$1,750,000',\n      cakeToBurn: '$875,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.hzn,\n    releaseBlockNumber: 6581111,\n    campaignId: '511090000',\n    articleUrl: 'https://pancakeswap.medium.com/horizon-protocol-hzn-ifo-to-be-hosted-on-pancakeswap-51f79601c9d8',\n    tokenOfferingPrice: 0.25,\n    version: 2,\n  },\n  {\n    id: 'belt',\n    address: '0xc9FBedC033a1c479a6AD451ffE463025E92a1d38',\n    isActive: false,\n    name: 'Belt (BELT)',\n    poolUnlimited: {\n      saleAmount: '150,000 BELT',\n      raiseAmount: '$3,000,000',\n      cakeToBurn: '$1,500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.belt,\n    releaseBlockNumber: 5493919,\n    campaignId: '511080000',\n    articleUrl: 'https://pancakeswap.medium.com/belt-fi-belt-ifo-to-be-hosted-on-pancakeswap-353585117e32',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'watch',\n    address: '0x55344b55C71Ad8834C397E6e08dF5195cF84fe6d',\n    isActive: false,\n    name: 'Yieldwatch (WATCH)',\n    poolUnlimited: {\n      saleAmount: '8,000,000 WATCH',\n      raiseAmount: '$800,000',\n      cakeToBurn: '$400,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.watch,\n    releaseBlockNumber: 5294924,\n    campaignId: '511070000',\n    articleUrl: 'https://pancakeswap.medium.com/yieldwatch-watch-ifo-to-be-hosted-on-pancakeswap-d24301f17241',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'berry',\n    address: '0x5d028cE3435B2bB9AceBfaC599EEbA1ccD63d7dd',\n    isActive: false,\n    name: 'Berry (BRY)',\n    poolUnlimited: {\n      saleAmount: '2,000,000 BRY',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.bry,\n    releaseBlockNumber: 4750968,\n    campaignId: '511060000',\n    articleUrl: 'https://pancakeswap.medium.com/berry-bry-ifo-to-be-hosted-on-pancakeswap-b4f9095e9cdb',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'soteria',\n    address: '0x9C21123D94b93361a29B2C2EFB3d5CD8B17e0A9e',\n    isActive: false,\n    name: 'Soteria (wSOTE)',\n    poolUnlimited: {\n      saleAmount: '1,500,000 wSOTE',\n      raiseAmount: '$525,000',\n      cakeToBurn: '$262,500',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.wsote,\n    releaseBlockNumber: 4086064,\n    campaignId: '511050000',\n    articleUrl: 'https://pancakeswap.medium.com/soteria-sota-ifo-to-be-hosted-on-pancakeswap-64b727c272ae',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'helmet',\n    address: '0xa32509d760ee47Eb2Be96D338b5d69B5FBa4eFEB',\n    isActive: false,\n    name: 'Helmet.insure (Helmet)',\n    poolUnlimited: {\n      saleAmount: '10,000,000 Helmet',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.helmet,\n    releaseBlockNumber: 3771926,\n    campaignId: '511040000',\n    articleUrl: 'https://pancakeswap.medium.com/1-000-000-helmet-helmet-ifo-to-be-hosted-on-pancakeswap-3379a2a89a67',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'tenet',\n    address: '0xB922aA19A2603A07C6C9ED6c236618C9bac51f06',\n    isActive: false,\n    name: 'Tenet (TEN)',\n    poolUnlimited: {\n      saleAmount: '1,000,000 TEN',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.ten,\n    releaseBlockNumber: 3483883,\n    campaignId: '511030000',\n    articleUrl: 'https://pancakeswap.medium.com/tenet-ten-ifo-to-be-hosted-on-pancakeswap-b7e1eb4cb272',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'ditto',\n    address: '0x570c9eB19553526Fb35895a531928E19C7D20788',\n    isActive: false,\n    name: 'Ditto (DITTO)',\n    poolUnlimited: {\n      saleAmount: '700,000 DITTO',\n      raiseAmount: '$630,000',\n      cakeToBurn: '$315,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.ditto,\n    releaseBlockNumber: 3279767,\n    campaignId: '511020000',\n    articleUrl: 'https://pancakeswap.medium.com/ditto-money-ditto-ifo-to-be-hosted-on-pancakeswap-342da3059a66',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'blink',\n    address: '0x44a9Cc8463EC00937242b660BF65B10365d99baD',\n    isActive: false,\n    name: 'BLINk (BLK)',\n    poolUnlimited: {\n      saleAmount: '100,000,000 BLINK',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.blink,\n    releaseBlockNumber: 3279767,\n    campaignId: '511010000',\n    articleUrl: 'https://medium.com/pancakeswap/1-000-000-ifo-blink-joins-pancakeswap-15841800bdd8',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n]\n\nexport default ifos\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { BlockState } from '../types'\n\nconst initialState: BlockState = { currentBlock: 0, initialBlock: 0 }\n\nexport const blockSlice = createSlice({\n  name: 'Block',\n  initialState,\n  reducers: {\n    setBlock: (state, action: PayloadAction<number>) => {\n      if (state.initialBlock === 0) {\n        state.initialBlock = action.payload\n      }\n\n      state.currentBlock = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { setBlock } = blockSlice.actions\n\nexport default blockSlice.reducer\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { CollectiblesState } from 'state/types'\nimport { nftSources } from 'config/constants/nfts'\nimport { NftType } from 'config/constants/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { getErc721Contract } from 'utils/contractHelpers'\nimport { getNftByTokenId } from 'utils/collectibles'\n\nconst initialState: CollectiblesState = {\n  isInitialized: false,\n  isLoading: true,\n  data: {},\n}\n\ntype NftSourceItem = [number, string]\n\n// Thunks\nexport const fetchWalletNfts = createAsyncThunk<NftSourceItem[], string>(\n  'collectibles/fetchWalletNfts',\n  async (account) => {\n    // For each nft source get nft data\n    const nftSourcePromises = Object.keys(nftSources).map(async (nftSourceType) => {\n      const { address: addressObj } = nftSources[nftSourceType as NftType]\n      const address = getAddress(addressObj)\n      const contract = getErc721Contract(address)\n\n      const getTokenIdAndData = async (index: number) => {\n        try {\n          const tokenId = await contract.methods.tokenOfOwnerByIndex(account, index).call()\n          const walletNft = await getNftByTokenId(address, tokenId)\n          return [Number(tokenId), walletNft.identifier]\n        } catch (error) {\n          console.error('getTokenIdAndData', error)\n          return null\n        }\n      }\n\n      const balanceOfResponse = await contract.methods.balanceOf(account).call()\n      const balanceOf = Number(balanceOfResponse)\n\n      if (balanceOf === 0) {\n        return []\n      }\n\n      const nftDataFetchPromises = []\n\n      // For each index get the tokenId and data associated with it\n      for (let i = 0; i < balanceOf; i++) {\n        nftDataFetchPromises.push(getTokenIdAndData(i))\n      }\n\n      const nftData = await Promise.all(nftDataFetchPromises)\n      return nftData\n    })\n\n    const nftSourceData = await Promise.all(nftSourcePromises)\n\n    return nftSourceData.flat()\n  },\n)\n\nexport const collectiblesSlice = createSlice({\n  name: 'collectibles',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchWalletNfts.pending, (state) => {\n      state.isLoading = true\n    })\n    builder.addCase(fetchWalletNfts.fulfilled, (state, action) => {\n      state.isLoading = false\n      state.isInitialized = true\n      state.data = action.payload.reduce((accum, association) => {\n        if (!association) {\n          return accum\n        }\n\n        const [tokenId, identifier] = association as NftSourceItem\n\n        return {\n          ...accum,\n          [identifier]: accum[identifier] ? [...accum[identifier], tokenId] : [tokenId],\n        }\n      }, {})\n    })\n  },\n})\n\nexport default collectiblesSlice.reducer\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, LinkExternal, Flex, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { tokenEarnedPerThousandDollarsCompounding, getRoi } from 'utils/compoundApyHelpers'\n\ninterface ApyCalculatorModalProps {\n  onDismiss?: () => void\n  tokenPrice: number\n  apr: number\n  linkLabel: string\n  linkHref: string\n  earningTokenSymbol?: string\n  roundingDecimals?: number\n  compoundFrequency?: number\n  performanceFee?: number\n}\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, auto);\n  grid-template-rows: repeat(4, auto);\n  margin-bottom: 12px;\n`\n\nconst GridItem = styled.div``\n\nconst GridHeaderItem = styled.div`\n  max-width: 180px;\n`\n\nconst ApyCalculatorModal: React.FC<ApyCalculatorModalProps> = ({\n  onDismiss,\n  tokenPrice,\n  apr,\n  linkLabel,\n  linkHref,\n  earningTokenSymbol = 'CAKE',\n  roundingDecimals = 2,\n  compoundFrequency = 1,\n  performanceFee = 0,\n}) => {\n  const { t } = useTranslation()\n  const oneThousandDollarsWorthOfToken = 1000 / tokenPrice\n\n  const tokenEarnedPerThousand1D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 1,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand7D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 7,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand30D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 30,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand365D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 365,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n\n  return (\n    <Modal title={t('ROI')} onDismiss={onDismiss}>\n      <Grid>\n        <GridHeaderItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"12px\">\n            {t('Timeframe')}\n          </Text>\n        </GridHeaderItem>\n        <GridHeaderItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mr=\"12px\" ml=\"12px\" mb=\"12px\">\n            {t('ROI')}\n          </Text>\n        </GridHeaderItem>\n        <GridHeaderItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"12px\">\n            {t('%symbol% per $1,000', { symbol: earningTokenSymbol })}\n          </Text>\n        </GridHeaderItem>\n        {/* 1 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 1 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text mr=\"12px\" ml=\"12px\">\n            {getRoi({ amountEarned: tokenEarnedPerThousand1D, amountInvested: oneThousandDollarsWorthOfToken }).toFixed(\n              roundingDecimals,\n            )}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{tokenEarnedPerThousand1D}</Text>\n        </GridItem>\n        {/* 7 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 7 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text mr=\"12px\" ml=\"12px\">\n            {getRoi({ amountEarned: tokenEarnedPerThousand7D, amountInvested: oneThousandDollarsWorthOfToken }).toFixed(\n              roundingDecimals,\n            )}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{tokenEarnedPerThousand7D}</Text>\n        </GridItem>\n        {/* 30 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 30 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text mr=\"12px\" ml=\"12px\">\n            {getRoi({\n              amountEarned: tokenEarnedPerThousand30D,\n              amountInvested: oneThousandDollarsWorthOfToken,\n            }).toFixed(roundingDecimals)}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{tokenEarnedPerThousand30D}</Text>\n        </GridItem>\n        {/* 365 day / APY row */}\n        <GridItem style={{ maxWidth: '180px' }}>\n          <Text>{t('365d(APY)')}</Text>\n        </GridItem>\n        <GridItem>\n          <Text mr=\"12px\" ml=\"12px\">\n            {getRoi({\n              amountEarned: tokenEarnedPerThousand365D,\n              amountInvested: oneThousandDollarsWorthOfToken,\n            }).toFixed(roundingDecimals)}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{tokenEarnedPerThousand365D}</Text>\n        </GridItem>\n      </Grid>\n      <Flex justifyContent=\"center\">\n        <Box mb=\"28px\" maxWidth=\"280px\">\n          <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\">\n            {t(\n              'Calculated based on current rates. Compounding %freq%x daily. Rates are estimates provided for your convenience only, and by no means represent guaranteed returns.',\n              { freq: compoundFrequency.toLocaleString() },\n            )}\n          </Text>\n          {performanceFee > 0 && (\n            <Text mt=\"14px\" fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\">\n              {t('All estimated rates take into account this pool’s %fee%% performance fee', { fee: performanceFee })}\n            </Text>\n          )}\n        </Box>\n      </Flex>\n      <Flex justifyContent=\"center\">\n        <LinkExternal href={linkHref}>{linkLabel}</LinkExternal>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default ApyCalculatorModal\n","import { request, gql } from 'graphql-request'\nimport { campaignMap } from 'config/constants/campaigns'\nimport { GRAPH_API_PROFILE } from 'config/constants/endpoints'\nimport { Achievement } from 'state/types'\nimport { getAchievementTitle, getAchievementDescription } from 'utils/achievements'\n\ninterface UserPointIncreaseEvent {\n  campaignId: string\n  id: string // wallet address\n  points: string\n}\n\n/**\n * Gets all user point increase events on the profile filtered by wallet address\n */\nexport const getUserPointIncreaseEvents = async (account: string): Promise<UserPointIncreaseEvent[]> => {\n  try {\n    const { user } = await request(\n      GRAPH_API_PROFILE,\n      gql`\n        query getUserPointIncreaseEvents($account: ID!) {\n          user(id: $account) {\n            points {\n              id\n              campaignId\n              points\n            }\n          }\n        }\n      `,\n      {\n        account: account.toLowerCase(),\n      },\n    )\n\n    return user.points\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets all user point increase events and adds achievement meta\n */\nexport const getAchievements = async (account: string): Promise<Achievement[]> => {\n  const pointIncreaseEvents = await getUserPointIncreaseEvents(account)\n\n  if (!pointIncreaseEvents) {\n    return []\n  }\n\n  return pointIncreaseEvents.reduce((accum, userPoint) => {\n    const campaignMeta = campaignMap.get(userPoint.campaignId)\n\n    return [\n      ...accum,\n      {\n        id: userPoint.campaignId,\n        type: campaignMeta.type,\n        address: userPoint.id,\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: Number(userPoint.points),\n      },\n    ]\n  }, [])\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice, Dispatch, PayloadAction } from '@reduxjs/toolkit'\nimport { AchievementState, Achievement } from '../types'\nimport { getAchievements } from './helpers'\n\nconst initialState: AchievementState = {\n  data: [],\n}\n\nexport const achievementSlice = createSlice({\n  name: 'achievements',\n  initialState,\n  reducers: {\n    addAchievement: (state, action: PayloadAction<Achievement>) => {\n      state.data.push(action.payload)\n    },\n    addAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = [...state.data, ...action.payload]\n    },\n    setAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = action.payload\n    },\n    clearAchievements: (state) => {\n      state.data = []\n    },\n  },\n})\n\n// Actions\nexport const { addAchievement, addAchievements, setAchievements, clearAchievements } = achievementSlice.actions\n\n// Thunks\nexport const fetchAchievements = (account: string) => async (dispatch: Dispatch) => {\n  try {\n    const achievements = await getAchievements(account)\n    dispatch(setAchievements(achievements))\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport default achievementSlice.reducer\n","import { Farm } from 'state/types'\n\n/**\n * Returns the first farm with a quote token that matches from an array of preferred quote tokens\n * @param farms Array of farms\n * @param preferredQuoteTokens Array of preferred quote tokens\n * @returns A preferred farm, if found - or the first element of the farms array\n */\nexport const filterFarmsByQuoteToken = (farms: Farm[], preferredQuoteTokens: string[] = ['BUSD', 'wBNB']): Farm => {\n  const preferredFarm = farms.find((farm) => {\n    return preferredQuoteTokens.some((quoteToken) => {\n      return farm.quoteToken.symbol === quoteToken\n    })\n  })\n  return preferredFarm || farms[0]\n}\n\nexport default filterFarmsByQuoteToken\n","import React, { useState } from 'react'\nimport { ThemeProvider as SCThemeProvider } from 'styled-components'\nimport { light, dark } from '@pancakeswap/uikit'\n\nconst CACHE_KEY = 'IS_DARK'\n\nconst ThemeContext = React.createContext({ isDark: null, toggleTheme: () => null })\n\nconst ThemeContextProvider = ({ children }) => {\n  const [isDark, setIsDark] = useState(() => {\n    const isDarkUserSetting = localStorage.getItem(CACHE_KEY)\n    return isDarkUserSetting ? JSON.parse(isDarkUserSetting) : false\n  })\n\n  const toggleTheme = () => {\n    setIsDark((prevState) => {\n      localStorage.setItem(CACHE_KEY, JSON.stringify(!prevState))\n      return !prevState\n    })\n  }\n\n  return (\n    <ThemeContext.Provider value={{ isDark, toggleTheme }}>\n      <SCThemeProvider theme={isDark ? dark : light}>{children}</SCThemeProvider>\n    </ThemeContext.Provider>\n  )\n}\n\nexport { ThemeContext, ThemeContextProvider }\n","import BigNumber from 'bignumber.js'\nimport { BIG_TEN } from './bigNumber'\n\n/**\n * Take a formatted amount, e.g. 15 BNB and convert it to full decimal value, e.g. 15000000000000000\n */\nexport const getDecimalAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).times(BIG_TEN.pow(decimals))\n}\n\nexport const getBalanceAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).dividedBy(BIG_TEN.pow(decimals))\n}\n\n/**\n * This function is not really necessary but is used throughout the site.\n */\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  return getBalanceAmount(balance, decimals).toNumber()\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18, decimalsToAppear?: number) => {\n  return getBalanceAmount(balance, decimals).toFixed(decimalsToAppear)\n}\n\nexport const formatNumber = (number: number, minPrecision = 2, maxPrecision = 2) => {\n  const options = {\n    minimumFractionDigits: minPrecision,\n    maximumFractionDigits: maxPrecision,\n  }\n  return number.toLocaleString(undefined, options)\n}\n","import React, { createContext, ReactNode, useCallback, useState } from 'react'\nimport { kebabCase } from 'lodash'\nimport { Toast, toastTypes } from '@pancakeswap/uikit'\nimport { ToastContextApi } from './types'\n\nexport const ToastsContext = createContext<ToastContextApi>(undefined)\n\nexport const ToastsProvider: React.FC = ({ children }) => {\n  const [toasts, setToasts] = useState<ToastContextApi['toasts']>([])\n\n  const toast = useCallback(\n    ({ title, description, type }: Omit<Toast, 'id'>) => {\n      setToasts((prevToasts) => {\n        const id = kebabCase(title)\n\n        // Remove any existing toasts with the same id\n        const currentToasts = prevToasts.filter((prevToast) => prevToast.id !== id)\n\n        return [\n          {\n            id,\n            title,\n            description,\n            type,\n          },\n          ...currentToasts,\n        ]\n      })\n    },\n    [setToasts],\n  )\n\n  const toastError = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.DANGER })\n  }\n  const toastInfo = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.INFO })\n  }\n  const toastSuccess = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.SUCCESS })\n  }\n  const toastWarning = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.WARNING })\n  }\n  const clear = () => setToasts([])\n  const remove = (id: string) => {\n    setToasts((prevToasts) => prevToasts.filter((prevToast) => prevToast.id !== id))\n  }\n\n  return (\n    <ToastsContext.Provider value={{ toasts, clear, remove, toastError, toastInfo, toastSuccess, toastWarning }}>\n      {children}\n    </ToastsContext.Provider>\n  )\n}\n","import { useEffect, useRef } from 'react'\n\nconst useTabVisibility = () => {\n  const tabVisibleRef = useRef(true)\n\n  useEffect(() => {\n    const onVisibilityChange = () => {\n      tabVisibleRef.current = !document.hidden\n    }\n\n    window.addEventListener('visibilitychange', onVisibilityChange)\n\n    return () => {\n      window.removeEventListener('visibilitychange', onVisibilityChange)\n    }\n  }, [])\n\n  return { tabVisibleRef }\n}\n\nexport default useTabVisibility\n","import React, { useState, useEffect } from 'react'\nimport useTabVisibility from 'hooks/useTabVisibility'\n\nconst FAST_INTERVAL = 10000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n  const { tabVisibleRef } = useTabVisibility()\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (tabVisibleRef.current) {\n        setFast((prev) => prev + 1)\n      }\n    }, FAST_INTERVAL)\n    return () => clearInterval(interval)\n  }, [tabVisibleRef])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (tabVisibleRef.current) {\n        setSlow((prev) => prev + 1)\n      }\n    }, SLOW_INTERVAL)\n    return () => clearInterval(interval)\n  }, [tabVisibleRef])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n","import BigNumber from 'bignumber.js'\n\nexport const BIG_ZERO = new BigNumber(0)\nexport const BIG_ONE = new BigNumber(1)\nexport const BIG_NINE = new BigNumber(9)\nexport const BIG_TEN = new BigNumber(10)\n","import identity from 'lodash/identity'\nimport { useEffect, useState } from 'react'\n\ninterface UsePersistStateOptions {\n  localStorageKey: string\n  hydrate?: (value: any) => any\n  dehydrate?: (value: any) => any\n}\n\nconst defaultOptions = {\n  hydrate: identity,\n  dehydrate: identity,\n}\n\n/**\n * Same as \"useState\" but saves the value to local storage each time it changes\n */\nconst usePersistState = (initialValue: any, userOptions: UsePersistStateOptions) => {\n  const { localStorageKey, hydrate, dehydrate } = { ...defaultOptions, ...userOptions }\n  const [value, setValue] = useState(() => {\n    try {\n      const valueFromLS = localStorage.getItem(localStorageKey)\n\n      return valueFromLS ? hydrate(JSON.parse(valueFromLS)) : initialValue\n    } catch (error) {\n      return initialValue\n    }\n  })\n\n  useEffect(() => {\n    localStorage.setItem(localStorageKey, JSON.stringify(dehydrate(value)))\n  }, [value, localStorageKey, dehydrate])\n\n  return [value, setValue]\n}\n\nexport default usePersistState\n","import { Campaign } from 'config/constants/types'\nimport { getPointCenterIfoContract } from 'utils/contractHelpers'\nimport ifosList from 'config/constants/ifo'\nimport { campaignMap } from 'config/constants/campaigns'\nimport { Achievement, TranslatableText } from 'state/types'\nimport makeBatchRequest from './makeBatchRequest'\n\ninterface IfoMapResponse {\n  thresholdToClaim: string\n  campaignId: string\n  numberPoints: string\n}\n\nexport const getAchievementTitle = (campaign: Campaign): TranslatableText => {\n  switch (campaign.type) {\n    case 'ifo':\n      return {\n        key: 'IFO Shopper: %title%',\n        data: {\n          title: campaign.title as string,\n        },\n      }\n    default:\n      return campaign.title\n  }\n}\n\nexport const getAchievementDescription = (campaign: Campaign): TranslatableText => {\n  switch (campaign.type) {\n    case 'ifo':\n      return {\n        key: 'Committed more than $5 worth of LP in the %title% IFO',\n        data: {\n          title: campaign.title as string,\n        },\n      }\n    default:\n      return campaign.description\n  }\n}\n\n/**\n * Checks if a wallet is eligible to claim points from valid IFO's\n */\nexport const getClaimableIfoData = async (account: string): Promise<Achievement[]> => {\n  const ifoCampaigns = ifosList.filter((ifoItem) => ifoItem.campaignId !== undefined)\n  const ifoCampaignAddresses = ifoCampaigns.map((ifoItem) => ifoItem.address)\n  const pointCenterContract = getPointCenterIfoContract()\n\n  // Returns the claim status of every IFO with a campaign ID\n  const claimStatuses = (await pointCenterContract.methods\n    .checkClaimStatuses(account, ifoCampaignAddresses)\n    .call()) as boolean[]\n\n  // Get IFO data for all IFO's that are eligible to claim\n  const claimableIfoData = (await makeBatchRequest(\n    claimStatuses.reduce((accum, claimStatus, index) => {\n      if (claimStatus === true) {\n        return [...accum, pointCenterContract.methods.ifos(ifoCampaignAddresses[index]).call]\n      }\n\n      return accum\n    }, []),\n  )) as IfoMapResponse[]\n\n  // Transform response to an Achievement\n  return claimableIfoData.reduce((accum, claimableIfoDataItem) => {\n    if (!campaignMap.has(claimableIfoDataItem.campaignId)) {\n      return accum\n    }\n\n    const campaignMeta = campaignMap.get(claimableIfoDataItem.campaignId)\n    const { address } = ifoCampaigns.find((ifoCampaign) => ifoCampaign.campaignId === claimableIfoDataItem.campaignId)\n\n    return [\n      ...accum,\n      {\n        address,\n        id: claimableIfoDataItem.campaignId,\n        type: 'ifo',\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: Number(claimableIfoDataItem.numberPoints),\n      },\n    ]\n  }, [])\n}\n","import BigNumber from 'bignumber.js/bignumber'\nimport { BIG_TEN } from 'utils/bigNumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const BSC_BLOCK_TIME = 3\n\n// CAKE_PER_BLOCK details\n// 40 CAKE is minted per block\n// 20 CAKE per block is sent to Burn pool (A farm just for burning cake)\n// 10 CAKE per block goes to CAKE syrup pool\n// 10 CAKE per block goes to Yield farms and lottery\n// CAKE_PER_BLOCK in config/index.ts = 40 as we only change the amount sent to the burn pool which is effectively a farm.\n// CAKE/Block in src/views/Home/components/CakeStats.tsx = 20 (40 - Amount sent to burn pool)\n\nexport const CAKE_PER_BLOCK = new BigNumber(40)\nexport const BLOCKS_PER_YEAR = new BigNumber((60 / BSC_BLOCK_TIME) * 60 * 24 * 365) // 10512000\nexport const CAKE_PER_YEAR = CAKE_PER_BLOCK.times(BLOCKS_PER_YEAR)\nexport const BASE_URL = 'https://pancakeswap.finance'\nexport const BASE_EXCHANGE_URL = 'https://exchange.pancakeswap.finance'\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_EXCHANGE_URL}/#/add`\nexport const BASE_LIQUIDITY_POOL_URL = `${BASE_EXCHANGE_URL}/#/pool`\nexport const BASE_BSC_SCAN_URL = 'https://bscscan.com'\nexport const LOTTERY_MAX_NUMBER_OF_TICKETS = 50\nexport const LOTTERY_TICKET_PRICE = 1\nexport const DEFAULT_TOKEN_DECIMAL = BIG_TEN.pow(18)\nexport const DEFAULT_GAS_LIMIT = 200000\nexport const DEFAULT_GAS_PRICE = 5\nexport const TESTNET_CHAIN_ID = '97'\nexport const MAINNET_CHAIN_ID = '56'\n","export const Latinise = {\n  latin_map: {\n    τ: 't',\n    Τ: 'T',\n  },\n}\n\nexport const latinise = (input: string) => {\n  return input.replace(/[^A-Za-z0-9[\\] ]/g, (x) => Latinise.latin_map[x] || x)\n}\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport maxBy from 'lodash/maxBy'\nimport merge from 'lodash/merge'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Bet, HistoryFilter, Market, PredictionsState, PredictionStatus, Round } from 'state/types'\nimport {\n  makeFutureRoundResponse,\n  transformRoundResponse,\n  getBetHistory,\n  transformBetResponse,\n  getBet,\n  makeRoundData,\n} from './helpers'\n\nconst initialState: PredictionsState = {\n  status: PredictionStatus.INITIAL,\n  isLoading: false,\n  isHistoryPaneOpen: false,\n  isChartPaneOpen: false,\n  isFetchingHistory: false,\n  historyFilter: HistoryFilter.ALL,\n  currentEpoch: 0,\n  currentRoundStartBlockNumber: 0,\n  intervalBlocks: 100,\n  bufferBlocks: 2,\n  minBetAmount: '1000000000000000',\n  lastOraclePrice: BIG_ZERO.toJSON(),\n  rounds: {},\n  history: {},\n  bets: {},\n}\n\n// Thunks\nexport const fetchBet = createAsyncThunk<{ account: string; bet: Bet }, { account: string; id: string }>(\n  'predictions/fetchBet',\n  async ({ account, id }) => {\n    const response = await getBet(id)\n    const bet = transformBetResponse(response)\n    return { account, bet }\n  },\n)\n\nexport const fetchRoundBet = createAsyncThunk<\n  { account: string; roundId: string; bet: Bet },\n  { account: string; roundId: string }\n>('predictions/fetchRoundBet', async ({ account, roundId }) => {\n  const betResponses = await getBetHistory({\n    user: account.toLowerCase(),\n    round: roundId,\n  })\n\n  // This should always return 0 or 1 bet because a user can only place\n  // one bet per round\n  if (betResponses && betResponses.length === 1) {\n    const [betResponse] = betResponses\n    return { account, roundId, bet: transformBetResponse(betResponse) }\n  }\n\n  return { account, roundId, bet: null }\n})\n\n/**\n * Used to poll the user bets of the current round cards\n */\nexport const fetchCurrentBets = createAsyncThunk<\n  { account: string; bets: Bet[] },\n  { account: string; roundIds: string[] }\n>('predictions/fetchCurrentBets', async ({ account, roundIds }) => {\n  const betResponses = await getBetHistory({\n    user: account.toLowerCase(),\n    round_in: roundIds,\n  })\n\n  return { account, bets: betResponses.map(transformBetResponse) }\n})\n\nexport const fetchHistory = createAsyncThunk<{ account: string; bets: Bet[] }, { account: string; claimed?: boolean }>(\n  'predictions/fetchHistory',\n  async ({ account, claimed }) => {\n    const response = await getBetHistory({\n      user: account.toLowerCase(),\n      claimed,\n    })\n    const bets = response.map(transformBetResponse)\n\n    return { account, bets }\n  },\n)\n\nexport const predictionsSlice = createSlice({\n  name: 'predictions',\n  initialState,\n  reducers: {\n    setPredictionStatus: (state, action: PayloadAction<PredictionStatus>) => {\n      state.status = action.payload\n    },\n    setHistoryPaneState: (state, action: PayloadAction<boolean>) => {\n      state.isHistoryPaneOpen = action.payload\n      state.historyFilter = HistoryFilter.ALL\n    },\n    setChartPaneState: (state, action: PayloadAction<boolean>) => {\n      state.isChartPaneOpen = action.payload\n    },\n    setHistoryFilter: (state, action: PayloadAction<HistoryFilter>) => {\n      state.historyFilter = action.payload\n    },\n    initialize: (state, action: PayloadAction<PredictionsState>) => {\n      return {\n        ...state,\n        ...action.payload,\n      }\n    },\n    updateMarketData: (state, action: PayloadAction<{ rounds: Round[]; market: Market }>) => {\n      const { rounds, market } = action.payload\n      const newRoundData = makeRoundData(rounds)\n      const incomingCurrentRound = maxBy(rounds, 'epoch')\n\n      if (state.currentEpoch !== incomingCurrentRound.epoch) {\n        // Add new round\n        const newestRound = maxBy(rounds, 'epoch') as Round\n        const futureRound = transformRoundResponse(\n          makeFutureRoundResponse(newestRound.epoch + 2, newestRound.startBlock + state.intervalBlocks),\n        )\n\n        newRoundData[futureRound.id] = futureRound\n      }\n\n      state.currentEpoch = incomingCurrentRound.epoch\n      state.currentRoundStartBlockNumber = incomingCurrentRound.startBlock\n      state.status = market.paused ? PredictionStatus.PAUSED : PredictionStatus.LIVE\n      state.rounds = { ...state.rounds, ...newRoundData }\n    },\n    setCurrentEpoch: (state, action: PayloadAction<number>) => {\n      state.currentEpoch = action.payload\n    },\n    markBetAsCollected: (state, action: PayloadAction<{ account: string; roundId: string }>) => {\n      const { account, roundId } = action.payload\n      const accountBets = state.bets[account]\n\n      if (accountBets && accountBets[roundId]) {\n        accountBets[roundId].claimed = true\n      }\n    },\n    markPositionAsEntered: (state, action: PayloadAction<{ account: string; roundId: string; bet: Bet }>) => {\n      const { account, roundId, bet } = action.payload\n\n      state.bets = {\n        ...state.bets,\n        [account]: {\n          ...state.bets[account],\n          [roundId]: bet,\n        },\n      }\n    },\n    setLastOraclePrice: (state, action: PayloadAction<string>) => {\n      state.lastOraclePrice = action.payload\n    },\n  },\n  extraReducers: (builder) => {\n    // Get unclaimed bets\n    builder.addCase(fetchCurrentBets.fulfilled, (state, action) => {\n      const { account, bets } = action.payload\n      const betData = bets.reduce((accum, bet) => {\n        return {\n          ...accum,\n          [bet.round.id]: bet,\n        }\n      }, {})\n\n      state.bets = merge({}, state.bets, {\n        [account]: betData,\n      })\n    })\n\n    // Get round bet\n    builder.addCase(fetchRoundBet.fulfilled, (state, action) => {\n      const { account, roundId, bet } = action.payload\n\n      if (bet) {\n        state.bets = {\n          ...state.bets,\n          [account]: {\n            ...state.bets[account],\n            [roundId]: bet,\n          },\n        }\n      }\n    })\n\n    // Update Bet\n    builder.addCase(fetchBet.fulfilled, (state, action) => {\n      const { account, bet } = action.payload\n      state.history[account] = [...state.history[account].filter((currentBet) => currentBet.id !== bet.id), bet]\n    })\n\n    // Show History\n    builder.addCase(fetchHistory.pending, (state) => {\n      state.isFetchingHistory = true\n    })\n    builder.addCase(fetchHistory.rejected, (state) => {\n      state.isFetchingHistory = false\n      state.isHistoryPaneOpen = true\n    })\n    builder.addCase(fetchHistory.fulfilled, (state, action) => {\n      const { account, bets } = action.payload\n\n      state.isFetchingHistory = false\n      state.isHistoryPaneOpen = true\n      state.history[account] = bets\n\n      // Save any fetched bets in the \"bets\" namespace\n      const betData = bets.reduce((accum, bet) => {\n        return {\n          ...accum,\n          [bet.round.id]: bet,\n        }\n      }, {})\n\n      state.bets = merge({}, state.bets, {\n        [account]: betData,\n      })\n    })\n  },\n})\n\n// Actions\nexport const {\n  initialize,\n  setChartPaneState,\n  setCurrentEpoch,\n  setHistoryFilter,\n  setHistoryPaneState,\n  updateMarketData,\n  markBetAsCollected,\n  setPredictionStatus,\n  markPositionAsEntered,\n  setLastOraclePrice,\n} = predictionsSlice.actions\n\nexport default predictionsSlice.reducer\n","import { useEffect, useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { orderBy } from 'lodash'\nimport {  Team } from 'config/constants/types'\nimport Nfts from 'config/constants/nfts'\nimport { farmsConfig } from 'config/constants'\nimport { getWeb3NoAccount } from 'utils/web3'\nimport { getBalanceAmount } from 'utils/formatBalance'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport useRefresh from 'hooks/useRefresh'\nimport { filterFarmsByQuoteToken } from 'utils/farmsPriceHelpers'\nimport {\n  fetchFarmsPublicDataAsync,\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  fetchCakeVaultPublicData,\n  fetchCakeVaultUserData,\n  fetchCakeVaultFees,\n  setBlock,\n} from './actions'\nimport { State, Farm, Pool, ProfileState, TeamsState, AchievementState, FarmsState } from './types'\nimport { fetchProfile } from './profile'\nimport { fetchTeam, fetchTeams } from './teams'\nimport { fetchAchievements } from './achievements'\nimport { fetchWalletNfts } from './collectibles'\nimport { getCanClaim } from './predictions/helpers'\nimport { transformPool } from './pools/helpers'\nimport { fetchPoolsStakingLimitsAsync } from './pools'\nimport { fetchFarmUserDataAsync, nonArchivedFarms } from './farms'\n\nconst ZERO = new BigNumber(0)\n\n  \nexport const usePollFarmsData = (includeArchive = false) => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n  const web3 = getWeb3NoAccount()\n  const { account } = useWeb3React()\n\n  useEffect(() => {\n    const farmsToFetch = includeArchive ? farmsConfig : nonArchivedFarms\n    const pids = farmsToFetch.map((farmToFetch) => farmToFetch.pid)\n\n    dispatch(fetchFarmsPublicDataAsync(pids))\n\n    if (account) {\n      dispatch(fetchFarmUserDataAsync({ account, pids }))\n    }\n  }, [includeArchive, dispatch, slowRefresh, web3, account])\n}\n\n/**\n * Fetches the \"core\" farm data used globally\n * 251 = CAKE-BNB LP\n * 252 = BUSD-BNB LP\n */\nexport const usePollCoreFarmData = () => {\n  const dispatch = useAppDispatch()\n  const { fastRefresh } = useRefresh()\n  const web3 = getWeb3NoAccount()\n\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync([1, 4]))\n  }, [dispatch, fastRefresh, web3])\n}\n\nexport const usePollBlockNumber = () => {\n  const dispatch = useAppDispatch()\n  const web3 = getWeb3NoAccount()\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      const blockNumber = await web3.eth.getBlockNumber()\n      dispatch(setBlock(blockNumber))\n    }, 6000)\n\n    return () => clearInterval(interval)\n  }, [dispatch, web3])\n}\n\n// Farms\n\nexport const useFarms = (): FarmsState => {\n  const farms = useSelector((state: State) => state.farms)\n  return farms\n}\n \nexport const useFarmFromPid = (pid): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return farm\n}\n\nexport const useFarmFromLpSymbol = (lpSymbol: string): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return farm\n}\n\nexport const useFarmUser = (pid) => {\n  const farm = useFarmFromPid(pid)\n\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : BIG_ZERO,\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : BIG_ZERO,\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : BIG_ZERO,\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : BIG_ZERO,\n  }\n}\n\n\n\n// Return a farm for a given token symbol. The farm is filtered based on attempting to return a farm with a quote token from an array of preferred quote tokens\nexport const useFarmFromTokenSymbol = (tokenSymbol: string, preferredQuoteTokens?: string[]): Farm => {\n  const farms = useSelector((state: State) => state.farms.data.filter((farm) => farm.token.symbol === tokenSymbol))\n  const filteredFarm = filterFarmsByQuoteToken(farms, preferredQuoteTokens)\n  return filteredFarm\n}\n\n// Return the base token price for a farm, from a given pid\nexport const useBusdPriceFromPid = (pid: number): BigNumber => {\n  const farm = useFarmFromPid(pid)\n  return farm && new BigNumber(farm.token.busdPrice)\n}\n\nexport const useBusdPriceFromToken = (tokenSymbol: string): BigNumber => {\n  const tokenFarm = useFarmFromTokenSymbol(tokenSymbol)\n  const tokenPrice = useBusdPriceFromPid(tokenFarm?.pid)\n  return tokenPrice\n}\n\nexport const useLpTokenPrice = (symbol: string) => {\n  const farm = useFarmFromLpSymbol(symbol)\n  const farmTokenPriceInUsd = useBusdPriceFromPid(farm.pid)\n  let lpTokenPrice = BIG_ZERO\n\n  if (farm.lpTotalSupply && farm.lpTotalInQuoteToken) {\n    // Total value of base token in LP\n    const valueOfBaseTokenInFarm = farmTokenPriceInUsd.times(farm.tokenAmountTotal)\n    // Double it to get overall value in LP\n    const overallValueOfAllTokensInFarm = valueOfBaseTokenInFarm.times(2)\n    // Divide total value of all tokens, by the number of LP tokens\n    const totalLpTokens = getBalanceAmount(new BigNumber(farm.lpTotalSupply))\n    lpTokenPrice = overallValueOfAllTokensInFarm.div(totalLpTokens)\n  }\n\n  return lpTokenPrice\n}\n\n// Pools\n\nexport const useFetchPublicPoolsData = () => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n  const web3 = getWeb3NoAccount()\n\n  useEffect(() => {\n    const fetchPoolsPublicData = async () => {\n      const blockNumber = await web3.eth.getBlockNumber()\n      dispatch(fetchPoolsPublicDataAsync(blockNumber))\n    }\n\n    fetchPoolsPublicData()\n    dispatch(fetchPoolsStakingLimitsAsync())\n  }, [dispatch, slowRefresh, web3])\n}\n\nexport const usePools = (account): { pools: Pool[]; userDataLoaded: boolean } => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const { pools, userDataLoaded } = useSelector((state: State) => ({\n    pools: state.pools.data,\n    userDataLoaded: state.pools.userDataLoaded,\n  }))\n  return { pools: pools.map(transformPool), userDataLoaded }\n}\n\nexport const usePoolFromPid = (sousId: number): Pool => {\n  const pool = useSelector((state: State) => state.pools.data.find((p) => p.sousId === sousId))\n  return transformPool(pool)\n}\n\nexport const useFetchCakeVault = () => {\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultPublicData())\n  }, [dispatch, fastRefresh])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultUserData({ account }))\n  }, [dispatch, fastRefresh, account])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultFees())\n  }, [dispatch])\n}\n\nexport const useCakeVault = () => {\n  const {\n    totalShares: totalSharesAsString,\n    pricePerFullShare: pricePerFullShareAsString,\n    totalCakeInVault: totalCakeInVaultAsString,\n    estimatedCakeBountyReward: estimatedCakeBountyRewardAsString,\n    totalPendingCakeHarvest: totalPendingCakeHarvestAsString,\n    fees: { performanceFee, callFee, withdrawalFee, withdrawalFeePeriod },\n    userData: {\n      isLoading,\n      userShares: userSharesAsString,\n      cakeAtLastUserAction: cakeAtLastUserActionAsString,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  } = useSelector((state: State) => state.pools.cakeVault)\n\n  const estimatedCakeBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyRewardAsString)\n  }, [estimatedCakeBountyRewardAsString])\n\n  const totalPendingCakeHarvest = useMemo(() => {\n    return new BigNumber(totalPendingCakeHarvestAsString)\n  }, [totalPendingCakeHarvestAsString])\n\n  const totalShares = useMemo(() => {\n    return new BigNumber(totalSharesAsString)\n  }, [totalSharesAsString])\n\n  const pricePerFullShare = useMemo(() => {\n    return new BigNumber(pricePerFullShareAsString)\n  }, [pricePerFullShareAsString])\n\n  const totalCakeInVault = useMemo(() => {\n    return new BigNumber(totalCakeInVaultAsString)\n  }, [totalCakeInVaultAsString])\n\n  const userShares = useMemo(() => {\n    return new BigNumber(userSharesAsString)\n  }, [userSharesAsString])\n\n  const cakeAtLastUserAction = useMemo(() => {\n    return new BigNumber(cakeAtLastUserActionAsString)\n  }, [cakeAtLastUserActionAsString])\n\n  return {\n    totalShares,\n    pricePerFullShare,\n    totalCakeInVault,\n    estimatedCakeBountyReward,\n    totalPendingCakeHarvest,\n    fees: {\n      performanceFee,\n      callFee,\n      withdrawalFee,\n      withdrawalFeePeriod,\n    },\n    userData: {\n      isLoading,\n      userShares,\n      cakeAtLastUserAction,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  }\n}\n\n// Profile\n\nexport const useFetchProfile = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchProfile(account))\n  }, [account, dispatch])\n}\n\nexport const useProfile = () => {\n  const { isInitialized, isLoading, data, hasRegistered }: ProfileState = useSelector((state: State) => state.profile)\n  return { profile: data, hasProfile: isInitialized && hasRegistered, isInitialized, isLoading }\n}\n\n// Teams\n\nexport const useTeam = (id: number) => {\n  const team: Team = useSelector((state: State) => state.teams.data[id])\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchTeam(id))\n  }, [id, dispatch])\n\n  return team\n}\n\nexport const useTeams = () => {\n  const { isInitialized, isLoading, data }: TeamsState = useSelector((state: State) => state.teams)\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchTeams())\n  }, [dispatch])\n\n  return { teams: data, isInitialized, isLoading }\n}\n\n// Achievements\n\nexport const useFetchAchievements = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchAchievements(account))\n    }\n  }, [account, dispatch])\n}\n\nexport const useAchievements = () => {\n  const achievements: AchievementState['data'] = useSelector((state: State) => state.achievements.data)\n  return achievements\n}\n\nexport const usePriceBnbBusd = (): BigNumber => {\n  const bnbBusdFarm = useFarmFromPid(2)\n  return new BigNumber(bnbBusdFarm.quoteToken.busdPrice)\n}\n\nexport const usePriceCakeBusd = (): BigNumber => {\n  const pid = 1 // CAKE-BNB LP\n  const bnbPriceUSD = usePriceBnbBusd()\n  const farm = useFarmFromPid(pid)\n  return farm.tokenPriceVsQuote ? bnbPriceUSD.times(farm.tokenPriceVsQuote) : ZERO\n}\n\n \n\n// Block\nexport const useBlock = () => {\n  return useSelector((state: State) => state.block)\n}\n\nexport const useInitialBlock = () => {\n  return useSelector((state: State) => state.block.initialBlock)\n}\n\n// Predictions\nexport const useIsHistoryPaneOpen = () => {\n  return useSelector((state: State) => state.predictions.isHistoryPaneOpen)\n}\n\nexport const useIsChartPaneOpen = () => {\n  return useSelector((state: State) => state.predictions.isChartPaneOpen)\n}\n\nexport const useGetRounds = () => {\n  return useSelector((state: State) => state.predictions.rounds)\n}\n\nexport const useGetSortedRounds = () => {\n  const roundData = useGetRounds()\n  return orderBy(Object.values(roundData), ['epoch'], ['asc'])\n}\n\nexport const useGetCurrentEpoch = () => {\n  return useSelector((state: State) => state.predictions.currentEpoch)\n}\n\nexport const useGetIntervalBlocks = () => {\n  return useSelector((state: State) => state.predictions.intervalBlocks)\n}\n\nexport const useGetBufferBlocks = () => {\n  return useSelector((state: State) => state.predictions.bufferBlocks)\n}\n\nexport const useGetTotalIntervalBlocks = () => {\n  const intervalBlocks = useGetIntervalBlocks()\n  const bufferBlocks = useGetBufferBlocks()\n  return intervalBlocks + bufferBlocks\n}\n\nexport const useGetRound = (id: string) => {\n  const rounds = useGetRounds()\n  return rounds[id]\n}\n\nexport const useGetCurrentRound = () => {\n  const currentEpoch = useGetCurrentEpoch()\n  const rounds = useGetSortedRounds()\n  return rounds.find((round) => round.epoch === currentEpoch)\n}\n\nexport const useGetPredictionsStatus = () => {\n  return useSelector((state: State) => state.predictions.status)\n}\n\nexport const useGetHistoryFilter = () => {\n  return useSelector((state: State) => state.predictions.historyFilter)\n}\n\nexport const useGetCurrentRoundBlockNumber = () => {\n  return useSelector((state: State) => state.predictions.currentRoundStartBlockNumber)\n}\n\nexport const useGetMinBetAmount = () => {\n  const minBetAmount = useSelector((state: State) => state.predictions.minBetAmount)\n  return useMemo(() => new BigNumber(minBetAmount), [minBetAmount])\n}\n\nexport const useGetIsFetchingHistory = () => {\n  return useSelector((state: State) => state.predictions.isFetchingHistory)\n}\n\nexport const useGetHistory = () => {\n  return useSelector((state: State) => state.predictions.history)\n}\n\nexport const useGetHistoryByAccount = (account: string) => {\n  const bets = useGetHistory()\n  return bets ? bets[account] : []\n}\n\nexport const useGetBetByRoundId = (account: string, roundId: string) => {\n  const bets = useSelector((state: State) => state.predictions.bets)\n\n  if (!bets[account]) {\n    return null\n  }\n\n  if (!bets[account][roundId]) {\n    return null\n  }\n\n  return bets[account][roundId]\n}\n\nexport const useBetCanClaim = (account: string, roundId: string) => {\n  const bet = useGetBetByRoundId(account, roundId)\n\n  if (!bet) {\n    return false\n  }\n\n  return getCanClaim(bet)\n}\n\nexport const useGetLastOraclePrice = (): BigNumber => {\n  const lastOraclePrice = useSelector((state: State) => state.predictions.lastOraclePrice)\n  return new BigNumber(lastOraclePrice)\n}\n\n\n// Collectibles\nexport const useGetCollectibles = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n  const { isInitialized, isLoading, data } = useSelector((state: State) => state.collectibles)\n  const identifiers = Object.keys(data)\n\n  useEffect(() => {\n    // Fetch nfts only if we have not done so already\n    if (!isInitialized) {\n      dispatch(fetchWalletNfts(account))\n    }\n  }, [isInitialized, account, dispatch])\n\n  return {\n    isInitialized,\n    isLoading,\n    tokenIds: data,\n    nftsInWallet: Nfts.filter((nft) => identifiers.includes(nft.identifier)),\n  }\n  \n}\n\n\n ","import { useCallback, useState } from 'react'\nimport usePreviousValue from './usePreviousValue'\n\n/**\n * A helper hook to keep track of the time between events\n * Can also be used to force an effect to re-run\n */\nconst useLastUpdated = () => {\n  const [lastUpdated, setStateLastUpdated] = useState(Date.now())\n  const previousLastUpdated = usePreviousValue(lastUpdated)\n\n  const setLastUpdated = useCallback(() => {\n    setStateLastUpdated(Date.now())\n  }, [setStateLastUpdated])\n\n  return { lastUpdated, previousLastUpdated, setLastUpdated }\n}\n\nexport default useLastUpdated\n","import React from 'react'\nimport styled from 'styled-components'\nimport { BunnyCardsIcon } from '@pancakeswap/uikit'\nimport Page from './layout/Page'\n\nconst Wrapper = styled(Page)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst PageLoader: React.FC = () => {\n  return (\n    <Wrapper>\n      Loading\n  </Wrapper>\n)\n}\n\nexport default PageLoader\n","const MINUTE_IN_SECONDS = 60\nconst HOUR_IN_SECONDS = 3600\nconst DAY_IN_SECONDS = 86400\nconst MONTH_IN_SECONDS = 2629800\nconst YEAR_IN_SECONDS = 31557600\n\n/**\n * Format number of seconds into year, month, day, hour, minute, seconds\n *\n * @param seconds\n */\nconst getTimePeriods = (seconds: number) => {\n  let delta = Math.abs(seconds)\n  const timeLeft = {\n    years: 0,\n    months: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n  }\n\n  if (delta >= YEAR_IN_SECONDS) {\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\n    delta -= timeLeft.years * YEAR_IN_SECONDS\n  }\n\n  if (delta >= MONTH_IN_SECONDS) {\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\n    delta -= timeLeft.months * MONTH_IN_SECONDS\n  }\n\n  if (delta >= DAY_IN_SECONDS) {\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\n    delta -= timeLeft.days * DAY_IN_SECONDS\n  }\n\n  if (delta >= HOUR_IN_SECONDS) {\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\n  }\n\n  if (delta >= MINUTE_IN_SECONDS) {\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\n  }\n\n  timeLeft.seconds = delta\n\n  return timeLeft\n}\n\nexport default getTimePeriods\n","import BigNumber from 'bignumber.js'\nimport { BLOCKS_PER_YEAR, CAKE_PER_YEAR } from 'config'\n\n/**\n * Get the APR value in %\n * @param stakingTokenPrice Token price in the same quote currency\n * @param rewardTokenPrice Token price in the same quote currency\n * @param totalStaked Total amount of stakingToken in the pool\n * @param tokenPerBlock Amount of new cake allocated to the pool for each new block\n * @returns Null if the APR is NaN or infinite.\n */\nexport const getPoolApr = (\n  stakingTokenPrice: number,\n  rewardTokenPrice: number,\n  totalStaked: number,\n  tokenPerBlock: number,\n): number => {\n  const totalRewardPricePerYear = new BigNumber(rewardTokenPrice).times(tokenPerBlock).times(BLOCKS_PER_YEAR)\n  const totalStakingTokenInPool = new BigNumber(stakingTokenPrice).times(totalStaked)\n  const apr = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n  return apr.isNaN() || !apr.isFinite() ? null : apr.toNumber()\n}\n\n/**\n * Get farm APR value in %\n * @param poolWeight allocationPoint / totalAllocationPoint\n * @param cakePriceUsd Cake price in USD\n * @param poolLiquidityUsd Total pool liquidity in USD\n * @returns\n */\nexport const getFarmApr = (poolWeight: BigNumber, cakePriceUsd: BigNumber, poolLiquidityUsd: BigNumber): number => {\n  const yearlyCakeRewardAllocation = CAKE_PER_YEAR.times(poolWeight)\n  const apr = yearlyCakeRewardAllocation.times(cakePriceUsd).div(poolLiquidityUsd).times(100)\n  return apr.isNaN() || !apr.isFinite() ? null : apr.toNumber()\n}\n\nexport default null\n","import React, { useState, useRef, useEffect } from 'react'\nimport styled, { css } from 'styled-components'\nimport { ArrowDropDownIcon, Text } from '@pancakeswap/uikit'\n\nconst DropDownHeader = styled.div`\n  width: 100%;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0px 16px;\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n  border-radius: 16px;\n  background: ${({ theme }) => theme.colors.input};\n  transition: border-radius 0.15s;\n  background-color: #000000\t ;\n`\n\nconst DropDownListContainer = styled.div`\n  min-width: 136px;\n  height: 0;\n  position: absolute;\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.input};\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n  transition: transform 0.15s, opacity 0.15s;\n  transform: scaleY(0);\n  transform-origin: top;\n  opacity: 0;\n  width: 100%;\n  background-color: #000000\t ;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n`\n\nconst DropDownContainer = styled.div<{ isOpen: boolean; width: number; height: number }>`\n  cursor: pointer;\n  width: ${({ width }) => width}px;\n  position: relative;\n  background: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  height: 40px;\n  min-width: 136px;\n  user-select: none;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n\n  ${(props) =>\n    props.isOpen &&\n    css`\n      ${DropDownHeader} {\n        border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n        border-radius: 16px 16px 0 0;\n      }\n\n      ${DropDownListContainer} {\n        height: auto;\n        transform: scaleY(1);\n        opacity: 1;\n        border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        border-top-width: 0;\n        border-radius: 0 0 16px 16px;\n        background-color: #000000\t ;\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n      }\n    `}\n\n  svg {\n    position: absolute;\n    right: 16px;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`\n\nconst DropDownList = styled.ul`\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n`\n\nconst ListItem = styled.li`\n  list-style: none;\n  padding: 8px 16px;\n  &:hover {\n    background: ${({ theme }) => theme.colors.inputSecondary};\n  }\n`\n\nexport interface SelectProps {\n  options: OptionProps[]\n  onChange?: (option: OptionProps) => void\n}\n\nexport interface OptionProps {\n  label: string\n  value: any\n}\n\nconst Select: React.FunctionComponent<SelectProps> = ({ options, onChange }) => {\n  const containerRef = useRef(null)\n  const dropdownRef = useRef(null)\n  const [isOpen, setIsOpen] = useState(false)\n  const [selectedOptionIndex, setSelectedOptionIndex] = useState(0)\n  const [containerSize, setContainerSize] = useState({ width: 0, height: 0 })\n\n  const toggling = () => setIsOpen(!isOpen)\n\n  const onOptionClicked = (selectedIndex: number) => () => {\n    setSelectedOptionIndex(selectedIndex)\n    setIsOpen(false)\n\n    if (onChange) {\n      onChange(options[selectedIndex])\n    }\n  }\n\n  useEffect(() => {\n    setContainerSize({\n      width: dropdownRef.current.offsetWidth, // Consider border\n      height: dropdownRef.current.offsetHeight,\n    })\n  }, [])\n\n  return (\n    <DropDownContainer isOpen={isOpen} ref={containerRef} {...containerSize}>\n      {containerSize.width !== 0 && (\n        <DropDownHeader onClick={toggling}>\n          <Text>{options[selectedOptionIndex].label}</Text>\n        </DropDownHeader>\n      )}\n      <ArrowDropDownIcon color=\"secondary\" onClick={toggling} />\n      <DropDownListContainer>\n        <DropDownList ref={dropdownRef}>\n          {options.map((option, index) =>\n            index !== selectedOptionIndex ? (\n              <ListItem onClick={onOptionClicked(index)} key={option.label}>\n                <Text>{option.label}</Text>\n              </ListItem>\n            ) : null,\n          )}\n        </DropDownList>\n      </DropDownListContainer>\n    </DropDownContainer>\n  )\n}\n\nexport default Select\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserStakedBalance, updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { unstake, sousUnstake, sousEmergencyUnstake } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nconst useUnstake = (pid: number) => {\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      const txHash = await unstake(masterChefContract, pid, amount, account)\n      console.info(txHash)\n    },\n    [account, masterChefContract, pid],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport const useSousUnstake = (sousId, enableEmergencyWithdraw = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleUnstake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        const txHash = await unstake(masterChefContract, 0, amount, account)\n        console.info(txHash)\n      } else if (enableEmergencyWithdraw) {\n        const txHash = await sousEmergencyUnstake(sousChefContract, account)\n        console.info(txHash)\n      } else {\n        const txHash = await sousUnstake(sousChefContract, amount, decimals, account)\n        console.info(txHash)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n      dispatch(updateUserPendingReward(sousId, account))\n    },\n    [account, dispatch, enableEmergencyWithdraw, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstake\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { soushHarvest, soushHarvestBnb, harvest } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nexport const useHarvest = (farmPid: number) => {\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    const txHash = await harvest(masterChefContract, farmPid, account)\n    return txHash\n  }, [account, farmPid, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport const useSousHarvest = (sousId, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    if (sousId === 0) {\n      await harvest(masterChefContract, 0, account)\n    } else if (isUsingBnb) {\n      await soushHarvestBnb(sousChefContract, account)\n    } else {\n      await soushHarvest(sousChefContract, account)\n    }\n    dispatch(updateUserPendingReward(sousId, account))\n    dispatch(updateUserBalance(sousId, account))\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\n\n  return { onReward: handleHarvest }\n}\n","import { createBrowserHistory } from 'history'\n\n// Manually create the history object so we can access outside the Router e.g. in modals\nconst history = createBrowserHistory()\n\nexport default history\n","import BigNumber from 'bignumber.js'\nimport { DEFAULT_GAS_PRICE } from 'config'\nimport { getDecimalAmount } from './formatBalance'\n\nexport interface UserSettings {\n  gasPrice: number\n}\n\nexport const VERSION = 1.01\n\nexport const GAS_SETTINGS = {\n  default: DEFAULT_GAS_PRICE,\n  fast: 10,\n  reallyfast: 15,\n}\n\nexport const getGasPriceInWei = (amountInGwei: number) => {\n  return getDecimalAmount(new BigNumber(amountInGwei), 9)\n}\n\nexport const getDefaultSettings = (): UserSettings => ({\n  gasPrice: GAS_SETTINGS.default,\n})\n\nexport const getStorageKey = (account: string) => {\n  return `pancakeswap_settings_${account}_${VERSION}`\n}\n\nexport const getSettings = (account: string): UserSettings => {\n  try {\n    const settingsFromLs = localStorage.getItem(getStorageKey(account))\n    return settingsFromLs ? JSON.parse(settingsFromLs) : getDefaultSettings()\n  } catch (error) {\n    return getDefaultSettings()\n  }\n}\n\nexport const setSettings = (account: string, newSettings: UserSettings) => {\n  localStorage.setItem(getStorageKey(account), JSON.stringify(newSettings))\n}\n\nexport const setSetting = (account: string, newSetting: Partial<UserSettings>) => {\n  const currentSettings = getSettings(account)\n  setSettings(account, { ...currentSettings, ...newSetting })\n}\n","import Web3 from 'web3'\nimport { AbiItem } from 'web3-utils'\nimport web3NoAccount from 'utils/web3'\nimport { poolsConfig } from 'config/constants'\nimport { PoolCategory } from 'config/constants/types'\n\n// Addresses\nimport {\n  getAddress,\n  getPancakeProfileAddress,\n  getPancakeRabbitsAddress,\n  getBunnyFactoryAddress,\n  getBunnySpecialAddress,\n  getCakeAddress,\n  getLotteryAddress,\n  getLotteryTicketAddress,\n  getLotteryV2Address,\n  getMasterChefAddress,\n  getPointCenterIfoAddress,\n  getClaimRefundAddress,\n  getTradingCompetitionAddress,\n  getEasterNftAddress,\n  getCakeVaultAddress,\n  getPredictionsAddress,\n  getChainlinkOracleAddress,\n} from 'utils/addressHelpers'\n\n// ABI\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport pancakeRabbitsAbi from 'config/abi/pancakeRabbits.json'\nimport bunnyFactoryAbi from 'config/abi/bunnyFactory.json'\nimport bunnySpecialAbi from 'config/abi/bunnySpecial.json'\nimport bep20Abi from 'config/abi/erc20.json'\nimport erc721Abi from 'config/abi/erc721.json'\nimport lpTokenAbi from 'config/abi/lpToken.json'\nimport cakeAbi from 'config/abi/cake.json'\nimport ifoV1Abi from 'config/abi/ifoV1.json'\nimport ifoV2Abi from 'config/abi/ifoV2.json'\nimport pointCenterIfo from 'config/abi/pointCenterIfo.json'\nimport lotteryAbi from 'config/abi/lottery.json'\nimport lotteryTicketAbi from 'config/abi/lotteryNft.json'\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\nimport masterChef from 'config/abi/masterchef.json'\nimport sousChef from 'config/abi/sousChef.json'\nimport sousChefV2 from 'config/abi/sousChefV2.json'\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\nimport claimRefundAbi from 'config/abi/claimRefund.json'\nimport tradingCompetitionAbi from 'config/abi/tradingCompetition.json'\nimport easterNftAbi from 'config/abi/easterNft.json'\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\nimport predictionsAbi from 'config/abi/predictions.json'\nimport chainlinkOracleAbi from 'config/abi/chainlinkOracle.json'\nimport { DEFAULT_GAS_PRICE, TESTNET_CHAIN_ID } from 'config'\nimport { getSettings, getGasPriceInWei } from './settings'\n\nexport const getDefaultGasPrice = () => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  if (chainId === TESTNET_CHAIN_ID) {\n    return 10\n  }\n  return DEFAULT_GAS_PRICE\n}\n\nconst getContract = (abi: any, address: string, web3?: Web3, account?: string) => {\n  const _web3 = web3 ?? web3NoAccount\n  const gasPrice = account ? getSettings(account).gasPrice : getDefaultGasPrice()\n\n  return new _web3.eth.Contract(abi as unknown as AbiItem, address, {\n    gasPrice: getGasPriceInWei(gasPrice).toString(),\n  })\n}\n\nexport const getBep20Contract = (address: string, web3?: Web3) => {\n  return getContract(bep20Abi, address, web3)\n}\nexport const getErc721Contract = (address: string, web3?: Web3) => {\n  return getContract(erc721Abi, address, web3)\n}\nexport const getLpContract = (address: string, web3?: Web3) => {\n  return getContract(lpTokenAbi, address, web3)\n}\nexport const getIfoV1Contract = (address: string, web3?: Web3) => {\n  return getContract(ifoV1Abi, address, web3)\n}\nexport const getIfoV2Contract = (address: string, web3?: Web3) => {\n  return getContract(ifoV2Abi, address, web3)\n}\nexport const getSouschefContract = (id: number, web3?: Web3) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  const abi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\n  return getContract(abi, getAddress(config.contractAddress), web3)\n}\nexport const getSouschefV2Contract = (id: number, web3?: Web3) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  return getContract(sousChefV2, getAddress(config.contractAddress), web3)\n}\nexport const getPointCenterIfoContract = (web3?: Web3) => {\n  return getContract(pointCenterIfo, getPointCenterIfoAddress(), web3)\n}\nexport const getCakeContract = (web3?: Web3) => {\n  return getContract(cakeAbi, getCakeAddress(), web3)\n}\nexport const getProfileContract = (web3?: Web3) => {\n  return getContract(profileABI, getPancakeProfileAddress(), web3)\n}\nexport const getPancakeRabbitContract = (web3?: Web3) => {\n  return getContract(pancakeRabbitsAbi, getPancakeRabbitsAddress(), web3)\n}\nexport const getBunnyFactoryContract = (web3?: Web3) => {\n  return getContract(bunnyFactoryAbi, getBunnyFactoryAddress(), web3)\n}\nexport const getBunnySpecialContract = (web3?: Web3) => {\n  return getContract(bunnySpecialAbi, getBunnySpecialAddress(), web3)\n}\nexport const getLotteryContract = (web3?: Web3) => {\n  return getContract(lotteryAbi, getLotteryAddress(), web3)\n}\nexport const getLotteryTicketContract = (web3?: Web3) => {\n  return getContract(lotteryTicketAbi, getLotteryTicketAddress(), web3)\n}\nexport const getLotteryV2Contract = (web3?: Web3) => {\n  return getContract(lotteryV2Abi, getLotteryV2Address(), web3)\n}\nexport const getMasterchefContract = (web3?: Web3) => {\n  return getContract(masterChef, getMasterChefAddress(), web3)\n}\nexport const getClaimRefundContract = (web3?: Web3) => {\n  return getContract(claimRefundAbi, getClaimRefundAddress(), web3)\n}\nexport const getTradingCompetitionContract = (web3?: Web3) => {\n  return getContract(tradingCompetitionAbi, getTradingCompetitionAddress(), web3)\n}\nexport const getEasterNftContract = (web3?: Web3) => {\n  return getContract(easterNftAbi, getEasterNftAddress(), web3)\n}\nexport const getCakeVaultContract = (web3?: Web3) => {\n  return getContract(cakeVaultAbi, getCakeVaultAddress(), web3)\n}\nexport const getPredictionsContract = (web3?: Web3) => {\n  return getContract(predictionsAbi, getPredictionsAddress(), web3)\n}\nexport const getChainlinkOracleContract = (web3?: Web3) => {\n  return getContract(chainlinkOracleAbi, getChainlinkOracleAddress(), web3)\n}\n","import React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport { Text, TextProps } from '@pancakeswap/uikit'\n\ninterface BalanceProps extends TextProps {\n  value: number\n  decimals?: number\n  unit?: string\n  isDisabled?: boolean\n  prefix?: string\n  onClick?: (event: React.MouseEvent<HTMLElement>) => void\n}\n\nconst Balance: React.FC<BalanceProps> = ({\n  value,\n  color = 'text',\n  decimals = 3,\n  isDisabled = false,\n  unit,\n  prefix,\n  onClick,\n  ...props\n}) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n  return (\n    <Text color={isDisabled ? 'textDisabled' : color} onClick={onClick} {...props}>\n      {prefix && <span>{prefix}</span>}\n      <CountUp start={previousValue.current} end={value} decimals={decimals} duration={1} separator=\",\" />\n      {unit && <span>{unit}</span>}\n    </Text>\n  )\n}\n\nexport default Balance\n","import { TranslatableText } from 'state/types'\n\nexport interface Address {\n  97?: string\n  56: string\n}\n\nexport interface Token {\n  symbol: string\n  address?: Address\n  decimals?: number\n  projectLink?: string\n  busdPrice?: string\n}\n\nexport enum PoolIds {\n  poolBasic = 'poolBasic',\n  poolUnlimited = 'poolUnlimited',\n}\n\nexport type IfoStatus = 'idle' | 'coming_soon' | 'live' | 'finished'\n\ninterface IfoPoolInfo {\n  saleAmount: string\n  raiseAmount: string\n  cakeToBurn: string\n  distributionRatio: number // Range [0-1]\n}\n\nexport interface Ifo {\n  id: string\n  isActive: boolean\n  address: string\n  name: string\n  currency: Token\n  token: Token\n  releaseBlockNumber: number\n  articleUrl: string\n  campaignId: string\n  tokenOfferingPrice: number\n  version: number\n  [PoolIds.poolBasic]?: IfoPoolInfo\n  [PoolIds.poolUnlimited]: IfoPoolInfo\n}\n\nexport enum PoolCategory {\n  'COMMUNITY' = 'Community',\n  'CORE' = 'Core',\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\n  'AUTO' = 'Auto',\n}\n\nexport interface FarmConfig {\n  pid: number\n  lpSymbol: string\n  lpAddresses: Address\n  token: Token\n  quoteToken: Token\n  multiplier?: string\n  isCommunity?: boolean\n  isEvent?: boolean\n  dual?: {\n    rewardPerBlock: number\n    earnLabel: string\n    endBlock: number\n  }\n}\n\nexport interface PoolConfig {\n  sousId: number\n  earningToken: Token\n  stakingToken: Token\n  contractAddress: Address\n  poolCategory: PoolCategory\n  tokenPerBlock: string\n  sortOrder?: number\n  harvest?: boolean\n  isFinished?: boolean\n  enableEmergencyWithdraw?: boolean\n}\n\nexport type Images = {\n  lg: string\n  md: string\n  sm: string\n  ipfs?: string\n}\n\nexport type NftImages = {\n  blur?: string\n} & Images\n\nexport type NftVideo = {\n  webm: string\n  mp4: string\n}\n\nexport type NftSource = {\n  [key in NftType]: {\n    address: Address\n    identifierKey: string\n  }\n}\n\nexport enum NftType {\n  PANCAKE = 'pancake',\n  MIXIE = 'mixie',\n}\n\nexport type Nft = {\n  description: string\n  name: string\n  images: NftImages\n  sortOrder: number\n  type: NftType\n  video?: NftVideo\n\n  // Uniquely identifies the nft.\n  // Used for matching an NFT from the config with the data from the NFT's tokenURI\n  identifier: string\n\n  // Used to be \"bunnyId\". Used when minting NFT\n  variationId?: number | string\n}\n\nexport type TeamImages = {\n  alt: string\n} & Images\n\nexport type Team = {\n  id: number\n  name: string\n  description: string\n  isJoinable?: boolean\n  users: number\n  points: number\n  images: TeamImages\n  background: string\n  textColor: string\n}\n\nexport type CampaignType = 'ifo' | 'teambattle'\n\nexport type Campaign = {\n  id: string\n  type: CampaignType\n  title?: TranslatableText\n  description?: TranslatableText\n  badge?: string\n}\n\nexport type PageMeta = {\n  title: string\n  description?: string\n  image?: string\n}\n","const ARCHIVED_FARMS_START_PID = 139\nconst ARCHIVED_FARMS_END_PID = 250\n\nconst isArchivedPid = (pid: number) => pid >= ARCHIVED_FARMS_START_PID && pid <= ARCHIVED_FARMS_END_PID\n\nexport default isArchivedPid\n","import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nexport default FlexLayout\n","import { useEffect, useRef } from 'react'\n\n/**\n * Returns the previous value of the given value\n *\n * @see https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\n */\nconst usePreviousValue = (value: any) => {\n  const ref = useRef()\n\n  useEffect(() => {\n    ref.current = value\n  })\n\n  return ref.current\n}\n\nexport default usePreviousValue\n","import { useState, useEffect } from 'react'\n\n/**\n * Use this hook when you want to animate something when it appears on the screen (e.g. when some prop set to true)\n * but when its not on the screen you want it to be fully unmounted and not just hidden or height 0.\n * This is especially useful when you have a table of 100s rows and each row has expandable element that appears on click.\n * If you just set the expanding animation while keeping inactive elements mounted all those 100 elements will load the DOM,\n * and if they all receive updates via props you're looking at 100 DOM updates for hidden elements.\n * This hook \"shows\" element immediately when the isMounted is true\n * but keeps element mounted for delayTime to let unmounting animation happen, after which you unmount element completely.\n * delayTime should be the same as animation time in most cases.\n */\nconst useDelayedUnmount = (isMounted: boolean, delayTime: number) => {\n  const [shouldRender, setShouldRender] = useState(false)\n\n  useEffect(() => {\n    let timeoutId: ReturnType<typeof setTimeout>\n    if (isMounted && !shouldRender) {\n      setShouldRender(true)\n    } else if (!isMounted && shouldRender) {\n      timeoutId = setTimeout(() => setShouldRender(false), delayTime)\n    }\n    return () => clearTimeout(timeoutId)\n  }, [isMounted, delayTime, shouldRender])\n  return shouldRender\n}\n\nexport default useDelayedUnmount\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\nimport Container from '../layout/Container'\n\nconst Outer = styled(Box)<{ background?: string }>`\n `\n\nconst Inner = styled(Container)`\n  padding-top: 20px;\n  padding-bottom: 20px;\n`\n\nconst PageHeader: React.FC<{ background?: string }> = ({ background, children, ...props }) => (\n  <Outer background={background} {...props}>\n    <Inner>{children}</Inner>\n  </Outer>\n)\n\nexport default PageHeader\n","import React, { useState, useMemo } from 'react'\nimport { Input } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport debounce from 'lodash/debounce'\nimport { useTranslation } from 'contexts/Localization'\n\nconst StyledInput = styled(Input)`\n  border-radius: 16px;\n  margin-left: auto;\n`\n\nconst InputWrapper = styled.div`\n  position: relative;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: block;\n  }\n`\n\nconst Container = styled.div<{ toggled: boolean }>``\n\ninterface Props {\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n  placeholder?: string\n}\n\nconst SearchInput: React.FC<Props> = ({ onChange: onChangeCallback, placeholder = 'Search' }) => {\n  const [toggled, setToggled] = useState(false)\n  const [searchText, setSearchText] = useState('')\n\n  const { t } = useTranslation()\n\n  const debouncedOnChange = useMemo(\n    () => debounce((e: React.ChangeEvent<HTMLInputElement>) => onChangeCallback(e), 500),\n    [onChangeCallback],\n  )\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchText(e.target.value)\n    debouncedOnChange(e)\n  }\n\n  return (\n    <Container toggled={toggled}>\n      <InputWrapper>\n        <StyledInput\n          value={searchText}\n          onChange={onChange}\n          placeholder={t(placeholder)}\n          onBlur={() => setToggled(false)}\n        />\n      </InputWrapper>\n    </Container>\n  )\n}\n\nexport default SearchInput\n","const tokens = {\n  bnb: {\n    symbol: 'BNB',\n    projectLink: 'https://www.binance.com/',\n  },\n  zeus: {\n    symbol: 'ZEUS',\n    address: {\n      56: '0x78358353B310FACDA32670998D9ecE2e34393012',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://zeusswap.app/',\n  },\n  txl: {\n    symbol: 'TXL',\n    address: {\n      56: '0x1ffd0b47127fdd4097e54521c9e2c7f0d66aafc5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tixl.org/',\n  },\n  cos: {\n    symbol: 'COS',\n    address: {\n      56: '0x96Dd399F9c3AFda1F194182F71600F1B65946501',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.contentos.io/',\n  },\n  bunny: {\n    symbol: 'BUNNY',\n    address: {\n      56: '0xc9849e6fdb743d08faee3e34dd2d1bc69ea11a51',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakebunny.finance/',\n  },\n  alice: {\n    symbol: 'ALICE',\n    address: {\n      56: '0xac51066d7bec65dc4589368da368b212745d63e8',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.myneighboralice.com/',\n  },\n  for: {\n    symbol: 'FOR',\n    address: {\n      56: '0x658A109C5900BC6d2357c87549B651670E5b0539',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.for.tube/home',\n  },\n  bux: {\n    symbol: 'BUX',\n    address: {\n      56: '0x211ffbe424b90e25a15531ca322adf1559779e45',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://getbux.com/bux-crypto/',\n  },\n  nuls: {\n    symbol: 'NULS',\n    address: {\n      56: '0x8cd6e29d3686d24d3c2018cee54621ea0f89313b',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.nuls.io/',\n  },\n  belt: {\n    symbol: 'BELT',\n    address: {\n      56: '0xE0e514c71282b6f4e823703a39374Cf58dc3eA4f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beta.belt.fi/',\n  },\n  ramp: {\n    symbol: 'RAMP',\n    address: {\n      56: '0x8519ea49c997f50ceffa444d240fb655e89248aa',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://rampdefi.com/',\n  },\n  bfi: {\n    symbol: 'BFI',\n    address: {\n      56: '0x81859801b01764d4f0fa5e64729f5a6c3b91435b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bearn.fi/',\n  },\n  dexe: {\n    symbol: 'DEXE',\n    address: {\n      56: '0x039cb485212f996a9dbb85a9a75d898f94d38da6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dexe.network/',\n  },\n  bel: {\n    symbol: 'BEL',\n    address: {\n      56: '0x8443f091997f06a61670b735ed92734f5628692f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bella.fi/',\n  },\n  tpt: {\n    symbol: 'TPT',\n    address: {\n      56: '0xeca41281c24451168a37211f0bc2b8645af45092',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://www.tokenpocket.pro/',\n  },\n  watch: {\n    symbol: 'WATCH',\n    address: {\n      56: '0x7a9f28eb62c791422aa23ceae1da9c847cbec9b0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://yieldwatch.net/',\n  },\n  xmark: {\n    symbol: 'xMARK',\n    address: {\n      56: '0x26a5dfab467d4f58fb266648cae769503cec9580',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://benchmarkprotocol.finance/',\n  },\n  bmxx: {\n    symbol: 'bMXX',\n    address: {\n      56: '0x4131b87f74415190425ccd873048c708f8005823',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://multiplier.finance/',\n  },\n  iotx: {\n    symbol: 'IOTX',\n    address: {\n      56: '0x9678e42cebeb63f23197d726b29b1cb20d0064e5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://iotex.io/',\n  },\n  bor: {\n    symbol: 'BOR',\n    address: {\n      56: '0x92d7756c60dcfd4c689290e8a9f4d263b3b32241',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.boringdao.com/',\n  },\n  bopen: {\n    symbol: 'bOPEN',\n    address: {\n      56: '0xf35262a9d427f96d2437379ef090db986eae5d42',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  dodo: {\n    symbol: 'DODO',\n    address: {\n      56: '0x67ee3cb086f8a16f34bee3ca72fad36f7db929e2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dodoex.io/',\n  },\n  swingby: {\n    symbol: 'SWINGBY',\n    address: {\n      56: '0x71de20e0c4616e7fcbfdd3f875d568492cbe4739',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swingby.network/',\n  },\n  bry: {\n    symbol: 'BRY',\n    address: {\n      56: '0xf859bf77cbe8699013d6dbc7c2b926aaf307f830',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://berrydata.co/',\n  },\n  zee: {\n    symbol: 'ZEE',\n    address: {\n      56: '0x44754455564474a89358b2c2265883df993b12f0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://zeroswap.io/',\n  },\n  swgb: {\n    symbol: 'SWGb',\n    address: {\n      56: '0xe40255c5d7fa7ceec5120408c78c787cecb4cfdb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  swg: {\n    symbol: 'SWG',\n    address: {\n      56: '0xe792f64c582698b8572aaf765bdc426ac3aefb6b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  sfp: {\n    symbol: 'SFP',\n    address: {\n      56: '0xd41fdb03ba84762dd66a0af1a6c8540ff1ba5dfb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.safepal.io/',\n  },\n  lina: {\n    symbol: 'LINA',\n    address: {\n      56: '0x762539b45a1dcce3d36d080f74d1aed37844b878',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://linear.finance/',\n  },\n  lit: {\n    symbol: 'LIT',\n    address: {\n      56: '0xb59490ab09a0f526cc7305822ac65f2ab12f9723',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.litentry.com/',\n  },\n  hget: {\n    symbol: 'HGET',\n    address: {\n      56: '0xc7d8d35eba58a0935ff2d5a33df105dd9f071731',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.hedget.com/',\n  },\n  bdo: {\n    symbol: 'BDO',\n    address: {\n      56: '0x190b589cf9fb8ddeabbfeae36a813ffb2a702454',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bdollar.fi/',\n  },\n  egld: {\n    symbol: 'EGLD',\n    address: {\n      56: '0xbf7c81fff98bbe61b40ed186e4afd6ddd01337fe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://elrond.com/',\n  },\n  ust: {\n    symbol: 'UST',\n    address: {\n      56: '0x23396cf899ca06c4472205fc903bdb4de249d6fc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  wsote: {\n    symbol: 'wSOTE',\n    address: {\n      56: '0x541e619858737031a1244a5d0cd47e5ef480342c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://soteria.finance/#/',\n  },\n  front: {\n    symbol: 'FRONT',\n    address: {\n      56: '0x928e55dab735aa8260af3cedada18b5f70c72f1b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://frontier.xyz/',\n  },\n  helmet: {\n    symbol: 'Helmet',\n    address: {\n      56: '0x948d2a81086a075b3130bac19e4c6dee1d2e3fe8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.helmet.insure/',\n  },\n  btcst: {\n    symbol: 'BTCST',\n    address: {\n      56: '0x78650b139471520656b9e7aa7a5e9276814a38e9',\n      97: '',\n    },\n    decimals: 17,\n    projectLink: 'https://www.1-b.tc/',\n  },\n  bscx: {\n    symbol: 'BSCX',\n    address: {\n      56: '0x5ac52ee5b2a633895292ff6d8a89bb9190451587',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bscex.org/',\n  },\n  ten: {\n    symbol: 'TEN',\n    address: {\n      56: '0xdff8cb622790b7f92686c722b02cab55592f152c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tenet.farm/',\n  },\n  balbt: {\n    symbol: 'bALBT',\n    address: {\n      56: '0x72faa679e1008ad8382959ff48e392042a8b06f7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://allianceblock.io/',\n  },\n  asr: {\n    symbol: 'ASR',\n    address: {\n      56: '0x80d5f92c2c8c682070c95495313ddb680b267320',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  atm: {\n    symbol: 'ATM',\n    address: {\n      56: '0x25e9d05365c867e59c1904e7463af9f312296f9e',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  og: {\n    symbol: 'OG',\n    address: {\n      56: '0xf05e45ad22150677a017fbd94b84fbb63dc9b44c',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  reef: {\n    symbol: 'REEF',\n    address: {\n      56: '0xf21768ccbc73ea5b6fd3c687208a7c2def2d966e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://reef.finance/',\n  },\n  ditto: {\n    symbol: 'DITTO',\n    address: {\n      56: '0x233d91a0713155003fc4dce0afa871b508b3b715',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://ditto.money/',\n  },\n  juv: {\n    symbol: 'JUV',\n    address: {\n      56: '0xc40c9a843e1c6d01b7578284a9028854f6683b1b',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  psg: {\n    symbol: 'PSG',\n    address: {\n      56: '0xbc5609612b7c44bef426de600b5fd1379db2ecf1',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  vai: {\n    symbol: 'VAI',\n    address: {\n      56: '0x4bd17003473389a42daf6a0a729f6fdb328bbbd7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  wbnb: {\n    symbol: 'wBNB',\n    address: {\n      56: '0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c',\n      97: '0xae13d989dac2f0debff460ac112a837c89baa7cd',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  blink: {\n    symbol: 'BLINK',\n    address: {\n      56: '0x63870a18b6e42b01ef1ad8a2302ef50b7132054f',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://blink.wink.org',\n  },\n  unfi: {\n    symbol: 'UNFI',\n    address: {\n      56: '0x728c5bac3c3e370e372fc4671f9ef6916b814d8b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unifiprotocol.com',\n  },\n  twt: {\n    symbol: 'TWT',\n    address: {\n      56: '0x4b0f1812e5df2a09796481ff14017e6005508003',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://trustwallet.com/',\n  },\n  hard: {\n    symbol: 'HARD',\n    address: {\n      56: '0xf79037f6f6be66832de4e7516be52826bc3cbcc4',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://hard.kava.io',\n  },\n  broobee: {\n    symbol: 'bROOBEE',\n    address: {\n      56: '0xe64f5cb844946c1f102bd25bbd87a5ab4ae89fbe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://roobee.io/',\n  },\n  stax: {\n    symbol: 'STAX',\n    address: {\n      56: '0x0da6ed8b13214ff28e9ca979dd37439e8a88f6c4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'http://stablexswap.com/',\n  },\n  nar: {\n    symbol: 'NAR',\n    address: {\n      56: '0xa1303e6199b319a891b79685f0537d289af1fc83',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://narwhalswap.org/',\n  },\n  nya: {\n    symbol: 'NYA',\n    address: {\n      56: '0xbfa0841f7a90c4ce6643f651756ee340991f99d5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nyanswop.org/',\n  },\n  ctk: {\n    symbol: 'CTK',\n    address: {\n      56: '0xa8c2b8eec3d368c0253ad3dae65a5f2bbb89c929',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.certik.foundation/',\n  },\n  inj: {\n    symbol: 'INJ',\n    address: {\n      56: '0xa2b726b1145a4773f68593cf171187d8ebe4d495',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://injectiveprotocol.com/',\n  },\n  sxp: {\n    symbol: 'SXP',\n    address: {\n      56: '0x47bead2563dcbf3bf2c9407fea4dc236faba485a',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swipe.io/',\n  },\n  alpha: {\n    symbol: 'ALPHA',\n    address: {\n      56: '0xa1faa113cbe53436df28ff0aee54275c13b40975',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://alphafinance.io/',\n  },\n  xvs: {\n    symbol: 'XVS',\n    address: {\n      56: '0xcf6bb5389c92bdda8a3747ddb454cb7a64626c63',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  sushi: {\n    symbol: 'SUSHI',\n    address: {\n      56: '0x947950bcc74888a40ffa2593c5798f11fc9124c4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://sushi.com/',\n  },\n  comp: {\n    symbol: 'COMP',\n    address: {\n      56: '0x52ce071bd9b1c4b00a0b92d298c512478cad67e8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://compound.finance/',\n  },\n  syrup: {\n    symbol: 'SYRUP',\n    address: {\n      56: '0x41cF31BF1142A4e432f2Fb28bea12EEA6C53B3f0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  bifi: {\n    symbol: 'BIFI',\n    address: {\n      56: '0xca3f508b8e4dd382ee878a314789373d80a5190a',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beefy.finance/',\n  },\n  dusk: {\n    symbol: 'DUSK',\n    address: {\n      56: '0xb2bd0749dbe21f623d9baba856d3b0f0e1bfec9c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusk.network/',\n  },\n  busd: {\n    symbol: 'BUSD',\n    address: {\n      56: '0xe9e7cea3dedca5984780bafc599bd69add087d56',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.paxos.com/busd/',\n  },\n  eth: {\n    symbol: 'ETH',\n    address: {\n      56: '0x2170ed0880ac9a755fd29b2688956bd959f933f8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/',\n  },\n  beth: {\n    symbol: 'BETH',\n    address: {\n      56: '0x250632378e573c6be1ac2f97fcdf00515d0aa91b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/eth2/beacon-chain/',\n  },\n  mamzn: {\n    symbol: 'mAMZN',\n    address: {\n      56: '0x3947B992DC0147D2D89dF0392213781b04B25075',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mgoogl: {\n    symbol: 'mGOOGL',\n    address: {\n      56: '0x62D71B23bF15218C7d2D7E48DBbD9e9c650B173f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mnflx: {\n    symbol: 'mNFLX',\n    address: {\n      56: '0xa04F060077D90Fe2647B61e4dA4aD1F97d6649dc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mtsla: {\n    symbol: 'mTSLA',\n    address: {\n      56: '0xF215A127A196e3988C09d052e16BcFD365Cd7AA3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  ltc: {\n    symbol: 'LTC',\n    address: {\n      56: '0x4338665cbb7b2485a8855a139b75d5e34ab0db94',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://litecoin.org/',\n  },\n  usdc: {\n    symbol: 'USDC',\n    address: {\n      56: '0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.centre.io/usdc',\n  },\n  dai: {\n    symbol: 'DAI',\n    address: {\n      56: '0x1af3f329e8be154074d8769d1ffa4ee058b1dbc3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'http://www.makerdao.com/',\n  },\n  ada: {\n    symbol: 'ADA',\n    address: {\n      56: '0x3ee2200efb3400fabb9aacf31297cbdd1d435d47',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.cardano.org/',\n  },\n  band: {\n    symbol: 'BAND',\n    address: {\n      56: '0xad6caeb32cd2c308980a548bd0bc5aa4306c6c18',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bandprotocol.com/',\n  },\n  dot: {\n    symbol: 'DOT',\n    address: {\n      56: '0x7083609fce4d1d8dc0c979aab8c869ea2c873402',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://polkadot.network/',\n  },\n  eos: {\n    symbol: 'EOS',\n    address: {\n      56: '0x56b6fb708fc5732dec1afc8d8556423a2edccbd6',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://eos.io/',\n  },\n  link: {\n    symbol: 'LINK',\n    address: {\n      56: '0xf8a0bf9cf54bb92f17374d9e9a321e6a111a51bd',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://chain.link/',\n  },\n  usdt: {\n    symbol: 'USDT',\n    address: {\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n      56: '0x55d398326f99059ff775485246999027b3197955',\n    },\n    decimals: 18,\n    projectLink: 'https://tether.to/',\n  },\n  btcb: {\n    symbol: 'BTCB',\n    address: {\n      56: '0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bitcoin.org/',\n  },\n  xrp: {\n    symbol: 'XRP',\n    address: {\n      56: '0x1d2f0da169ceb9fc7b3144628db156f3f6c60dbe',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://ripple.com/xrp/',\n  },\n  atom: {\n    symbol: 'ATOM',\n    address: {\n      56: '0x0eb3a705fc54725037cc9e008bdede697f62f335',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://cosmos.network/',\n  },\n  yfii: {\n    symbol: 'YFII',\n    address: {\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n      56: '0x7f70642d88cf1c4a3a7abb072b53b929b653eda5',\n    },\n    decimals: 18,\n    projectLink: 'https://dfi.money/#/',\n  },\n  xtz: {\n    symbol: 'XTZ',\n    address: {\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n      56: '0x16939ef78684453bfdfb47825f8a5f714f12623a',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tezos.com/',\n  },\n  bch: {\n    symbol: 'BCH',\n    address: {\n      56: '0x8ff795a6f4d97e7887c79bea79aba5cc76444adf',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'http://bch.info/',\n  },\n  yfi: {\n    symbol: 'YFI',\n    address: {\n      56: '0x88f1a5ae2a3bf98aeaf342d26b30a79438c9142e',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://yearn.finance/',\n  },\n  uni: {\n    symbol: 'UNI',\n    address: {\n      56: '0xbf5140a22578168fd562dccf235e5d43a02ce9b1',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://uniswap.org/',\n  },\n  fil: {\n    symbol: 'FIL',\n    address: {\n      56: '0x0d8ce2a99bb6e3b7db580ed848240e4a0f9ae153',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://filecoin.io/',\n  },\n  bake: {\n    symbol: 'BAKE',\n    address: {\n      56: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bakeryswap.org/',\n  },\n  burger: {\n    symbol: 'BURGER',\n    address: {\n      56: '0xae9269f27437f0fcbc232d39ec814844a51d6b8f',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://burgerswap.org/',\n  },\n  bdigg: {\n    symbol: 'bDIGG',\n    address: {\n      56: '0x5986d5c77c65e5801a5caa4fae80089f870a71da',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  bbadger: {\n    symbol: 'bBadger',\n    address: {\n      56: '0x1f7216fdb338247512ec99715587bb97bbf96eae',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  trade: {\n    symbol: 'TRADE',\n    address: {\n      56: '0x7af173f350d916358af3e218bdf2178494beb748',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unitrade.app/',\n  },\n  pnt: {\n    symbol: 'PNT',\n    address: {\n      56: '0xdaacb0ab6fb34d24e8a67bfa14bf4d95d4c7af92',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  mir: {\n    symbol: 'MIR',\n    address: {\n      56: '0x5b6dcf557e2abe2323c48445e8cc948910d8c2c9',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  pbtc: {\n    symbol: 'pBTC',\n    address: {\n      56: '0xed28a457a5a76596ac48d87c0f577020f6ea1c4c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  lto: {\n    symbol: 'LTO',\n    address: {\n      56: '0x857b222fc79e1cbbf8ca5f78cb133d1b7cf34bbd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ltonetwork.com/',\n  },\n  pcws: {\n    symbol: 'pCWS',\n    address: {\n      56: '0xbcf39f0edda668c58371e519af37ca705f2bfcbd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://game.seascape.network/',\n  },\n  zil: {\n    symbol: 'ZIL',\n    address: {\n      56: '0xb86abcb37c3a4b64f74f59301aff131a1becc787',\n      97: '',\n    },\n    decimals: 12,\n    projectLink: 'https://www.zilliqa.com/',\n  },\n  lien: {\n    symbol: 'LIEN',\n    address: {\n      56: '0x5d684adaf3fcfe9cfb5cede3abf02f0cdd1012e3',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://lien.finance/',\n  },\n  swth: {\n    symbol: 'SWTH',\n    address: {\n      56: '0x250b211EE44459dAd5Cd3bCa803dD6a7EcB5d46C',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://switcheo.network/',\n  },\n  dft: {\n    symbol: 'DFT',\n    address: {\n      56: '0x42712dF5009c20fee340B245b510c0395896cF6e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.dfuture.com/home',\n  },\n  gum: {\n    symbol: 'GUM',\n    address: {\n      56: '0xc53708664b99DF348dd27C3Ac0759d2DA9c40462',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://gourmetgalaxy.io/',\n  },\n  dego: {\n    symbol: 'DEGO',\n    address: {\n      56: '0x3fda9383a84c05ec8f7630fe10adf1fac13241cc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.dego.finance/home',\n  },\n  nrv: {\n    symbol: 'NRV',\n    address: {\n      56: '0x42f6f551ae042cbe50c739158b4f0cac0edb9096',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nerve.fi/',\n  },\n  easy: {\n    symbol: 'EASY',\n    address: {\n      56: '0x7c17c8bed8d14bacce824d020f994f4880d6ab3b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://easyfi.network/',\n  },\n  oddz: {\n    symbol: 'ODDZ',\n    address: {\n      56: '0xcd40f2670cf58720b694968698a5514e924f742d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://oddz.fi/',\n  },\n  hoo: {\n    symbol: 'HOO',\n    address: {\n      56: '0xe1d1f66215998786110ba0102ef558b22224c016',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://hoo.com/',\n  },\n  apys: {\n    symbol: 'APYS',\n    address: {\n      56: '0x37dfACfaeDA801437Ff648A1559d73f4C40aAcb7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://apyswap.com/',\n  },\n  bondly: {\n    symbol: 'BONDLY',\n    address: {\n      56: '0x96058f8c3e16576d9bd68766f3836d9a33158f89',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bondly.finance/',\n  },\n  tko: {\n    symbol: 'TKO',\n    address: {\n      56: '0x9f589e3eabe42ebc94a44727b3f3531c0c877809',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tokocrypto.com/',\n  },\n  itam: {\n    symbol: 'ITAM',\n    address: {\n      56: '0x04c747b40be4d535fc83d09939fb0f626f32800b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://itam.network/',\n  },\n  arpa: {\n    symbol: 'ARPA',\n    address: {\n      56: '0x6f769e65c14ebd1f68817f5f1dcdb61cfa2d6f7e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://arpachain.io/',\n  },\n  eps: {\n    symbol: 'EPS',\n    address: {\n      56: '0xa7f552078dcc247c2684336020c03648500c6d9f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ellipsis.finance/',\n  },\n  jgn: {\n    symbol: 'JGN',\n    address: {\n      56: '0xc13b7a43223bb9bf4b69bd68ab20ca1b79d81c75',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://jgndefi.com/',\n  },\n  tlm: {\n    symbol: 'TLM',\n    address: {\n      56: '0x2222227e22102fe3322098e4cbfe18cfebd57c95',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://alienworlds.io/',\n  },\n  perl: {\n    symbol: 'PERL',\n    address: {\n      56: '0x0f9e4d49f25de22c2202af916b681fbb3790497b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://perlinx.finance/',\n  },\n  alpa: {\n    symbol: 'ALPA',\n    address: {\n      56: '0xc5e6689c9c8b02be7c49912ef19e79cf24977f03',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.alpaca.city/',\n  },\n  hzn: {\n    symbol: 'HZN',\n    address: {\n      56: '0xc0eff7749b125444953ef89682201fb8c6a917cd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://horizonprotocol.com/',\n  },\n  suter: {\n    symbol: 'SUTER',\n    address: {\n      56: '0x4cfbbdfbd5bf0814472ff35c72717bd095ada055',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://shield.suterusu.io/',\n  },\n  cgg: {\n    symbol: 'CGG',\n    address: {\n      56: '0x1613957159e9b0ac6c80e824f7eea748a32a0ae2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chainguardians.io/',\n  },\n  mix: {\n    symbol: 'MIX',\n    address: {\n      56: '0xB67754f5b4C704A24d2db68e661b2875a4dDD197',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mixie.chainguardians.io/',\n  },\n  hakka: {\n    symbol: 'HAKKA',\n    address: {\n      56: '0x1d1eb8e8293222e1a29d2c0e4ce6c0acfd89aaac',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hakka.finance/',\n  },\n  xed: {\n    symbol: 'XED',\n    address: {\n      56: '0x5621b5a3f4a8008c4ccdd1b942b121c8b1944f1f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.exeedme.com/',\n  },\n  τbtc: {\n    symbol: 'τBTC',\n    address: {\n      56: '0x2cd1075682b0fccaadd0ca629e138e64015ba11c',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  alpaca: {\n    symbol: 'ALPACA',\n    address: {\n      56: '0x8f0528ce5ef7b51152a59745befdd91d97091d2f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.alpacafinance.org/',\n  },\n  dfd: {\n    symbol: 'DFD',\n    address: {\n      56: '0x9899a98b222fcb2f3dbee7df45d943093a4ff9ff',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusd.finance/',\n  },\n  lmt: {\n    symbol: 'LMT',\n    address: {\n      56: '0x9617857e191354dbea0b714d78bc59e57c411087',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://lympo.io/lmt/',\n  },\n  btt: {\n    symbol: 'BTT',\n    address: {\n      56: '0x8595f9da7b868b1822194faed312235e43007b49',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bittorrent.com/',\n  },\n  trx: {\n    symbol: 'TRX',\n    address: {\n      56: '0x85eac5ac2f758618dfa09bdbe0cf174e7d574d5b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tron.network/',\n  },\n  win: {\n    symbol: 'WIN',\n    address: {\n      56: '0xaef0d72a118ce24fee3cd1d43d383897d05b4e99',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://winklink.org/',\n  },\n  mcoin: {\n    symbol: 'mCOIN',\n    address: {\n      56: '0x49022089e78a8d46ec87a3af86a1db6c189afa6f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  math: {\n    symbol: 'MATH',\n    address: {\n      56: '0xf218184af829cf2b0019f8e6f0b2423498a36983',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mathwallet.org/',\n  },\n  kun: {\n    symbol: 'KUN',\n    address: {\n      56: '0x1A2fb0Af670D0234c2857FaD35b789F8Cb725584',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  qsd: {\n    symbol: 'QSD',\n    address: {\n      56: '0x07AaA29E63FFEB2EBf59B33eE61437E1a91A3bb2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  hyfi: {\n    symbol: 'HYFI',\n    address: {\n      56: '0x9a319b959e33369C5eaA494a770117eE3e585318',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hyfi.pro/#/',\n  },\n  oin: {\n    symbol: 'OIN',\n    address: {\n      56: '0x658E64FFcF40D240A43D52CA9342140316Ae44fA',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://oin.finance/',\n  },\n  doge: {\n    symbol: 'DOGE',\n    address: {\n      56: '0xba2ae424d960c26247dd6c32edc70b295c744c43',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://dogecoin.com/',\n  },\n  fine: {\n    symbol: 'FINE',\n    address: {\n      56: '0x4e6415a5727ea08aae4580057187923aec331227',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://refinable.com/',\n  },\n  one: {\n    symbol: 'ONE',\n    address: {\n      56: '0x04baf95fd4c52fd09a56d840baee0ab8d7357bf0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bigone.com/',\n  },\n  pmon: {\n    symbol: 'PMON',\n    address: {\n      56: '0x1796ae0b0fa4862485106a0de9b654eFE301D0b2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://polkamon.com/',\n  },\n  hotcross: {\n    symbol: 'HOTCROSS',\n    address: {\n      56: '0x4FA7163E153419E0E1064e418dd7A99314Ed27b6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.hotcross.com/',\n  },\n  τdoge: {\n    symbol: 'τDOGE',\n    address: {\n      56: '0xe550a593d09fbc8dcd557b5c88cea6946a8b404a',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  btr: {\n    symbol: 'BTR',\n    address: {\n      56: '0x5a16E8cE8cA316407c6E6307095dc9540a8D62B3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bitrue.com/',\n  },\n  ubxt: {\n    symbol: 'UBXT',\n    address: {\n      56: '0xbbeb90cfb6fafa1f69aa130b7341089abeef5811',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://upbots.com/',\n  },\n  wmass: {\n    symbol: 'WMASS',\n    address: {\n      56: '0x7e396bfc8a2f84748701167c2d622f041a1d7a17',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://massnet.org/en/',\n  },\n  rfox: {\n    symbol: 'RFOX',\n    address: {\n      56: '0x0a3a21356793b49154fd3bbe91cbc2a16c0457f5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.redfoxlabs.io/',\n  },\n  xend: {\n    symbol: 'XEND',\n    address: {\n      56: '0x4a080377f83D669D7bB83B3184a8A5E61B500608',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://xend.finance/',\n  },\n  cyc: {\n    symbol: 'CYC',\n    address: {\n      56: '0x810ee35443639348adbbc467b33310d2ab43c168',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://cyclone.xyz/',\n  },\n  chr: {\n    symbol: 'CHR',\n    address: {\n      56: '0xf9CeC8d50f6c8ad3Fb6dcCEC577e05aA32B224FE',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://chromia.com/',\n  },\n  kalm: {\n    symbol: 'KALM',\n    address: {\n      56: '0x4BA0057f784858a48fe351445C672FF2a3d43515',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://kalmar.io/',\n  },\n  deri: {\n    symbol: 'DERI',\n    address: {\n      56: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://deri.finance/#/index',\n  },\n  well: {\n    symbol: 'WELL',\n    address: {\n      56: '0xf07a32eb035b786898c00bb1c64d8c6f8e7a46d5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bitwellex.com/',\n  },\n  popen: {\n    symbol: 'pOPEN',\n    address: {\n      56: '0xabae871b7e3b67aeec6b46ae9fe1a91660aadac5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  ez: {\n    symbol: 'EZ',\n    address: {\n      56: '0x5512014efa6cd57764fa743756f7a6ce3358cc83',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://easyfi.network/',\n  },\n  vrt: {\n    symbol: 'VRT',\n    address: {\n      56: '0x5f84ce30dc3cf7909101c69086c50de191895883',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  tusd: {\n    symbol: 'TUSD',\n    address: {\n      56: '0x14016e85a25aeb13065688cafb43044c2ef86784',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.trueusd.com/',\n  },\n  mtrg: {\n    symbol: 'MTRG',\n    address: {\n      56: '0xbd2949f67dcdc549c6ebe98696449fa79d988a9f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.meter.io/',\n  },\n  ktn: {\n    symbol: 'KTN',\n    address: {\n      56: '0xdae6c2a48bfaa66b43815c5548b10800919c993e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://kattana.io/',\n  },\n  qkc: {\n    symbol: 'QKC',\n    address: {\n      56: '0xa1434f1fc3f437fa33f7a781e041961c0205b5da',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://quarkchain.io/',\n  },\n  bcfx: {\n    symbol: 'bCFX',\n    address: {\n      56: '0x045c4324039dA91c52C55DF5D785385Aab073DcF',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.confluxnetwork.org/',\n  },\n  mx: {\n    symbol: 'MX',\n    address: {\n      56: '0x9f882567a62a5560d147d64871776eea72df41d3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.mxc.com/',\n  },\n  ata: {\n    symbol: 'ATA',\n    address: {\n      56: '0xa2120b9e674d3fc3875f415a7df52e382f141225',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.ata.network/',\n  },\n  mbox: {\n    symbol: 'MBOX',\n    address: {\n      56: '0x3203c9E46cA618C8C1cE5dC67e7e9D75f5da2377',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.mobox.io/#/',\n  },\n  boring: {\n    symbol: 'BORING',\n    address: {\n      56: '0xffEecbf8D7267757c2dc3d13D730E97E15BfdF7F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.boringdao.com/',\n  },\n  marsh: {\n    symbol: 'MARSH',\n    address: {\n      56: '0x2FA5dAF6Fe0708fBD63b1A7D1592577284f52256',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unmarshal.io/',\n  },\n}\n\nexport default tokens\n","import { useMemo } from 'react'\nimport useWeb3 from 'hooks/useWeb3'\nimport {\n  getBep20Contract,\n  getCakeContract,\n  getBunnyFactoryContract,\n  getBunnySpecialContract,\n  getPancakeRabbitContract,\n  getProfileContract,\n  getIfoV1Contract,\n  getIfoV2Contract,\n  getLotteryContract,\n  getLotteryTicketContract,\n  getMasterchefContract,\n  getPointCenterIfoContract,\n  getSouschefContract,\n  getClaimRefundContract,\n  getTradingCompetitionContract,\n  getEasterNftContract,\n  getErc721Contract,\n  getCakeVaultContract,\n  getPredictionsContract,\n  getChainlinkOracleContract,\n  getSouschefV2Contract,\n  getLotteryV2Contract,\n} from 'utils/contractHelpers'\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoV1Contract = (address: string) => {\n  const web3 = useWeb3()\n  return useMemo(() => getIfoV1Contract(address, web3), [address, web3])\n}\n\nexport const useIfoV2Contract = (address: string) => {\n  const web3 = useWeb3()\n  return useMemo(() => getIfoV2Contract(address, web3), [address, web3])\n}\n\nexport const useERC20 = (address: string) => {\n  const web3 = useWeb3()\n  return useMemo(() => getBep20Contract(address, web3), [address, web3])\n}\n\n/**\n * @see https://docs.openzeppelin.com/contracts/3.x/api/token/erc721\n */\nexport const useERC721 = (address: string) => {\n  const web3 = useWeb3()\n  return useMemo(() => getErc721Contract(address, web3), [address, web3])\n}\n\nexport const useCake = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getCakeContract(web3), [web3])\n}\n\nexport const useBunnyFactory = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getBunnyFactoryContract(web3), [web3])\n}\n\nexport const usePancakeRabbits = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getPancakeRabbitContract(web3), [web3])\n}\n\nexport const useProfile = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getProfileContract(web3), [web3])\n}\n\nexport const useLottery = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getLotteryContract(web3), [web3])\n}\n\nexport const useLotteryTicket = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getLotteryTicketContract(web3), [web3])\n}\n\nexport const useLotteryV2Contract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getLotteryV2Contract(web3), [web3])\n}\n\nexport const useMasterchef = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getMasterchefContract(web3), [web3])\n}\n\nexport const useSousChef = (id) => {\n  const web3 = useWeb3()\n  return useMemo(() => getSouschefContract(id, web3), [id, web3])\n}\n\nexport const useSousChefV2 = (id) => {\n  const web3 = useWeb3()\n  return useMemo(() => getSouschefV2Contract(id, web3), [id, web3])\n}\n\nexport const usePointCenterIfoContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getPointCenterIfoContract(web3), [web3])\n}\n\nexport const useBunnySpecialContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getBunnySpecialContract(web3), [web3])\n}\n\nexport const useClaimRefundContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getClaimRefundContract(web3), [web3])\n}\n\nexport const useTradingCompetitionContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getTradingCompetitionContract(web3), [web3])\n}\n\nexport const useEasterNftContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getEasterNftContract(web3), [web3])\n}\n\nexport const useCakeVaultContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getCakeVaultContract(web3), [web3])\n}\n\nexport const usePredictionsContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getPredictionsContract(web3), [web3])\n}\n\nexport const useChainlinkOracleContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getChainlinkOracleContract(web3), [web3])\n}\n","import BigNumber from 'bignumber.js'\nimport { Pool } from 'state/types'\nimport { getRoi, tokenEarnedPerThousandDollarsCompounding } from 'utils/compoundApyHelpers'\nimport { getBalanceNumber, getFullDisplayBalance, getDecimalAmount } from 'utils/formatBalance'\n\nexport const convertSharesToCake = (\n  shares: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInCake = new BigNumber(shares.multipliedBy(sharePriceNumber))\n  const cakeAsNumberBalance = getBalanceNumber(amountInCake, decimals)\n  const cakeAsBigNumber = getDecimalAmount(new BigNumber(cakeAsNumberBalance), decimals)\n  const cakeAsDisplayBalance = getFullDisplayBalance(amountInCake, decimals, decimalsToRound)\n  return { cakeAsNumberBalance, cakeAsBigNumber, cakeAsDisplayBalance }\n}\n\nexport const convertCakeToShares = (\n  cake: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInShares = new BigNumber(cake.dividedBy(sharePriceNumber))\n  const sharesAsNumberBalance = getBalanceNumber(amountInShares, decimals)\n  const sharesAsBigNumber = getDecimalAmount(new BigNumber(sharesAsNumberBalance), decimals)\n  const sharesAsDisplayBalance = getFullDisplayBalance(amountInShares, decimals, decimalsToRound)\n  return { sharesAsNumberBalance, sharesAsBigNumber, sharesAsDisplayBalance }\n}\n\nconst AUTO_VAULT_COMPOUND_FREQUENCY = 288\nconst MANUAL_POOL_COMPOUND_FREQUENCY = 1\n\nexport const getAprData = (pool: Pool, performanceFee: number) => {\n  const { isAutoVault, earningTokenPrice, apr } = pool\n  // special handling for tokens like tBTC or BIFI where the daily token rewards for $1000 dollars will be less than 0.001 of that token\n  const isHighValueToken = Math.round(earningTokenPrice / 1000) > 0\n  const roundingDecimals = isHighValueToken ? 4 : 2\n\n  //   Estimate & manual for now. 288 = once every 5 mins. We can change once we have a better sense of this\n  const compoundFrequency = isAutoVault ? AUTO_VAULT_COMPOUND_FREQUENCY : MANUAL_POOL_COMPOUND_FREQUENCY\n\n  if (isAutoVault) {\n    const oneThousandDollarsWorthOfToken = 1000 / earningTokenPrice\n    const tokenEarnedPerThousand365D = tokenEarnedPerThousandDollarsCompounding({\n      numberOfDays: 365,\n      farmApr: apr,\n      tokenPrice: earningTokenPrice,\n      roundingDecimals,\n      compoundFrequency,\n      performanceFee,\n    })\n    const autoApr = getRoi({\n      amountEarned: tokenEarnedPerThousand365D,\n      amountInvested: oneThousandDollarsWorthOfToken,\n    })\n    return { apr: autoApr, isHighValueToken, roundingDecimals, compoundFrequency }\n  }\n  return { apr, isHighValueToken, roundingDecimals, compoundFrequency }\n}\n\nexport const getCakeVaultEarnings = (\n  account: string,\n  cakeAtLastUserAction: BigNumber,\n  userShares: BigNumber,\n  pricePerFullShare: BigNumber,\n  earningTokenPrice: number,\n) => {\n  const hasAutoEarnings =\n    account && cakeAtLastUserAction && cakeAtLastUserAction.gt(0) && userShares && userShares.gt(0)\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n  const autoCakeProfit = cakeAsBigNumber.minus(cakeAtLastUserAction)\n  const autoCakeToDisplay = autoCakeProfit.gte(0) ? getBalanceNumber(autoCakeProfit, 18) : 0\n\n  const autoUsdProfit = autoCakeProfit.times(earningTokenPrice)\n  const autoUsdToDisplay = autoUsdProfit.gte(0) ? getBalanceNumber(autoUsdProfit, 18) : 0\n  return { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay }\n}\n\nexport const getPoolBlockInfo = (pool: Pool, currentBlock: number) => {\n  const { startBlock, endBlock, isFinished } = pool\n  const shouldShowBlockCountdown = Boolean(!isFinished && startBlock && endBlock)\n  const blocksUntilStart = Math.max(startBlock - currentBlock, 0)\n  const blocksRemaining = Math.max(endBlock - currentBlock, 0)\n  const hasPoolStarted = blocksUntilStart === 0 && blocksRemaining > 0\n  const blocksToDisplay = hasPoolStarted ? blocksRemaining : blocksUntilStart\n  return { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay }\n}\n","import { configureStore } from '@reduxjs/toolkit'\nimport { useDispatch } from 'react-redux'\nimport farmsReducer from './farms'\nimport poolsReducer from './pools'\nimport predictionsReducer from './predictions'\nimport profileReducer from './profile'\nimport teamsReducer from './teams'\nimport achievementsReducer from './achievements'\nimport blockReducer from './block'\nimport collectiblesReducer from './collectibles'\n\nconst store = configureStore({\n  devTools: process.env.NODE_ENV !== 'production',\n  reducer: {\n    achievements: achievementsReducer,\n    block: blockReducer,\n    farms: farmsReducer,\n    pools: poolsReducer,\n    predictions: predictionsReducer,\n    profile: profileReducer,\n    teams: teamsReducer,\n    collectibles: collectiblesReducer,\n  },\n})\n\n/**\n * @see https://redux-toolkit.js.org/usage/usage-with-typescript#getting-the-dispatch-type\n */\nexport type AppDispatch = typeof store.dispatch\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\n\nexport default store\n","import { useEffect, useState, useRef } from 'react'\nimport Web3 from 'web3'\nimport { useWeb3React } from '@web3-react/core'\nimport { getWeb3NoAccount } from 'utils/web3'\n\n/**\n * Provides a web3 instance using the provider provided by useWallet\n * with a fallback of an httpProver\n * Recreate web3 instance only if the provider change\n */\nconst useWeb3 = () => {\n  const { library } = useWeb3React()\n  const refEth = useRef(library)\n  const [web3, setweb3] = useState(library ? new Web3(library) : getWeb3NoAccount())\n\n  useEffect(() => {\n    if (library !== refEth.current) {\n      setweb3(library ? new Web3(library) : getWeb3NoAccount())\n      refEth.current = library\n    }\n  }, [library])\n\n  return web3\n}\n\nexport default useWeb3\n","import Web3 from 'web3'\nimport { AbiItem } from 'web3-utils'\nimport { Interface } from '@ethersproject/abi'\nimport { getWeb3NoAccount } from 'utils/web3'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport { getMulticallAddress } from 'utils/addressHelpers'\n\ninterface Call {\n  address: string // Address of the contract\n  name: string // Function name on the contract (example: balanceOf)\n  params?: any[] // Function params\n}\n\ninterface MulticallOptions {\n  web3?: Web3\n  blockNumber?: number\n  requireSuccess?: boolean\n}\n\nconst multicall = async (abi: any[], calls: Call[], options: MulticallOptions = {}) => {\n  try {\n    const web3 = options.web3 || getWeb3NoAccount()\n    const multi = new web3.eth.Contract(MultiCallAbi as unknown as AbiItem, getMulticallAddress())\n    const itf = new Interface(abi)\n\n    const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n    const { returnData } = await multi.methods.aggregate(calldata).call(undefined, options.blockNumber)\n    const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\n\n    return res\n  } catch (error) {\n    throw new Error(error)\n  }\n}\n\n/**\n * Multicall V2 uses the new \"tryAggregate\" function. It is different in 2 ways\n *\n * 1. If \"requireSuccess\" is false multicall will not bail out if one of the calls fails\n * 2. The return inclues a boolean whether the call was successful e.g. [wasSuccessfull, callResult]\n */\nexport const multicallv2 = async (abi: any[], calls: Call[], options: MulticallOptions = {}) => {\n  const web3 = options.web3 || getWeb3NoAccount()\n  const multi = new web3.eth.Contract(MultiCallAbi as unknown as AbiItem, getMulticallAddress())\n  const itf = new Interface(abi)\n\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n  const returnData = await multi.methods\n    .tryAggregate(options.requireSuccess === undefined ? true : options.requireSuccess, calldata)\n    .call(undefined, options.blockNumber)\n  const res = returnData.map((call, i) => {\n    const [result, data] = call\n    return {\n      result,\n      data: itf.decodeFunctionResult(calls[i].name, data),\n    }\n  })\n\n  return res\n}\nexport default multicall\n","import Web3 from 'web3'\nimport { HttpProviderOptions } from 'web3-core-helpers'\nimport { ARCHIVED_NODE } from 'config/constants/endpoints'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\nconst web3NoAccount = new Web3(httpProvider)\n\nconst getWeb3NoAccount = () => {\n  return web3NoAccount\n}\n\nconst getWeb3WithArchivedNodeProvider = () => {\n  const archivedHttpProvider = new Web3.providers.HttpProvider(ARCHIVED_NODE, { timeout: 10000 } as HttpProviderOptions)\n  return new Web3(archivedHttpProvider)\n}\n\nexport { getWeb3NoAccount, getWeb3WithArchivedNodeProvider }\nexport default web3NoAccount\n","export { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync } from './farms'\nexport {\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  fetchCakeVaultPublicData,\n  fetchCakeVaultUserData,\n  fetchCakeVaultFees,\n  updateUserAllowance,\n  updateUserBalance,\n  updateUserPendingReward,\n  updateUserStakedBalance,\n} from './pools'\nexport { profileFetchStart, profileFetchSucceeded, profileFetchFailed } from './profile'\nexport { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } from './teams'\nexport { setBlock } from './block'\n","import BigNumber from 'bignumber.js'\nimport { DEFAULT_GAS_LIMIT, DEFAULT_TOKEN_DECIMAL } from 'config'\nimport { ethers } from 'ethers'\nimport { Pair, TokenAmount, Token } from '@pancakeswap-libs/sdk'\nimport { getLpContract, getMasterchefContract } from 'utils/contractHelpers'\nimport farms from 'config/constants/farms'\nimport { getAddress, getCakeAddress } from 'utils/addressHelpers'\nimport tokens from 'config/constants/tokens'\nimport pools from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport { multicallv2 } from './multicall'\nimport { getWeb3WithArchivedNodeProvider } from './web3'\nimport { getBalanceAmount } from './formatBalance'\nimport { BIG_TEN, BIG_ZERO } from './bigNumber'\n\nexport const approve = async (lpContract, masterChefContract, account) => {\n  return lpContract.methods\n    .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\n    .send({ from: account })\n}\n\nexport const stake = async (masterChefContract, pid, amount, account) => {\n  if (pid === 0) {\n    return masterChefContract.methods\n      .enterStaking(new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString())\n      .send({ from: account, gas: DEFAULT_GAS_LIMIT })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n\n  return masterChefContract.methods\n    .deposit(pid, new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString())\n    .send({ from: account, gas: DEFAULT_GAS_LIMIT })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStake = async (sousChefContract, amount, decimals = 18, account) => {\n  return sousChefContract.methods\n    .deposit(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString())\n    .send({ from: account, gas: DEFAULT_GAS_LIMIT })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStakeBnb = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({\n      from: account,\n      gas: DEFAULT_GAS_LIMIT,\n      value: new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString(),\n    })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const unstake = async (masterChefContract, pid, amount, account) => {\n  if (pid === 0) {\n    return masterChefContract.methods\n      .leaveStaking(new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString())\n      .send({ from: account, gas: DEFAULT_GAS_LIMIT })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n\n  return masterChefContract.methods\n    .withdraw(pid, new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString())\n    .send({ from: account, gas: DEFAULT_GAS_LIMIT })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousUnstake = async (sousChefContract, amount, decimals, account) => {\n  return sousChefContract.methods\n    .withdraw(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString())\n    .send({ from: account, gas: DEFAULT_GAS_LIMIT })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousEmergencyUnstake = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .emergencyWithdraw()\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const harvest = async (masterChefContract, pid, account) => {\n  if (pid === 0) {\n    return masterChefContract.methods\n      .leaveStaking('0')\n      .send({ from: account, gas: DEFAULT_GAS_LIMIT })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n\n  return masterChefContract.methods\n    .deposit(pid, '0')\n    .send({ from: account, gas: DEFAULT_GAS_LIMIT })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvest = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit('0')\n    .send({ from: account, gas: DEFAULT_GAS_LIMIT })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvestBnb = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({ from: account, gas: DEFAULT_GAS_LIMIT, value: BIG_ZERO })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\nconst cakeBnbPid = 1\nconst cakeBnbFarm = farms.find((farm) => farm.pid === cakeBnbPid)\n\nconst CAKE_TOKEN = new Token(chainId, getCakeAddress(), 18)\nconst WBNB_TOKEN = new Token(chainId, tokens.wbnb.address[chainId], 18)\nconst CAKE_BNB_TOKEN = new Token(chainId, getAddress(cakeBnbFarm.lpAddresses), 18)\n\n/**\n * Returns the total CAKE staked in the CAKE-BNB LP\n */\nexport const getUserStakeInCakeBnbLp = async (account: string, block?: number) => {\n  try {\n    const archivedWeb3 = getWeb3WithArchivedNodeProvider()\n    const masterContract = getMasterchefContract(archivedWeb3)\n    const cakeBnbContract = getLpContract(getAddress(cakeBnbFarm.lpAddresses), archivedWeb3)\n    const totalSupplyLP = await cakeBnbContract.methods.totalSupply().call(undefined, block)\n    const reservesLP = await cakeBnbContract.methods.getReserves().call(undefined, block)\n    const cakeBnbBalance = await masterContract.methods.userInfo(cakeBnbPid, account).call(undefined, block)\n\n    const pair: Pair = new Pair(\n      new TokenAmount(CAKE_TOKEN, reservesLP._reserve0.toString()),\n      new TokenAmount(WBNB_TOKEN, reservesLP._reserve1.toString()),\n    )\n    const cakeLPBalance = pair.getLiquidityValue(\n      pair.token0,\n      new TokenAmount(CAKE_BNB_TOKEN, totalSupplyLP.toString()),\n      new TokenAmount(CAKE_BNB_TOKEN, cakeBnbBalance.amount.toString()),\n      false,\n    )\n\n    return new BigNumber(cakeLPBalance.toSignificant(18))\n  } catch (error) {\n    console.error(`CAKE-BNB LP error: ${error}`)\n    return BIG_ZERO\n  }\n}\n\n/**\n * Gets the cake staked in the main pool\n */\nexport const getUserStakeInCakePool = async (account: string, block?: number) => {\n  try {\n    const archivedWeb3 = getWeb3WithArchivedNodeProvider()\n    const masterContract = getMasterchefContract(archivedWeb3)\n    const response = await masterContract.methods.userInfo(0, account).call(undefined, block)\n\n    return getBalanceAmount(new BigNumber(response.amount))\n  } catch (error) {\n    console.error('Error getting stake in CAKE pool', error)\n    return BIG_ZERO\n  }\n}\n\n/**\n * Returns total staked value of active pools\n */\nexport const getUserStakeInPools = async (account: string, block?: number) => {\n  try {\n    const multicallOptions = {\n      web3: getWeb3WithArchivedNodeProvider(),\n      blockNumber: block,\n      requireSuccess: false,\n    }\n    const eligiblePools = pools\n      .filter((pool) => pool.sousId !== 0)\n      .filter((pool) => pool.isFinished === false || pool.isFinished === undefined)\n\n    // Get the ending block is eligible pools\n    const endBlockCalls = eligiblePools.map((eligiblePool) => ({\n      address: getAddress(eligiblePool.contractAddress),\n      name: 'bonusEndBlock',\n    }))\n    const startBlockCalls = eligiblePools.map((eligiblePool) => ({\n      address: getAddress(eligiblePool.contractAddress),\n      name: 'startBlock',\n    }))\n    const endBlocks = await multicallv2(sousChefABI, endBlockCalls, multicallOptions)\n    const startBlocks = await multicallv2(sousChefABI, startBlockCalls, multicallOptions)\n\n    // Filter out pools that have ended\n    const activePools = eligiblePools.filter((eligiblePool, index) => {\n      const endBlock = new BigNumber(endBlocks[index])\n      const startBlock = new BigNumber(startBlocks[index])\n\n      return startBlock.lte(block) && endBlock.gte(block)\n    })\n\n    // Get the user info of each pool\n    const userInfoCalls = activePools.map((activePool) => ({\n      address: getAddress(activePool.contractAddress),\n      name: 'userInfo',\n      params: [account],\n    }))\n    const userInfos = await multicallv2(sousChefABI, userInfoCalls, multicallOptions)\n\n    return userInfos.reduce((accum: BigNumber, userInfo) => {\n      return accum.plus(new BigNumber(userInfo.amount._hex))\n    }, new BigNumber(0))\n  } catch (error) {\n    console.error('Error fetching staked values:', error)\n    return BIG_ZERO\n  }\n}\n","import BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport cakeABI from 'config/abi/cake.json'\nimport wbnbABI from 'config/abi/weth.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getWbnbAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getSouschefV2Contract } from 'utils/contractHelpers'\n\nexport const fetchPoolsBlockLimits = async () => {\n  const poolsWithEnd = poolsConfig.filter((p) => p.sousId !== 0)\n  const callsStartBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'startBlock',\n    }\n  })\n  const callsEndBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'bonusEndBlock',\n    }\n  })\n\n  const starts = await multicall(sousChefABI, callsStartBlock)\n  const ends = await multicall(sousChefABI, callsEndBlock)\n\n  return poolsWithEnd.map((cakePoolConfig, index) => {\n    const startBlock = starts[index]\n    const endBlock = ends[index]\n    return {\n      sousId: cakePoolConfig.sousId,\n      startBlock: new BigNumber(startBlock).toJSON(),\n      endBlock: new BigNumber(endBlock).toJSON(),\n    }\n  })\n}\n\nexport const fetchPoolsTotalStaking = async () => {\n  const nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\n  const bnbPool = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\n\n  const callsNonBnbPools = nonBnbPools.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.stakingToken.address),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const callsBnbPools = bnbPool.map((poolConfig) => {\n    return {\n      address: getWbnbAddress(),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const nonBnbPoolsTotalStaked = await multicall(cakeABI, callsNonBnbPools)\n  const bnbPoolsTotalStaked = await multicall(wbnbABI, callsBnbPools)\n\n  return [\n    ...nonBnbPools.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(nonBnbPoolsTotalStaked[index]).toJSON(),\n    })),\n    ...bnbPool.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(bnbPoolsTotalStaked[index]).toJSON(),\n    })),\n  ]\n}\n\nexport const fetchPoolStakingLimit = async (sousId: number): Promise<BigNumber> => {\n  try {\n    const sousContract = getSouschefV2Contract(sousId)\n    const stakingLimit = await sousContract.methods.poolLimitPerUser().call()\n    return new BigNumber(stakingLimit)\n  } catch (error) {\n    return BIG_ZERO\n  }\n}\n\nexport const fetchPoolsStakingLimits = async (\n  poolsWithStakingLimit: number[],\n): Promise<{ [key: string]: BigNumber }> => {\n  const validPools = poolsConfig\n    .filter((p) => p.stakingToken.symbol !== 'BNB' && !p.isFinished)\n    .filter((p) => !poolsWithStakingLimit.includes(p.sousId))\n\n  // Get the staking limit for each valid pool\n  // Note: We cannot batch the calls via multicall because V1 pools do not have \"poolLimitPerUser\" and will throw an error\n  const stakingLimitPromises = validPools.map((validPool) => fetchPoolStakingLimit(validPool.sousId))\n  const stakingLimits = await Promise.all(stakingLimitPromises)\n\n  return stakingLimits.reduce((accum, stakingLimit, index) => {\n    return {\n      ...accum,\n      [validPools[index].sousId]: stakingLimit,\n    }\n  }, {})\n}\n","import { AbiItem } from 'web3-utils'\nimport poolsConfig from 'config/constants/pools'\nimport masterChefABI from 'config/abi/masterchef.json'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport erc20ABI from 'config/abi/erc20.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { getWeb3NoAccount } from 'utils/web3'\nimport BigNumber from 'bignumber.js'\n\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\nconst bnbPools = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\nconst nonMasterPools = poolsConfig.filter((p) => p.sousId !== 0)\nconst web3 = getWeb3NoAccount()\nconst masterChefContract = new web3.eth.Contract(masterChefABI as unknown as AbiItem, getMasterChefAddress())\n\nexport const fetchPoolsAllowance = async (account) => {\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'allowance',\n    params: [account, getAddress(p.contractAddress)],\n  }))\n\n  const allowances = await multicall(erc20ABI, calls)\n  return nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\n    {},\n  )\n}\n\nexport const fetchUserBalances = async (account) => {\n  // Non BNB pools\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'balanceOf',\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\n  const tokenBalances = nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\n    {},\n  )\n\n  // BNB pools\n  const bnbBalance = await web3.eth.getBalance(account)\n  const bnbBalances = bnbPools.reduce(\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance).toJSON() }),\n    {},\n  )\n\n  return { ...tokenBalances, ...bnbBalances }\n}\n\nexport const fetchUserStakeBalances = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'userInfo',\n    params: [account],\n  }))\n  const userInfo = await multicall(sousChefABI, calls)\n  const stakedBalances = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const { amount: masterPoolAmount } = await masterChefContract.methods.userInfo('0', account).call()\n\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount).toJSON() }\n}\n\nexport const fetchUserPendingRewards = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'pendingReward',\n    params: [account],\n  }))\n  const res = await multicall(sousChefABI, calls)\n  const pendingRewards = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const pendingReward = await masterChefContract.methods.pendingCake('0', account).call()\n\n  return { ...pendingRewards, 0: new BigNumber(pendingReward).toJSON() }\n}\n","import BigNumber from 'bignumber.js'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { getCakeVaultContract } from 'utils/contractHelpers'\nimport makeBatchRequest from 'utils/makeBatchRequest'\n\nconst cakeVaultContract = getCakeVaultContract()\n\nexport const fetchPublicVaultData = async () => {\n  try {\n    const [sharePrice, shares, estimatedCakeBountyReward, totalPendingCakeHarvest] = await makeBatchRequest([\n      cakeVaultContract.methods.getPricePerFullShare().call,\n      cakeVaultContract.methods.totalShares().call,\n      cakeVaultContract.methods.calculateHarvestCakeRewards().call,\n      cakeVaultContract.methods.calculateTotalPendingCakeRewards().call,\n    ])\n    const totalSharesAsBigNumber = new BigNumber(shares as string)\n    const sharePriceAsBigNumber = new BigNumber(sharePrice as string)\n    const totalCakeInVaultEstimate = convertSharesToCake(totalSharesAsBigNumber, sharePriceAsBigNumber)\n    return {\n      totalShares: totalSharesAsBigNumber.toJSON(),\n      pricePerFullShare: sharePriceAsBigNumber.toJSON(),\n      totalCakeInVault: totalCakeInVaultEstimate.cakeAsBigNumber.toJSON(),\n      estimatedCakeBountyReward: new BigNumber(estimatedCakeBountyReward as string).toJSON(),\n      totalPendingCakeHarvest: new BigNumber(totalPendingCakeHarvest as string).toJSON(),\n    }\n  } catch (error) {\n    return {\n      totalShares: null,\n      pricePerFullShare: null,\n      totalCakeInVault: null,\n      estimatedCakeBountyReward: null,\n      totalPendingCakeHarvest: null,\n    }\n  }\n}\n\nexport const fetchVaultFees = async () => {\n  try {\n    const [performanceFee, callFee, withdrawalFee, withdrawalFeePeriod] = await makeBatchRequest([\n      cakeVaultContract.methods.performanceFee().call,\n      cakeVaultContract.methods.callFee().call,\n      cakeVaultContract.methods.withdrawFee().call,\n      cakeVaultContract.methods.withdrawFeePeriod().call,\n    ])\n    return {\n      performanceFee: parseInt(performanceFee as string, 10),\n      callFee: parseInt(callFee as string, 10),\n      withdrawalFee: parseInt(withdrawalFee as string, 10),\n      withdrawalFeePeriod: parseInt(withdrawalFeePeriod as string, 10),\n    }\n  } catch (error) {\n    return {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    }\n  }\n}\n\nexport default fetchPublicVaultData\n","import BigNumber from 'bignumber.js'\nimport { getCakeVaultContract } from 'utils/contractHelpers'\n\nconst cakeVaultContract = getCakeVaultContract()\n\nconst fetchVaultUser = async (account: string) => {\n  try {\n    const userContractResponse = await cakeVaultContract.methods.userInfo(account).call()\n    return {\n      isLoading: false,\n      userShares: new BigNumber(userContractResponse.shares).toJSON(),\n      lastDepositedTime: userContractResponse.lastDepositedTime as string,\n      lastUserActionTime: userContractResponse.lastUserActionTime as string,\n      cakeAtLastUserAction: new BigNumber(userContractResponse.cakeAtLastUserAction).toJSON(),\n    }\n  } catch (error) {\n    return {\n      isLoading: true,\n      userShares: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n      cakeAtLastUserAction: null,\n    }\n  }\n}\n\nexport default fetchVaultUser\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { PoolsState, Pool, CakeVault, VaultFees, VaultUser, AppThunk } from 'state/types'\nimport { getPoolApr } from 'utils/apr'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { getAddress } from 'utils/addressHelpers'\nimport { fetchPoolsBlockLimits, fetchPoolsStakingLimits, fetchPoolsTotalStaking } from './fetchPools'\nimport {\n  fetchPoolsAllowance,\n  fetchUserBalances,\n  fetchUserStakeBalances,\n  fetchUserPendingRewards,\n} from './fetchPoolsUser'\nimport { fetchPublicVaultData, fetchVaultFees } from './fetchVaultPublic'\nimport fetchVaultUser from './fetchVaultUser'\nimport { getTokenPricesFromFarm } from './helpers'\n\nconst initialState: PoolsState = {\n  data: [...poolsConfig],\n  userDataLoaded: false,\n  cakeVault: {\n    totalShares: null,\n    pricePerFullShare: null,\n    totalCakeInVault: null,\n    estimatedCakeBountyReward: null,\n    totalPendingCakeHarvest: null,\n    fees: {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    },\n    userData: {\n      isLoading: true,\n      userShares: null,\n      cakeAtLastUserAction: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n    },\n  },\n}\n\n// Thunks\nexport const fetchPoolsPublicDataAsync = (currentBlock: number) => async (dispatch, getState) => {\n  const blockLimits = await fetchPoolsBlockLimits()\n  const totalStakings = await fetchPoolsTotalStaking()\n\n  const prices = getTokenPricesFromFarm(getState().farms.data)\n\n  const liveData = poolsConfig.map((pool) => {\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\n    const isPoolEndBlockExceeded = currentBlock > 0 && blockLimit ? currentBlock > Number(blockLimit.endBlock) : false\n    const isPoolFinished = pool.isFinished || isPoolEndBlockExceeded\n\n    const stakingTokenAddress = pool.stakingToken.address ? getAddress(pool.stakingToken.address).toLowerCase() : null\n    const stakingTokenPrice = stakingTokenAddress ? prices[stakingTokenAddress] : 0\n\n    const earningTokenAddress = pool.earningToken.address ? getAddress(pool.earningToken.address).toLowerCase() : null\n    const earningTokenPrice = earningTokenAddress ? prices[earningTokenAddress] : 0\n    const apr = !isPoolFinished\n      ? getPoolApr(\n          stakingTokenPrice,\n          earningTokenPrice,\n          getBalanceNumber(new BigNumber(totalStaking.totalStaked), pool.stakingToken.decimals),\n          parseFloat(pool.tokenPerBlock),\n        )\n      : 0\n\n    return {\n      ...blockLimit,\n      ...totalStaking,\n      stakingTokenPrice,\n      earningTokenPrice,\n      apr,\n      isFinished: isPoolFinished,\n    }\n  })\n\n  dispatch(setPoolsPublicData(liveData))\n}\n\nexport const fetchPoolsStakingLimitsAsync = () => async (dispatch, getState) => {\n  const poolsWithStakingLimit = getState()\n    .pools.data.filter(({ stakingLimit }) => stakingLimit !== null && stakingLimit !== undefined)\n    .map((pool) => pool.sousId)\n\n  const stakingLimits = await fetchPoolsStakingLimits(poolsWithStakingLimit)\n\n  const stakingLimitData = poolsConfig.map((pool) => {\n    if (poolsWithStakingLimit.includes(pool.sousId)) {\n      return { sousId: pool.sousId }\n    }\n    const stakingLimit = stakingLimits[pool.sousId] || BIG_ZERO\n    return {\n      sousId: pool.sousId,\n      stakingLimit: stakingLimit.toJSON(),\n    }\n  })\n\n  dispatch(setPoolsPublicData(stakingLimitData))\n}\n\nexport const fetchPoolsUserDataAsync =\n  (account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    const stakingTokenBalances = await fetchUserBalances(account)\n    const stakedBalances = await fetchUserStakeBalances(account)\n    const pendingRewards = await fetchUserPendingRewards(account)\n\n    const userData = poolsConfig.map((pool) => ({\n      sousId: pool.sousId,\n      allowance: allowances[pool.sousId],\n      stakingTokenBalance: stakingTokenBalances[pool.sousId],\n      stakedBalance: stakedBalances[pool.sousId],\n      pendingReward: pendingRewards[pool.sousId],\n    }))\n\n    dispatch(setPoolsUserData(userData))\n  }\n\nexport const updateUserAllowance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\n  }\n\nexport const updateUserBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const tokenBalances = await fetchUserBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\n  }\n\nexport const updateUserStakedBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const stakedBalances = await fetchUserStakeBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\n  }\n\nexport const updateUserPendingReward =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const pendingRewards = await fetchUserPendingRewards(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\n  }\n\nexport const fetchCakeVaultPublicData = createAsyncThunk<CakeVault>('cakeVault/fetchPublicData', async () => {\n  const publicVaultInfo = await fetchPublicVaultData()\n  return publicVaultInfo\n})\n\nexport const fetchCakeVaultFees = createAsyncThunk<VaultFees>('cakeVault/fetchFees', async () => {\n  const vaultFees = await fetchVaultFees()\n  return vaultFees\n})\n\nexport const fetchCakeVaultUserData = createAsyncThunk<VaultUser, { account: string }>(\n  'cakeVault/fetchUser',\n  async ({ account }) => {\n    const userData = await fetchVaultUser(account)\n    return userData\n  },\n)\n\nexport const PoolsSlice = createSlice({\n  name: 'Pools',\n  initialState,\n  reducers: {\n    setPoolsPublicData: (state, action) => {\n      const livePoolsData: Pool[] = action.payload\n      state.data = state.data.map((pool) => {\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, ...livePoolData }\n      })\n    },\n    setPoolsUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((pool) => {\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, userData: userPoolData }\n      })\n      state.userDataLoaded = true\n    },\n    updatePoolsUserData: (state, action) => {\n      const { field, value, sousId } = action.payload\n      const index = state.data.findIndex((p) => p.sousId === sousId)\n\n      if (index >= 0) {\n        state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    // Vault public data that updates frequently\n    builder.addCase(fetchCakeVaultPublicData.fulfilled, (state, action: PayloadAction<CakeVault>) => {\n      state.cakeVault = { ...state.cakeVault, ...action.payload }\n    })\n    // Vault fees\n    builder.addCase(fetchCakeVaultFees.fulfilled, (state, action: PayloadAction<VaultFees>) => {\n      const fees = action.payload\n      state.cakeVault = { ...state.cakeVault, fees }\n    })\n    // Vault user data\n    builder.addCase(fetchCakeVaultUserData.fulfilled, (state, action: PayloadAction<VaultUser>) => {\n      const userData = action.payload\n      userData.isLoading = false\n      state.cakeVault = { ...state.cakeVault, userData }\n    })\n  },\n})\n\n// Actions\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\n\nexport default PoolsSlice.reducer\n","import tokens from './tokens'\nimport { PoolConfig, PoolCategory } from './types'\n\nconst pools: PoolConfig[] = [\n  {\n    sousId: 0,\n    stakingToken: tokens.zeus,\n    earningToken: tokens.zeus,\n    contractAddress: {\n      97: '',\n      56: '0x53dD4Ff459a03c502a9F1fE408D6EE63aC600555',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '1',\n    sortOrder: 1,\n    isFinished: false,\n   },\n \n   \n]\n\nexport default pools\n","import { ThunkAction } from 'redux-thunk'\nimport { AnyAction } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport { CampaignType, FarmConfig, Nft, PoolConfig, Team } from 'config/constants/types'\n\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, State, unknown, AnyAction>\n\nexport type TranslatableText =\n  | string\n  | {\n      key: string\n      data?: {\n        [key: string]: string | number\n      }\n    }\n\nexport type SerializedBigNumber = string\n\nexport interface Farm extends FarmConfig {\n  tokenAmountMc?: SerializedBigNumber\n  quoteTokenAmountMc?: SerializedBigNumber\n  tokenAmountTotal?: SerializedBigNumber\n  quoteTokenAmountTotal?: SerializedBigNumber\n  lpTotalInQuoteToken?: SerializedBigNumber\n  lpTotalSupply?: SerializedBigNumber\n  tokenPriceVsQuote?: SerializedBigNumber\n  poolWeight?: SerializedBigNumber\n  userData?: {\n    allowance: string\n    tokenBalance: string\n    stakedBalance: string\n    earnings: string\n  }\n}\n\nexport interface Pool extends PoolConfig {\n  totalStaked?: BigNumber\n  stakingLimit?: BigNumber\n  startBlock?: number\n  endBlock?: number\n  apr?: number\n  stakingTokenPrice?: number\n  earningTokenPrice?: number\n  isAutoVault?: boolean\n  userData?: {\n    allowance: BigNumber\n    stakingTokenBalance: BigNumber\n    stakedBalance: BigNumber\n    pendingReward: BigNumber\n  }\n}\n\nexport interface Profile {\n  userId: number\n  points: number\n  teamId: number\n  nftAddress: string\n  tokenId: number\n  isActive: boolean\n  username: string\n  nft?: Nft\n  team: Team\n  hasRegistered: boolean\n}\n\n// Slices states\n\nexport interface FarmsState {\n  data: Farm[]\n  loadArchivedFarmsData: boolean\n  userDataLoaded: boolean\n}\n\nexport interface VaultFees {\n  performanceFee: number\n  callFee: number\n  withdrawalFee: number\n  withdrawalFeePeriod: number\n}\n\nexport interface VaultUser {\n  isLoading: boolean\n  userShares: string\n  cakeAtLastUserAction: string\n  lastDepositedTime: string\n  lastUserActionTime: string\n}\nexport interface CakeVault {\n  totalShares?: string\n  pricePerFullShare?: string\n  totalCakeInVault?: string\n  estimatedCakeBountyReward?: string\n  totalPendingCakeHarvest?: string\n  fees?: VaultFees\n  userData?: VaultUser\n}\n\nexport interface PoolsState {\n  data: Pool[]\n  cakeVault: CakeVault\n  userDataLoaded: boolean\n}\n\nexport interface ProfileState {\n  isInitialized: boolean\n  isLoading: boolean\n  hasRegistered: boolean\n  data: Profile\n}\n\nexport type TeamResponse = {\n  0: string\n  1: string\n  2: string\n  3: string\n  4: boolean\n}\n\nexport type TeamsById = {\n  [key: string]: Team\n}\n\nexport interface TeamsState {\n  isInitialized: boolean\n  isLoading: boolean\n  data: TeamsById\n}\n\nexport interface Achievement {\n  id: string\n  type: CampaignType\n  address: string\n  title: TranslatableText\n  description?: TranslatableText\n  badge: string\n  points: number\n}\n\nexport interface AchievementState {\n  data: Achievement[]\n}\n\n// Block\n\nexport interface BlockState {\n  currentBlock: number\n  initialBlock: number\n}\n\n// Collectibles\n\nexport interface CollectiblesState {\n  isInitialized: boolean\n  isLoading: boolean\n  data: {\n    [key: string]: number[]\n  }\n}\n\n// Predictions\n\nexport enum BetPosition {\n  BULL = 'Bull',\n  BEAR = 'Bear',\n  HOUSE = 'House',\n}\n\nexport enum PredictionStatus {\n  INITIAL = 'initial',\n  LIVE = 'live',\n  PAUSED = 'paused',\n  ERROR = 'error',\n}\n\nexport interface Round {\n  id: string\n  epoch: number\n  failed?: boolean\n  startBlock: number\n  startAt: number\n  lockAt: number\n  lockBlock: number\n  lockPrice: number\n  endBlock: number\n  closePrice: number\n  totalBets: number\n  totalAmount: number\n  bullBets: number\n  bearBets: number\n  bearAmount: number\n  bullAmount: number\n  position: BetPosition\n  bets?: Bet[]\n}\n\nexport interface Market {\n  id: string\n  paused: boolean\n  epoch: number\n}\n\nexport interface Bet {\n  id?: string\n  hash?: string\n  amount: number\n  position: BetPosition\n  claimed: boolean\n  claimedHash: string\n  user?: PredictionUser\n  round: Round\n}\n\nexport interface PredictionUser {\n  id: string\n  address: string\n  block: number\n  totalBets: number\n  totalBNB: number\n}\n\nexport interface RoundData {\n  [key: string]: Round\n}\n\nexport interface HistoryData {\n  [key: string]: Bet[]\n}\n\nexport interface BetData {\n  [key: string]: {\n    [key: string]: Bet\n  }\n}\n\nexport enum HistoryFilter {\n  ALL = 'all',\n  COLLECTED = 'collected',\n  UNCOLLECTED = 'uncollected',\n}\n\nexport interface PredictionsState {\n  status: PredictionStatus\n  isLoading: boolean\n  isHistoryPaneOpen: boolean\n  isChartPaneOpen: boolean\n  isFetchingHistory: boolean\n  historyFilter: HistoryFilter\n  currentEpoch: number\n  currentRoundStartBlockNumber: number\n  intervalBlocks: number\n  bufferBlocks: number\n  minBetAmount: string\n  lastOraclePrice: string\n  rounds: RoundData\n  history: HistoryData\n  bets: BetData\n}\n\n// Global state\n\nexport interface State {\n  achievements: AchievementState\n  block: BlockState\n  farms: FarmsState\n  pools: PoolsState\n  predictions: PredictionsState\n  profile: ProfileState\n  teams: TeamsState\n  collectibles: CollectiblesState\n}\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_PREDICTION } from 'config/constants/endpoints'\nimport { Bet, BetPosition, Market, PredictionStatus, Round, RoundData } from 'state/types'\nimport makeBatchRequest from 'utils/makeBatchRequest'\nimport { getPredictionsContract } from 'utils/contractHelpers'\nimport {\n  BetResponse,\n  getRoundBaseFields,\n  getBetBaseFields,\n  getUserBaseFields,\n  RoundResponse,\n  MarketResponse,\n} from './queries'\n\nexport enum Result {\n  WIN = 'win',\n  LOSE = 'lose',\n  CANCELED = 'canceled',\n  LIVE = 'live',\n}\n\nexport const numberOrNull = (value: string) => {\n  if (value === null) {\n    return null\n  }\n\n  const valueNum = Number(value)\n  return Number.isNaN(valueNum) ? null : valueNum\n}\n\nexport const makeFutureRoundResponse = (epoch: number, startBlock: number): RoundResponse => {\n  return {\n    id: epoch.toString(),\n    epoch: epoch.toString(),\n    startBlock: startBlock.toString(),\n    failed: null,\n    startAt: null,\n    lockAt: null,\n    lockBlock: null,\n    lockPrice: null,\n    endBlock: null,\n    closePrice: null,\n    totalBets: '0',\n    totalAmount: '0',\n    bearBets: '0',\n    bullBets: '0',\n    bearAmount: '0',\n    bullAmount: '0',\n    position: null,\n    bets: [],\n  }\n}\n\nexport const transformBetResponse = (betResponse: BetResponse): Bet => {\n  const bet = {\n    id: betResponse.id,\n    hash: betResponse.hash,\n    amount: betResponse.amount ? parseFloat(betResponse.amount) : 0,\n    position: betResponse.position === 'Bull' ? BetPosition.BULL : BetPosition.BEAR,\n    claimed: betResponse.claimed,\n    claimedHash: betResponse.claimedHash,\n    user: {\n      id: betResponse.user.id,\n      address: betResponse.user.address,\n      block: numberOrNull(betResponse.user.block),\n      totalBets: numberOrNull(betResponse.user.totalBets),\n      totalBNB: numberOrNull(betResponse.user.totalBNB),\n    },\n  } as Bet\n\n  if (betResponse.round) {\n    bet.round = transformRoundResponse(betResponse.round)\n  }\n\n  return bet\n}\n\nexport const transformRoundResponse = (roundResponse: RoundResponse): Round => {\n  const {\n    id,\n    epoch,\n    failed,\n    startBlock,\n    startAt,\n    lockAt,\n    lockBlock,\n    lockPrice,\n    endBlock,\n    closePrice,\n    totalBets,\n    totalAmount,\n    bullBets,\n    bearBets,\n    bearAmount,\n    bullAmount,\n    position,\n    bets = [],\n  } = roundResponse\n\n  const getRoundPosition = (positionResponse: string) => {\n    if (positionResponse === 'Bull') {\n      return BetPosition.BULL\n    }\n\n    if (positionResponse === 'Bear') {\n      return BetPosition.BEAR\n    }\n\n    return null\n  }\n\n  return {\n    id,\n    failed,\n    epoch: numberOrNull(epoch),\n    startBlock: numberOrNull(startBlock),\n    startAt: numberOrNull(startAt),\n    lockAt: numberOrNull(lockAt),\n    lockBlock: numberOrNull(lockBlock),\n    lockPrice: lockPrice ? parseFloat(lockPrice) : null,\n    endBlock: numberOrNull(endBlock),\n    closePrice: closePrice ? parseFloat(closePrice) : null,\n    totalBets: numberOrNull(totalBets),\n    totalAmount: totalAmount ? parseFloat(totalAmount) : 0,\n    bullBets: numberOrNull(bullBets),\n    bearBets: numberOrNull(bearBets),\n    bearAmount: numberOrNull(bearAmount),\n    bullAmount: numberOrNull(bullAmount),\n    position: getRoundPosition(position),\n    bets: bets.map(transformBetResponse),\n  }\n}\n\nexport const transformMarketResponse = (marketResponse: MarketResponse): Market => {\n  return {\n    id: marketResponse.id,\n    paused: marketResponse.paused,\n    epoch: Number(marketResponse.epoch.epoch),\n  }\n}\n\nexport const makeRoundData = (rounds: Round[]): RoundData => {\n  return rounds.reduce((accum, round) => {\n    return {\n      ...accum,\n      [round.id]: round,\n    }\n  }, {})\n}\n\nexport const getRoundResult = (bet: Bet, currentEpoch: number): Result => {\n  const { round } = bet\n  if (round.failed) {\n    return Result.CANCELED\n  }\n\n  if (round.epoch >= currentEpoch - 1) {\n    return Result.LIVE\n  }\n  const roundResultPosition = round.closePrice > round.lockPrice ? BetPosition.BULL : BetPosition.BEAR\n\n  return bet.position === roundResultPosition ? Result.WIN : Result.LOSE\n}\n\n/**\n * Given a bet object, check if it is eligible to be claimed or refunded\n */\nexport const getCanClaim = (bet: Bet) => {\n  return !bet.claimed && (bet.position === bet.round.position || bet.round.failed === true)\n}\n\n/**\n * Returns only bets where the user has won.\n * This is necessary because the API currently cannot distinguish between an uncliamed bet that has won or lost\n */\nexport const getUnclaimedWinningBets = (bets: Bet[]): Bet[] => {\n  return bets.filter(getCanClaim)\n}\n\n/**\n * Gets static data from the contract\n */\nexport const getStaticPredictionsData = async () => {\n  const { methods } = getPredictionsContract()\n  const [currentEpoch, intervalBlocks, minBetAmount, isPaused, bufferBlocks] = await makeBatchRequest([\n    methods.currentEpoch().call,\n    methods.intervalBlocks().call,\n    methods.minBetAmount().call,\n    methods.paused().call,\n    methods.bufferBlocks().call,\n  ])\n\n  return {\n    status: isPaused ? PredictionStatus.PAUSED : PredictionStatus.LIVE,\n    currentEpoch: Number(currentEpoch),\n    intervalBlocks: Number(intervalBlocks),\n    bufferBlocks: Number(bufferBlocks),\n    minBetAmount,\n  }\n}\n\nexport const getMarketData = async (): Promise<{\n  rounds: Round[]\n  market: Market\n}> => {\n  const response = (await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getMarketData {\n        rounds(first: 5, orderBy: epoch, orderDirection: desc) {\n          ${getRoundBaseFields()}\n        }\n        market(id: 1) {\n          id\n          paused\n          epoch {\n            epoch\n          }\n        }\n      }\n    `,\n  )) as { rounds: RoundResponse[]; market: MarketResponse }\n\n  return {\n    rounds: response.rounds.map(transformRoundResponse),\n    market: transformMarketResponse(response.market),\n  }\n}\n\nexport const getRound = async (id: string) => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getRound($id: ID!) {\n        round(id: $id) {\n          ${getRoundBaseFields()}\n          bets {\n           ${getBetBaseFields()}\n            user {\n             ${getUserBaseFields()}\n            }\n          }\n        }\n      }\n  `,\n    { id },\n  )\n  return response.round\n}\n\ntype BetHistoryWhereClause = Record<string, string | number | boolean | string[]>\n\nexport const getBetHistory = async (\n  where: BetHistoryWhereClause = {},\n  first = 1000,\n  skip = 0,\n): Promise<BetResponse[]> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getBetHistory($first: Int!, $skip: Int!, $where: Bet_filter) {\n        bets(first: $first, skip: $skip, where: $where) {\n          ${getBetBaseFields()}\n          round {\n            ${getRoundBaseFields()}\n          }\n          user {\n            ${getUserBaseFields()}\n          } \n        }\n      }\n    `,\n    { first, skip, where },\n  )\n  return response.bets\n}\n\nexport const getBet = async (betId: string): Promise<BetResponse> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getBet($id: ID!) {\n        bet(id: $id) {\n          ${getBetBaseFields()}\n          round {\n            ${getRoundBaseFields()}\n          }\n          user {\n            ${getUserBaseFields()}\n          } \n        }\n      }\n  `,\n    {\n      id: betId.toLowerCase(),\n    },\n  )\n  return response.bet\n}\n","export interface UserResponse {\n  id: string\n  address: string\n  block: string\n  totalBets: string\n  totalBNB: string\n  bets?: BetResponse[]\n}\n\nexport interface BetResponse {\n  id: string\n  hash: string\n  amount: string\n  position: string\n  claimed: boolean\n  claimedHash: string\n  user?: UserResponse\n  round?: RoundResponse\n}\n\nexport interface HistoricalBetResponse {\n  id: string\n  hash: string\n  amount: string\n  position: string\n  claimed: boolean\n  user?: UserResponse\n  round: {\n    id: string\n    epoch: string\n  }\n}\n\nexport interface RoundResponse {\n  id: string\n  epoch: string\n  failed: boolean\n  startBlock: string\n  startAt: string\n  lockAt: string\n  lockBlock: string\n  lockPrice: string\n  endBlock: string\n  closePrice: string\n  totalBets: string\n  totalAmount: string\n  bearBets: string\n  bullBets: string\n  bearAmount: string\n  bullAmount: string\n  position: string\n  bets: BetResponse[]\n}\n\nexport interface MarketResponse {\n  id: string\n  paused: boolean\n  epoch: {\n    epoch: string\n  }\n}\n\n/**\n * Base fields are the all the top-level fields available in the api. Used in multiple queries\n */\nexport const getRoundBaseFields = () => `\n  id\n  epoch\n  failed\n  startAt\n  startBlock\n  lockAt\n  lockBlock\n  lockPrice\n  endAt\n  endBlock\n  closePrice\n  totalBets\n  totalAmount\n  bullBets\n  bullAmount\n  bearBets\n  bearAmount\n  position\n`\n\nexport const getBetBaseFields = () => `\n  id\n  hash  \n  amount\n  position\n  claimed\n  claimedHash\n`\n\nexport const getUserBaseFields = () => `\n  id\n  address\n  block\n  totalBets\n  totalBNB\n`\n","import { useContext } from 'react'\nimport { ToastsContext } from 'contexts/ToastsContext'\n\nconst useToast = () => {\n  const toastContext = useContext(ToastsContext)\n\n  if (toastContext === undefined) {\n    throw new Error('Toasts context undefined')\n  }\n\n  return toastContext\n}\n\nexport default useToast\n","import { Language } from '@pancakeswap/uikit'\n\nexport const AR: Language = { locale: 'ar-SA', language: 'العربية', code: 'ar' }\nexport const BN: Language = { locale: 'bn-BD', language: 'বাংলা', code: 'bn' }\nexport const EN: Language = { locale: 'en-US', language: 'English', code: 'en' }\nexport const DE: Language = { locale: 'de-DE', language: 'Deutsch', code: 'de' }\nexport const EL: Language = { locale: 'el-GR', language: 'Ελληνικά', code: 'el' }\nexport const ESES: Language = { locale: 'es-ES', language: 'Español', code: 'es-ES' }\nexport const FI: Language = { locale: 'fi-FI', language: 'Suomalainen', code: 'fi' }\nexport const FIL: Language = { locale: 'fil-PH', language: 'Filipino', code: 'fil' }\nexport const FR: Language = { locale: 'fr-FR', language: 'Français', code: 'fr' }\nexport const HI: Language = { locale: 'hi-IN', language: 'हिंदी', code: 'hi' }\nexport const HU: Language = { locale: 'hu-HU', language: 'Magyar', code: 'hu' }\nexport const ID: Language = { locale: 'id-ID', language: 'Bahasa Indonesia', code: 'id' }\nexport const IT: Language = { locale: 'it-IT', language: 'Italiano', code: 'it' }\nexport const JA: Language = { locale: 'ja-JP', language: '日本語', code: 'ja' }\nexport const KO: Language = { locale: 'ko-KR', language: '한국어', code: 'ko' }\nexport const NL: Language = { locale: 'nl-NL', language: 'Nederlands', code: 'nl' }\nexport const PL: Language = { locale: 'pl-PL', language: 'Polski', code: 'pl' }\nexport const PTBR: Language = { locale: 'pt-BR', language: 'Português (Brazil)', code: 'pt-br' }\nexport const PTPT: Language = { locale: 'pt-PT', language: 'Português', code: 'pt-pt' }\nexport const RO: Language = { locale: 'ro-RO', language: 'Română', code: 'ro' }\nexport const RU: Language = { locale: 'ru-RU', language: 'Русский', code: 'ru' }\nexport const SVSE: Language = { locale: 'sv-SE', language: 'Svenska', code: 'sv' }\nexport const TA: Language = { locale: 'ta-IN', language: 'தமிழ்', code: 'ta' }\nexport const TR: Language = { locale: 'tr-TR', language: 'Türkçe', code: 'tr' }\nexport const UK: Language = { locale: 'uk-UA', language: 'Українська', code: 'uk' }\nexport const VI: Language = { locale: 'vi-VN', language: 'Tiếng Việt', code: 'vi' }\nexport const ZHCN: Language = { locale: 'zh-CN', language: '简体中文', code: 'zh-cn' }\nexport const ZHTW: Language = { locale: 'zh-TW', language: '繁體中文', code: 'zh-tw' }\n\nexport const languages = {\n  'ar-SA': AR,\n  'bn-BD': BN,\n  'en-US': EN,\n  'de-DE': DE,\n  'el-GR': EL,\n  'es-ES': ESES,\n  'fi-FI': FI,\n  'fil-PH': FIL,\n  'fr-FR': FR,\n  'hi-IN': HI,\n  'hu-HU': HU,\n  'id-ID': ID,\n  'it-IT': IT,\n  'ja-JP': JA,\n  'ko-KR': KO,\n  'nl-NL': NL,\n  'pl-PL': PL,\n  'pt-BR': PTBR,\n  'pt-PT': PTPT,\n  'ro-RO': RO,\n  'ru-RU': RU,\n  'sv-SE': SVSE,\n  'ta-IN': TA,\n  'tr-TR': TR,\n  'uk-UA': UK,\n  'vi-VN': VI,\n  'zh-CN': ZHCN,\n  'zh-TW': ZHTW,\n}\n\nexport const languageList = Object.values(languages)\n","import tokens from './tokens'\nimport { FarmConfig } from './types'\n\nconst farms: FarmConfig[] = [\n  /**\n   * These 3 farms (PID 0, 251, 252) should always be at the top of the file.\n   */\n   {\n    pid: 0,\n    lpSymbol: 'ZEUS',\n    lpAddresses: {\n      97: '',\n      56: '0x78358353B310FACDA32670998D9ecE2e34393012',\n    },\n    token: tokens.syrup,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 1,\n    lpSymbol: 'ZEUS-BNB LP',\n    isEvent: true,\n    lpAddresses: {\n      97: '',\n      56: '0xe3821648738e51686f11f0b74efb8e58c146383b',\n    },\n    token: tokens.zeus,\n    quoteToken: tokens.wbnb,\n   },\n   {\n   pid: 2,\n   lpSymbol: 'BUSD-BNB LP',\n   isEvent: true,\n   lpAddresses: {\n     97: '',\n     56: '0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16',\n   },\n   token: tokens.busd,\n   quoteToken: tokens.wbnb,\n  \n  },\n \n   \n   \n  \n  /**\n   * V3 by order of release (some may be out of PID order due to multiplier boost)\n   */\n   \n]\n\nexport default farms\n\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ListViewIcon, CardViewIcon, IconButton } from '@pancakeswap/uikit'\n\nexport enum ViewMode {\n  'TABLE' = 'TABLE',\n  'CARD' = 'CARD',\n}\n\ninterface ToggleViewProps {\n  viewMode: ViewMode\n  onToggle: (mode: ViewMode) => void\n}\n\nconst Container = styled.div`\n  margin-right: 0px;\n  margin-left: -8px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 0;\n    margin-right: 16px;\n  }\n`\n\nconst ToggleView: React.FunctionComponent<ToggleViewProps> = ({ viewMode, onToggle }) => {\n  const handleToggle = (mode: ViewMode) => {\n    if (viewMode !== mode) {\n      onToggle(mode)\n    }\n  }\n\n  return (\n    <Container>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolCardView\" onClick={() => handleToggle(ViewMode.CARD)}>\n        <CardViewIcon color={viewMode === ViewMode.CARD ? 'primary' : 'textDisabled'} />\n      </IconButton>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolTableView\" onClick={() => handleToggle(ViewMode.TABLE)}>\n        <ListViewIcon color={viewMode === ViewMode.TABLE ? 'primary' : 'textDisabled'} />\n      </IconButton>\n    </Container>\n  )\n}\n\nexport default ToggleView\n","import { useEffect } from 'react'\nimport { connectorLocalStorageKey, ConnectorNames } from '@pancakeswap/uikit'\nimport useAuth from 'hooks/useAuth'\n\nconst _binanceChainListener = async () =>\n  new Promise<void>((resolve) =>\n    Object.defineProperty(window, 'BinanceChain', {\n      get() {\n        return this.bsc\n      },\n      set(bsc) {\n        this.bsc = bsc\n\n        resolve()\n      },\n    }),\n  )\n\nconst useEagerConnect = () => {\n  const { login } = useAuth()\n\n  useEffect(() => {\n    const connectorId = window.localStorage.getItem(connectorLocalStorageKey) as ConnectorNames\n\n    if (connectorId) {\n      const isConnectorBinanceChain = connectorId === ConnectorNames.BSC\n      const isBinanceChainDefined = Reflect.has(window, 'BinanceChain')\n\n      // Currently BSC extension doesn't always inject in time.\n      // We must check to see if it exists, and if not, wait for it before proceeding.\n      if (isConnectorBinanceChain && !isBinanceChainDefined) {\n        _binanceChainListener().then(() => login(connectorId))\n\n        return\n      }\n\n      login(connectorId)\n    }\n  }, [login])\n}\n\nexport default useEagerConnect\n","import { createGlobalStyle } from 'styled-components'\n// eslint-disable-next-line import/no-unresolved\nimport { PancakeTheme } from '@pancakeswap/uikit/dist/theme'\n\ndeclare module 'styled-components' {\n  /* eslint-disable @typescript-eslint/no-empty-interface */\n  export interface DefaultTheme extends PancakeTheme {}\n}\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    font-family: 'Kanit', sans-serif;\n  }\n \n\n  body {\n       background-image: url('images/5.png');\n      background-attachment: fixed;\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n\n        }\n  \n  @media only screen and (max-width: 1350px) {\n    body {\n       background-image: url('images/6.png');\n       background-attachment: fixed;\n       background-position: top;\n       background-size: 100%;\n       background-repeat: repeat;\n     }\n  }\n   \n  \n  \n`\n\nexport default GlobalStyle\n","import { MenuEntry } from '@pancakeswap/uikit'\nimport { ContextApi } from 'contexts/Localization/types'\n\nconst config: (t: ContextApi['t']) => MenuEntry[] = (t) => [\n  {\n    label: t('Home'),\n    icon: 'HomeIcon',\n    href: '/',\n  },\n  {\n    label: t('Trade'),\n    icon: 'TradeIcon',\n    items: [\n      {\n        label: t('Exchange'),\n        href: 'https://exchange-zeusswap.app',\n      },\n      {\n        label: t('Liquidity'),\n        href: 'https://exchange-zeusswap.app',\n      },\n    \n    ],\n  },\n  {\n    label: t('Farms'),\n    icon: 'FarmIcon',\n    href: '/farms',\n  },\n  {\n    label: t('Pools'),\n    icon: 'PoolIcon',\n    href: '/pools',\n  },\n\n  \n  {\n    label: t('Docs'),\n    icon: 'MoreIcon',\n    \n        href: 'https://zeus-token.gitbook.io/zeusswap/' ,\n      },\n     \n]\n\nexport default config\n","import React from 'react'\nimport { Menu as UikitMenu } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { languageList } from 'config/localization/languages'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useAuth from 'hooks/useAuth'\nimport { usePriceCakeBusd, useProfile } from 'state/hooks'\nimport config from './config'\n\nconst Menu = (props) => {\n  const { account } = useWeb3React()\n  const { login, logout } = useAuth()\n  const { isDark, toggleTheme } = useTheme()\n  const cakePriceUsd = usePriceCakeBusd()\n  const { currentLanguage, setLanguage, t } = useTranslation()\n\n  return (\n    <UikitMenu\n      account={account}\n      login={login}\n      logout={logout}\n      isDark={isDark}\n      toggleTheme={toggleTheme}\n      currentLang={currentLanguage.code}\n      langs={languageList}\n      setLang={setLanguage}\n      cakePriceUsd={cakePriceUsd.toNumber()}\n      links={config(t)}\n       \n      {...props}\n    />\n  )\n}\n\nexport default Menu\n","import React, { Suspense, SuspenseProps } from 'react'\n\ninterface State {\n  hasError: boolean\n}\n\nclass SuspenseWithChunkError extends React.Component<SuspenseProps, State> {\n  constructor(props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  static getDerivedStateFromError() {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true }\n  }\n\n  componentDidCatch(error) {\n    const isJsChunkLoadError = error.name === 'ChunkLoadError'\n    const isCssChunkLoadError = error.code === 'CSS_CHUNK_LOAD_FAILED'\n    const isChunkLoadError = isJsChunkLoadError || isCssChunkLoadError\n\n    // Save a flag on the window object indicating that we have already had a chunk error.\n    // This prevents infinite reloads\n    const isRecoveringFromChunkError = !!window.history.state?.isRecoveringFromChunkError\n\n    // If was a chunk load error, refresh the page\n    if (isChunkLoadError && !isRecoveringFromChunkError) {\n      const nextState = { ...window.history.state, isRecoveringFromChunkError: true }\n      window.history.replaceState(nextState, '')\n      window.location.reload()\n      return\n    }\n\n    throw error\n  }\n\n  render() {\n    const { hasError } = this.state\n    const { fallback } = this.props\n\n    if (hasError) {\n      return fallback\n    }\n\n    return <Suspense {...this.props} />\n  }\n}\n\nexport default SuspenseWithChunkError\n","import React from 'react'\nimport { ToastContainer } from '@pancakeswap/uikit'\nimport useToast from 'hooks/useToast'\n\nconst ToastListener = () => {\n  const { toasts, remove } = useToast()\n\n  const handleRemove = (id: string) => remove(id)\n\n  return <ToastContainer toasts={toasts} onRemove={handleRemove} />\n}\n\nexport default ToastListener\n","import React, { useState, useCallback } from 'react'\nimport { FallingBunnies, FallingBunniesProps, useKonamiCheatCode } from '@pancakeswap/uikit'\n\nconst EasterEgg: React.FC<FallingBunniesProps> = (props) => {\n  const [show, setShow] = useState(false)\n  const startFalling = useCallback(() => setShow(true), [setShow])\n  useKonamiCheatCode(startFalling)\n\n  if (show) {\n    return (\n      <div onAnimationEnd={() => setShow(false)}>\n        <FallingBunnies {...props} />\n      </div>\n    )\n  }\n  return null\n}\n\nexport default React.memo(EasterEgg)\n","import React from 'react'\nimport { Flex, TooltipText, IconButton, useModal, CalculateIcon, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\nimport { Pool } from 'state/types'\nimport { BASE_EXCHANGE_URL } from 'config'\nimport { getAprData } from 'views/Pools/helpers'\n\ninterface AprRowProps {\n  pool: Pool\n  performanceFee?: number\n}\n\nconst AprRow: React.FC<AprRowProps> = ({ pool, performanceFee = 0 }) => {\n  const { t } = useTranslation()\n  const { stakingToken, earningToken, isFinished, apr, earningTokenPrice, isAutoVault } = pool\n\n  const tooltipContent = isAutoVault\n    ? t('APY includes compounding, APR doesn’t. This pool’s CAKE is compounded automatically, so we show APY.')\n    : t('This pool’s rewards aren’t compounded automatically, so we show APR')\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, { placement: 'bottom-start' })\n\n  const { apr: earningsPercentageToDisplay, roundingDecimals, compoundFrequency } = getAprData(pool, performanceFee)\n\n  const apyModalLink =\n    stakingToken.address &&\n    `${BASE_EXCHANGE_URL}/#/swap?outputCurrency=${stakingToken.address[process.env.REACT_APP_CHAIN_ID]}`\n\n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal\n      tokenPrice={earningTokenPrice}\n      apr={apr}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink || BASE_EXCHANGE_URL}\n      earningTokenSymbol={earningToken.symbol}\n      roundingDecimals={roundingDecimals}\n      compoundFrequency={compoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef}>{isAutoVault ? `${t('APY')}:` : `${t('APR')}:`}</TooltipText>\n      {isFinished || !apr ? (\n        <Skeleton width=\"82px\" height=\"32px\" />\n      ) : (\n        <Flex alignItems=\"center\">\n          <Balance\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={earningsPercentageToDisplay}\n            decimals={2}\n            unit=\"%\"\n            bold\n          />\n         \n        </Flex>\n      )}\n    </Flex>\n  )\n}\n\nexport default AprRow\n","import styled, { css, keyframes } from 'styled-components'\nimport { Card, Box } from '@pancakeswap/uikit'\n\nconst RainbowLight = keyframes`\n0% {\n  background-position: 0% 100%;\n}\n50% {\n  background-position: 0% 0%;\n}\n100% {\n  background-position: 100% 0%;\n}\n\n`\n \ninterface PromotedStyleCardProps {\n  isDesktop: boolean\n}\n \n\nexport const StyledCard = styled(Card)<{ isPromoted?: PromotedStyleCardProps; isFinished?: boolean }>`\n  max-width: 352px;\n  display: flex;\n  padding: 4px;\n  background-color: rgb(0, 21, 46) ;\n   justify-content: space-around;\n  flex-direction: column;\n  align-self: baseline;\n  position: relative;\n  color: ${({isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\n  box-shadow: 0px 1px 4px rgba(25, 19, 38, 0.15);\n  opacity: 0.97 ;\n\n  ${({ isPromoted, theme }) =>\n    isPromoted\n      ? css`\n      background: linear-gradient(\n        240deg,\n        rgb(0,0,0) 0%,\n        rgb(0,0,0) 10%,\n        rgb(0, 16, 36)20%,\n        rgb(0, 21, 46) 30%,\n        rgb(0, 32, 71) 40%,\n        rgb(0, 53, 117) 50%,\n        rgb(0, 32, 71)60%,\n        rgb(0, 21, 46) 70%,\n        rgb(0, 16, 36) 80%,\n        rgb(0,0,0) 90%,\n        rgb(0,0,0) 100%);\n        \n           );\n           background-size: 400% 400%;\n \n        `\n      : `background: ${(props) => props.theme.card.background};`}\n\n  ${({ isPromoted }) =>\n    isPromoted &&\n    isPromoted.isDesktop &&\n    css`\n    animation: ${RainbowLight} 2s linear infinite;\n    `}\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin: 0 52px 70px;\n  }\n`\n \n\nexport default StyledCard\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport {\n  Flex,\n  MetamaskIcon,\n  Text,\n  TooltipText,\n  LinkExternal,\n  TimerIcon,\n  Skeleton,\n  useTooltip,\n  Button,\n} from '@pancakeswap/uikit'\nimport { BASE_BSC_SCAN_URL, BASE_URL } from 'config'\nimport { useBlock, useCakeVault } from 'state/hooks'\nimport { Pool } from 'state/types'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport Balance from 'components/Balance'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\n\ninterface ExpandedFooterProps {\n  pool: Pool\n  account: string\n}\n\nconst ExpandedWrapper = styled(Flex)`\n  png {\n    height: 14px;\n    width: 14px;\n  }\n`\n\nconst ExpandedFooter: React.FC<ExpandedFooterProps> = ({ pool, account }) => {\n  const { t } = useTranslation()\n  const { currentBlock } = useBlock()\n  const {\n    totalCakeInVault,\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const { stakingToken, earningToken, totalStaked, contractAddress, sousId, isAutoVault } = pool\n\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const imageSrc = `${BASE_URL}/images/tokens/${earningToken.symbol.toLowerCase()}.png`\n  const isMetaMaskInScope = !!(window as WindowChain).ethereum?.isMetaMask\n  const isManualCakePool = sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(0)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  return (\n    <ExpandedWrapper flexDirection=\"column\">\n      <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n        <Text small>{t('Total staked')}:</Text>\n        <Flex alignItems=\"flex-start\">\n          {totalStaked ? (\n            <>\n              <Balance fontSize=\"14px\" value={getTotalStakedBalance()} />\n              <Text ml=\"4px\" fontSize=\"14px\">\n                {stakingToken.symbol}\n              </Text>\n            </>\n          ) : (\n            <Skeleton width=\"90px\" height=\"21px\" />\n          )}\n        </Flex>\n      </Flex>\n      {shouldShowBlockCountdown && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Text small>{hasPoolStarted ? t('End') : t('Start')}:</Text>\n          <Flex alignItems=\"center\">\n            {blocksRemaining || blocksUntilStart ? (\n              <Balance color=\"primary\" fontSize=\"14px\" value={blocksToDisplay} decimals={0} />\n            ) : (\n              <Skeleton width=\"54px\" height=\"21px\" />\n            )}\n            <Text ml=\"4px\" color=\"primary\" small textTransform=\"lowercase\">\n              {t('Blocks')}\n            </Text>\n            <TimerIcon ml=\"4px\" color=\"primary\" />\n          </Flex>\n        </Flex>\n      )}\n      {isAutoVault && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          {tooltipVisible && tooltip}\n          <TooltipText ref={targetRef} small>\n            {t('Performance Fee')}\n          </TooltipText>\n          <Flex alignItems=\"center\">\n            <Text ml=\"4px\" small>\n              {performanceFee / 100}%\n            </Text>\n          </Flex>\n        </Flex>\n      )}\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\n        <LinkExternal bold={false} small href={earningToken.projectLink}>\n          {t('View Project Site')}\n        </LinkExternal>\n      </Flex>\n      {poolContractAddress && (\n        <Flex mb=\"2px\" justifyContent=\"flex-end\">\n          <LinkExternal\n            bold={false}\n            small\n            href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n          >\n            {t('View Contract')}\n          </LinkExternal>\n        </Flex>\n      )}\n      {account && isMetaMaskInScope && tokenAddress && (\n        <Flex justifyContent=\"flex-end\">\n          <Button\n            variant=\"text\"\n            p=\"0\"\n            height=\"auto\"\n            onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals, imageSrc)}\n          >\n            <Text color=\"primary\" fontSize=\"14px\">\n              {t('Add to Metamask')}\n            </Text>\n            <MetamaskIcon ml=\"4px\" />\n          </Button>\n        </Flex>\n      )}\n    </ExpandedWrapper>\n  )\n}\n\nexport default React.memo(ExpandedFooter)\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Flex, CardFooter, ExpandableLabel, HelpIcon, useTooltip } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport ExpandedFooter from './ExpandedFooter'\n\ninterface FooterProps {\n  pool: Pool\n  account: string\n  totalCakeInVault?: BigNumber\n}\n\nconst ExpandableButtonWrapper = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  button {\n    padding: 0;\n  }\n`\n\nconst Footer: React.FC<FooterProps> = ({ pool, account }) => {\n  const { isAutoVault } = pool\n  const { t } = useTranslation()\n  const [isExpanded, setIsExpanded] = useState(false)\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom',\n  })\n\n  return (\n    <CardFooter>\n      <ExpandableButtonWrapper>\n        <Flex alignItems=\"center\">\n          {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n          {tooltipVisible && tooltip}\n          <Flex ref={targetRef}>\n            <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n          </Flex>\n        </Flex>\n        <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded(!isExpanded)}>\n          {isExpanded ? t('Hide') : t('Details')}\n        </ExpandableLabel>\n      </ExpandableButtonWrapper>\n      {isExpanded && <ExpandedFooter pool={pool} account={account} />}\n    </CardFooter>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport { CardHeader, Heading, Text, Flex, Image } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\n\nconst Wrapper = styled(CardHeader)<{ isFinished?: boolean; background?: string }>`\n  background: ${({ isFinished, background, theme }) =>\n    isFinished ? theme.colors.backgroundDisabled : theme.colors.gradients[background]};\n  border-radius: ${({ theme }) => `${theme.radii.card} ${theme.radii.card} 0 0`};\n    background: #ffffff00;\n  `\n\nconst StyledCardHeader: React.FC<{\n  earningTokenSymbol: string\n  stakingTokenSymbol: string\n  isAutoVault?: boolean\n  isFinished?: boolean\n  isStaking?: boolean\n}> = ({ earningTokenSymbol, stakingTokenSymbol, isFinished = false, isAutoVault = false, isStaking = false }) => {\n  const { t } = useTranslation()\n  const poolImageSrc = isAutoVault\n    ? `cake-cakevault.png`\n    : `${earningTokenSymbol}-${stakingTokenSymbol}.png`.toLocaleLowerCase()\n  const isCakePool = earningTokenSymbol === 'CAKE' && stakingTokenSymbol === 'CAKE'\n  const background = isStaking ? 'bubblegum' : 'cardHeader'\n\n  const getHeadingPrefix = () => {\n    if (isAutoVault) {\n      // vault\n      return t('Auto')\n    }\n    if (isCakePool) {\n      // manual cake\n      return t('Manual')\n    }\n    // all other pools\n    return t('Earn')\n  }\n\n  const getSubHeading = () => {\n    if (isAutoVault) {\n      return t('Automatic restaking')\n    }\n    if (isCakePool) {\n      return t('Earn CAKE, stake CAKE')\n    }\n    return t('Stake %symbol%', { symbol: stakingTokenSymbol })\n  }\n\n  return (\n    <Wrapper isFinished={isFinished} background={background}>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Flex flexDirection=\"column\">\n          <Heading color={isFinished ? 'textDisabled' : 'body'} scale=\"lg\">\n            {`${getHeadingPrefix()} ${earningTokenSymbol}`}\n          </Heading>\n          <Text color={isFinished ? 'textDisabled' : 'textSubtle'}>{getSubHeading()}</Text>\n        </Flex>\n        <Image src={`/images/pools/${poolImageSrc}`} alt={earningTokenSymbol} width={57} height={75} />\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default StyledCardHeader\n","import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\nimport { useSousApprove } from 'hooks/useApprove'\nimport { useTranslation } from 'contexts/Localization'\nimport { useERC20 } from 'hooks/useContract'\nimport { getAddress } from 'utils/addressHelpers'\nimport { Pool } from 'state/types'\n\ninterface ApprovalActionProps {\n  pool: Pool\n  isLoading?: boolean\n}\n\nconst ApprovalAction: React.FC<ApprovalActionProps> = ({ pool, isLoading = false }) => {\n  const { sousId, stakingToken, earningToken } = pool\n  const { t } = useTranslation()\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { handleApprove, requestedApproval } = useSousApprove(stakingTokenContract, sousId, earningToken.symbol)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default ApprovalAction\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { Modal, Text, Button, OpenNewIcon, Link } from '@pancakeswap/uikit'\nimport { BASE_EXCHANGE_URL } from 'config'\nimport useTheme from 'hooks/useTheme'\n\ninterface NotEnoughTokensModalProps {\n  tokenSymbol: string\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst NotEnoughTokensModal: React.FC<NotEnoughTokensModalProps> = ({ tokenSymbol, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n\n  return (\n    <Modal\n      title={t('%symbol% required', { symbol: tokenSymbol })}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      <Text color=\"failure\" bold>\n        {t('Insufficient %symbol% balance', { symbol: tokenSymbol })}\n      </Text>\n      <Text mt=\"24px\">{t('You’ll need %symbol% to stake in this pool!', { symbol: tokenSymbol })}</Text>\n      <Text>\n        {t('Buy some %symbol%, or make sure your %symbol% isn’t in another pool or LP.', {\n          symbol: tokenSymbol,\n        })}\n      </Text>\n      <Button mt=\"24px\" as=\"a\" external href={BASE_EXCHANGE_URL}>\n        {t('Buy')} {tokenSymbol}\n      </Button>\n      <StyledLink href=\"https://yieldwatch.net\" external>\n        <Button variant=\"secondary\" mt=\"8px\" width=\"100%\">\n          {t('Locate Assets')}\n          <OpenNewIcon color=\"primary\" ml=\"4px\" />\n        </Button>\n      </StyledLink>\n      <Button variant=\"text\" onClick={onDismiss}>\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default NotEnoughTokensModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@pancakeswap/uikit'\n\ninterface PercentageButtonProps {\n  onClick: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst PercentageButton: React.FC<PercentageButtonProps> = ({ children, onClick }) => {\n  return (\n    <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={onClick}>\n      {children}\n    </StyledButton>\n  )\n}\n\nexport default PercentageButton\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Image, Button, Slider, BalanceInput, AutoRenewIcon, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { BASE_EXCHANGE_URL } from 'config'\nimport { useSousStake } from 'hooks/useStake'\nimport { useSousUnstake } from 'hooks/useUnstake'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport PercentageButton from './PercentageButton'\n\ninterface StakeModalProps {\n  isBnbPool: boolean\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakingTokenPrice: number\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst StakeModal: React.FC<StakeModalProps> = ({\n  isBnbPool,\n  pool,\n  stakingTokenBalance,\n  stakingTokenPrice,\n  isRemovingStake = false,\n  onDismiss,\n}) => {\n  const { sousId, stakingToken, userData, stakingLimit, earningToken } = pool\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { onStake } = useSousStake(sousId, isBnbPool)\n  const { onUnstake } = useSousUnstake(sousId, pool.enableEmergencyWithdraw)\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [hasReachedStakeLimit, setHasReachedStakedLimit] = useState(false)\n  const [percent, setPercent] = useState(0)\n  const getCalculatedStakingLimit = () => {\n    if (isRemovingStake) {\n      return userData.stakedBalance\n    }\n    return stakingLimit.gt(0) && stakingTokenBalance.gt(stakingLimit) ? stakingLimit : stakingTokenBalance\n  }\n\n  const usdValueStaked = stakeAmount && formatNumber(new BigNumber(stakeAmount).times(stakingTokenPrice).toNumber())\n\n  useEffect(() => {\n    if (stakingLimit.gt(0) && !isRemovingStake) {\n      const fullDecimalStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n      setHasReachedStakedLimit(fullDecimalStakeAmount.plus(userData.stakedBalance).gt(stakingLimit))\n    }\n  }, [stakeAmount, stakingLimit, userData, stakingToken, isRemovingStake, setHasReachedStakedLimit])\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = getDecimalAmount(new BigNumber(input), stakingToken.decimals)\n      const percentage = Math.floor(convertedInput.dividedBy(getCalculatedStakingLimit()).multipliedBy(100).toNumber())\n      setPercent(Math.min(percentage, 100))\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = getCalculatedStakingLimit().dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n\n    if (isRemovingStake) {\n      // unstaking\n      try {\n        await onUnstake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Unstaked')}!`,\n          t('Your %symbol% earnings have also been harvested to your wallet!', {\n            symbol: earningToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Canceled'), t('Please try again and confirm the transaction.'))\n        setPendingTx(false)\n      }\n    } else {\n      try {\n        // staking\n        await onStake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Staked')}!`,\n          t('Your %symbol% funds have been staked in the pool!', {\n            symbol: stakingToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Canceled'), t('Please try again and confirm the transaction.'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      {stakingLimit.gt(0) && !isRemovingStake && (\n        <Text color=\"secondary\" bold mb=\"24px\" style={{ textAlign: 'center' }} fontSize=\"16px\">\n          {t('Max stake for this pool: %amount% %token%', {\n            amount: getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image src={`/images/tokens/${stakingToken.symbol}.png`} width={24} height={24} alt={stakingToken.symbol} />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={stakingTokenPrice !== 0 && `~${usdValueStaked || 0} USD`}\n        isWarning={hasReachedStakeLimit}\n       />\n      {hasReachedStakeLimit && (\n        <Text color=\"failure\" fontSize=\"12px\" style={{ textAlign: 'right' }} mt=\"4px\">\n          {t('Maximum total stake: %amount% %token%', {\n            amount: getFullDisplayBalance(new BigNumber(stakingLimit), stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Text ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', {\n          balance: getFullDisplayBalance(getCalculatedStakingLimit(), stakingToken.decimals),\n        })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <PercentageButton onClick={() => handleChangePercent(25)}>25%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(50)}>50%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(75)}>75%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(100)}>{t('Max')}</PercentageButton>\n      </Flex>\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0 || hasReachedStakeLimit}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <StyledLink external href={BASE_EXCHANGE_URL}>\n          <Button width=\"100%\" mt=\"8px\" variant=\"secondary\">\n            {t('Get %symbol%', { symbol: stakingToken.symbol })}\n          </Button>\n        </StyledLink>\n      )}\n    </Modal>\n  )\n}\n\nexport default StakeModal\n","import React from 'react'\nimport { Flex, Text, Button, IconButton, AddIcon, MinusIcon, useModal, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../Modals/NotEnoughTokensModal'\nimport StakeModal from '../Modals/StakeModal'\n\ninterface StakeActionsProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakedBalance: BigNumber\n  isBnbPool: boolean\n  isStaked: ConstrainBoolean\n  isLoading?: boolean\n}\n\nconst StakeAction: React.FC<StakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  stakedBalance,\n  isBnbPool,\n  isStaked,\n  isLoading = false,\n}) => {\n  const { stakingToken, stakingTokenPrice, stakingLimit, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('You’ve already staked the maximum amount you can stake in this pool!'),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  const renderStakeAction = () => {\n    return isStaked ? (\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex flexDirection=\"column\">\n          <>\n            <Balance bold fontSize=\"20px\" decimals={3} value={stakedTokenBalance} />\n            {stakingTokenPrice !== 0 && (\n              <Text fontSize=\"12px\" color=\"textSubtle\">\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  decimals={2}\n                  value={stakedTokenDollarBalance}\n                  prefix=\"~\"\n                  unit=\" USD\"\n                />\n              </Text>\n            )}\n          </>\n        </Flex>\n        <Flex>\n          <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n            <MinusIcon color=\"primary\" width=\"24px\" />\n          </IconButton>\n          {reachStakingLimit ? (\n            <span ref={targetRef}>\n              <IconButton variant=\"secondary\" disabled>\n                <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n              </IconButton>\n            </span>\n          ) : (\n            <IconButton\n              variant=\"secondary\"\n              onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}\n              disabled={isFinished}\n            >\n              <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n            </IconButton>\n          )}\n        </Flex>\n        {tooltipVisible && tooltip}\n      </Flex>\n    ) : (\n      <Button disabled={isFinished} onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n        {t('Stake')}\n      </Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default StakeAction\n","import React, { useState } from 'react'\nimport {\n  Modal,\n  Text,\n  Button,\n  Heading,\n  Flex,\n  AutoRenewIcon,\n  ButtonMenu,\n  ButtonMenuItem,\n  HelpIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport { useSousHarvest } from 'hooks/useHarvest'\nimport { useSousStake } from 'hooks/useStake'\nimport useToast from 'hooks/useToast'\nimport { Token } from 'config/constants/types'\n\ninterface CollectModalProps {\n  formattedBalance: string\n  fullBalance: string\n  earningToken: Token\n  earningsDollarValue: string\n  sousId: number\n  isBnbPool: boolean\n  isCompoundPool?: boolean\n  onDismiss?: () => void\n}\n\nconst CollectModal: React.FC<CollectModalProps> = ({\n  formattedBalance,\n  fullBalance,\n  earningToken,\n  earningsDollarValue,\n  sousId,\n  isBnbPool,\n  isCompoundPool = false,\n  onDismiss,\n}) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const { onReward } = useSousHarvest(sousId, isBnbPool)\n  const { onStake } = useSousStake(sousId, isBnbPool)\n  const [pendingTx, setPendingTx] = useState(false)\n  const [shouldCompound, setShouldCompound] = useState(isCompoundPool)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text mb=\"12px\">{t('Compound: collect and restake CAKE into pool.')}</Text>\n      <Text>{t('Harvest: collect CAKE and send to wallet')}</Text>\n    </>,\n    { placement: 'bottom-end', tooltipOffset: [20, 10] },\n  )\n\n  const handleHarvestConfirm = async () => {\n    setPendingTx(true)\n    // compounding\n    if (shouldCompound) {\n      try {\n        await onStake(fullBalance, earningToken.decimals)\n        toastSuccess(\n          `${t('Compounded')}!`,\n          t('Your %symbol% earnings have been re-invested into the pool!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Canceled'), t('Please try again and confirm the transaction.'))\n        setPendingTx(false)\n      }\n    } else {\n      // harvesting\n      try {\n        await onReward()\n        toastSuccess(\n          `${t('Harvested')}!`,\n          t('Your %symbol% earnings have been sent to your wallet!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Canceled'), t('Please try again and confirm the transaction.'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={`${earningToken.symbol} ${isCompoundPool ? t('Collect') : t('Harvest')}`}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      {isCompoundPool && (\n        <Flex justifyContent=\"center\" alignItems=\"center\" mb=\"24px\">\n          <ButtonMenu\n            activeIndex={shouldCompound ? 0 : 1}\n            scale=\"sm\"\n            variant=\"subtle\"\n            onItemClick={(index) => setShouldCompound(!index)}\n          >\n            <ButtonMenuItem as=\"button\">{t('Compound')}</ButtonMenuItem>\n            <ButtonMenuItem as=\"button\">{t('Harvest')}</ButtonMenuItem>\n          </ButtonMenu>\n          <Flex ml=\"10px\" ref={targetRef}>\n            <HelpIcon color=\"textSubtle\" />\n          </Flex>\n          {tooltipVisible && tooltip}\n        </Flex>\n      )}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n        <Text>{shouldCompound ? t('Compounding') : t('Harvesting')}:</Text>\n        <Flex flexDirection=\"column\">\n          <Heading>\n            {formattedBalance} {earningToken.symbol}\n          </Heading>\n          <Text fontSize=\"12px\" color=\"textSubtle\">{`~${earningsDollarValue || 0} USD`}</Text>\n        </Flex>\n      </Flex>\n\n      <Button\n        mt=\"8px\"\n        onClick={handleHarvestConfirm}\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      <Button variant=\"text\" onClick={onDismiss} pb=\"0px\">\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default CollectModal\n","import React from 'react'\nimport { Flex, Text, Button, Heading, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { Token } from 'config/constants/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance, getBalanceNumber, formatNumber } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport CollectModal from '../Modals/CollectModal'\n\ninterface HarvestActionsProps {\n  earnings: BigNumber\n  earningToken: Token\n  sousId: number\n  earningTokenPrice: number\n  isBnbPool: boolean\n  isLoading?: boolean\n}\n\nconst HarvestActions: React.FC<HarvestActionsProps> = ({\n  earnings,\n  earningToken,\n  sousId,\n  isBnbPool,\n  earningTokenPrice,\n  isLoading = false,\n}) => {\n  const { t } = useTranslation()\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n  const earningsDollarValue = formatNumber(earningTokenDollarBalance)\n\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const hasEarnings = earnings.toNumber() > 0\n  const isCompoundPool = sousId === 0\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningsDollarValue}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  return (\n    <Flex flexDirection=\"column\" mb=\"16px\">\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex flexDirection=\"column\">\n          {isLoading ? (\n            <Skeleton width=\"80px\" height=\"48px\" />\n          ) : (\n            <>\n              {hasEarnings ? (\n                <Balance bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n              ) : (\n                <Heading color=\"textDisabled\">0</Heading>\n              )}\n              {earningTokenPrice !== 0 && (\n                <Text fontSize=\"12px\" color={hasEarnings ? 'textSubtle' : 'textDisabled'}>\n                  ~\n                  {hasEarnings ? (\n                    <Balance\n                      display=\"inline\"\n                      fontSize=\"12px\"\n                      color=\"textSubtle\"\n                      decimals={2}\n                      value={earningTokenDollarBalance}\n                      unit=\" USD\"\n                    />\n                  ) : (\n                    '0 USD'\n                  )}\n                </Text>\n              )}\n            </>\n          )}\n        </Flex>\n        <Flex>\n          <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n            {isCompoundPool ? t('Collect') : t('Harvest')}\n          </Button>\n        </Flex>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default HarvestActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { PoolCategory } from 'config/constants/types'\nimport { Pool } from 'state/types'\nimport ApprovalAction from './ApprovalAction'\nimport StakeActions from './StakeActions'\nimport HarvestActions from './HarvestActions'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\ninterface CardActionsProps {\n  pool: Pool\n  stakedBalance: BigNumber\n}\n\nconst CardActions: React.FC<CardActionsProps> = ({ pool, stakedBalance }) => {\n  const { sousId, stakingToken, earningToken, harvest, poolCategory, userData, earningTokenPrice } = pool\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const { t } = useTranslation()\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const needsApproval = !allowance.gt(0) && !isBnbPool\n  const isStaked = stakedBalance.gt(0)\n  const isLoading = !userData\n\n  return (\n     <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        {harvest && (\n          <>\n            <Box display=\"inline\">\n              <InlineText color=\"secondary\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {`${earningToken.symbol} `}\n              </InlineText>\n              <InlineText color=\"textSubtle\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {t('Earned')}\n              </InlineText>\n            </Box>\n            <HarvestActions\n              earnings={earnings}\n              earningToken={earningToken}\n              sousId={sousId}\n              earningTokenPrice={earningTokenPrice}\n              isBnbPool={isBnbPool}\n              isLoading={isLoading}\n            />\n          </>\n        )}\n        <Box display=\"inline\">\n          <InlineText color={isStaked ? 'secondary' : 'textSubtle'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText color={isStaked ? 'textSubtle' : 'secondary'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? t('Staked') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {needsApproval ? (\n          <ApprovalAction pool={pool} isLoading={isLoading} />\n        ) : (\n          <StakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            stakedBalance={stakedBalance}\n            isBnbPool={isBnbPool}\n            isStaked={isStaked}\n          />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CardActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport { CardBody, Flex, Text, CardRibbon, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport UnlockButton from 'components/UnlockButton'\nimport { useTranslation } from 'contexts/Localization'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Pool } from 'state/types'\nimport AprRow from './AprRow'\nimport { StyledCard } from './StyledCard'\nimport CardFooter from './CardFooter'\nimport StyledCardHeader from './StyledCardHeader'\nimport CardActions from './CardActions'\n\nconst PoolCard: React.FC<{ pool: Pool; account: string }> = ({ pool, account }) => {\n  const { sousId, stakingToken, earningToken, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const { isXl } = useMatchBreakpoints()\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const accountHasStakedBalance = stakedBalance.gt(0)\n\n  return (\n    <StyledCard\n     isPromoted={{ isDesktop: isXl }}\n      isFinished={isFinished && sousId !== 0}\n      ribbon={isFinished && <CardRibbon variantColor=\"textDisabled\" text={t('Finished')} />}\n    >\n         <StyledCardHeader\n          isStaking={accountHasStakedBalance}\n          earningTokenSymbol={earningToken.symbol}\n          stakingTokenSymbol={stakingToken.symbol}\n          isFinished={isFinished && sousId !== 0}\n        />\n        <CardBody>\n          <AprRow pool={pool} />\n          <Flex mt=\"24px\" flexDirection=\"column\">\n            {account ? (\n              <CardActions pool={pool} stakedBalance={stakedBalance} />\n            ) : (\n              <>\n                <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                  {t('Start earning')}\n                </Text>\n                <UnlockButton />\n              </>\n            )}\n          </Flex>\n        </CardBody>\n        <CardFooter pool={pool} account={account} />\n     </StyledCard>\n  )\n}\n\nexport default PoolCard\n","import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useVaultApprove } from 'hooks/useApprove'\n\ninterface ApprovalActionProps {\n  setLastUpdated: () => void\n  isLoading?: boolean\n}\n\nconst VaultApprovalAction: React.FC<ApprovalActionProps> = ({ isLoading = false, setLastUpdated }) => {\n  const { t } = useTranslation()\n\n  const { handleApprove, requestedApproval } = useVaultApprove(setLastUpdated)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default VaultApprovalAction\n","import BigNumber from 'bignumber.js'\nimport { useEffect, useState } from 'react'\n\nconst useWithdrawalFeeTimer = (lastDepositedTime: number, userShares: BigNumber, withdrawalFeePeriod = 259200) => {\n  const [secondsRemaining, setSecondsRemaining] = useState(null)\n  const [hasUnstakingFee, setHasUnstakingFee] = useState(false)\n  const [currentSeconds, setCurrentSeconds] = useState(Math.floor(Date.now() / 1000))\n\n  useEffect(() => {\n    const feeEndTime = lastDepositedTime + withdrawalFeePeriod\n    const secondsRemainingCalc = feeEndTime - currentSeconds\n    const doesUnstakingFeeApply = userShares.gt(0) && secondsRemainingCalc > 0\n\n    const tick = () => {\n      setCurrentSeconds((prevSeconds) => prevSeconds + 1)\n    }\n    const timerInterval = setInterval(() => tick(), 1000)\n    if (doesUnstakingFeeApply) {\n      setSecondsRemaining(secondsRemainingCalc)\n      setHasUnstakingFee(true)\n    } else {\n      setHasUnstakingFee(false)\n      clearInterval(timerInterval)\n    }\n\n    return () => clearInterval(timerInterval)\n  }, [lastDepositedTime, withdrawalFeePeriod, setSecondsRemaining, currentSeconds, userShares])\n\n  return { hasUnstakingFee, secondsRemaining }\n}\n\nexport default useWithdrawalFeeTimer\n","import React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport getTimePeriods from 'utils/getTimePeriods'\nimport { useTranslation } from 'contexts/Localization'\n\nconst WithdrawalFeeTimer: React.FC<{ secondsRemaining: number }> = ({ secondsRemaining }) => {\n  const { t } = useTranslation()\n  const { days, hours, minutes } = getTimePeriods(secondsRemaining)\n\n  return <Text fontSize=\"14px\">{t('%day%d : %hour%h : %minute%m', { day: days, hour: hours, minute: minutes })}</Text>\n}\n\nexport default WithdrawalFeeTimer\n","import React from 'react'\nimport { Flex, Text, TooltipText, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport useWithdrawalFeeTimer from 'hooks/cakeVault/useWithdrawalFeeTimer'\nimport { useCakeVault } from 'state/hooks'\nimport WithdrawalFeeTimer from './WithdrawalFeeTimer'\n\ninterface UnstakingFeeCountdownRowProps {\n  isTableVariant?: boolean\n}\n\nconst UnstakingFeeCountdownRow: React.FC<UnstakingFeeCountdownRowProps> = ({ isTableVariant }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    userData: { lastDepositedTime, userShares },\n    fees: { withdrawalFee, withdrawalFeePeriod },\n  } = useCakeVault()\n  const feeAsDecimal = withdrawalFee / 100 || '-'\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text bold mb=\"4px\">\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\n      </Text>\n      <Text>\n        {t(\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new CAKE in the pool.',\n        )}\n      </Text>\n    </>,\n    { placement: 'bottom-start' },\n  )\n\n  const { secondsRemaining, hasUnstakingFee } = useWithdrawalFeeTimer(\n    parseInt(lastDepositedTime, 10),\n    userShares,\n    withdrawalFeePeriod,\n  )\n\n  // The user has made a deposit, but has no fee\n  const noFeeToPay = lastDepositedTime && !hasUnstakingFee && userShares.gt(0)\n\n  // Show the timer if a user is connected, has deposited, and has an unstaking fee\n  const shouldShowTimer = account && lastDepositedTime && hasUnstakingFee\n\n  const getRowText = () => {\n    if (noFeeToPay) {\n      return t('Unstaking Fee').toLowerCase()\n    }\n    if (shouldShowTimer) {\n      return t('unstaking fee until')\n    }\n    return t('unstaking fee if withdrawn within 72h')\n  }\n\n  return (\n    <Flex\n      alignItems={isTableVariant ? 'flex-start' : 'center'}\n      justifyContent=\"space-between\"\n      flexDirection={isTableVariant ? 'column' : 'row'}\n    >\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef} small>\n        {noFeeToPay ? '0' : feeAsDecimal}% {getRowText()}\n      </TooltipText>\n      {shouldShowTimer && <WithdrawalFeeTimer secondsRemaining={secondsRemaining} />}\n    </Flex>\n  )\n}\n\nexport default UnstakingFeeCountdownRow\n","import React from 'react'\nimport { Text, Flex, useTooltip, TooltipText } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/hooks'\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\n\ninterface FeeSummaryProps {\n  stakingTokenSymbol: string\n  stakeAmount: string\n}\n\nconst FeeSummary: React.FC<FeeSummaryProps> = ({ stakingTokenSymbol, stakeAmount }) => {\n  const { t } = useTranslation()\n  const {\n    fees: { withdrawalFee },\n  } = useCakeVault()\n  const feeAsDecimal = withdrawalFee / 100\n  const feeInCake = (parseFloat(stakeAmount) * (feeAsDecimal / 100)).toFixed(4)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text bold mb=\"4px\">\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\n      </Text>\n      <Text>\n        {t(\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new CAKE in the pool.',\n        )}\n      </Text>\n    </>,\n    { placement: 'top-start' },\n  )\n\n  return (\n    <>\n      <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\n        {tooltipVisible && tooltip}\n        <TooltipText ref={targetRef} small>\n          {t('Unstaking Fee')}\n        </TooltipText>\n        <Text fontSize=\"14px\">\n          {stakeAmount ? feeInCake : '-'} {stakingTokenSymbol}\n        </Text>\n      </Flex>\n      <UnstakingFeeCountdownRow />\n    </>\n  )\n}\n\nexport default FeeSummary\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Image, Button, Slider, BalanceInput, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport { BASE_EXCHANGE_URL } from 'config'\nimport { useAppDispatch } from 'state'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { useCakeVault, usePriceCakeBusd } from 'state/hooks'\nimport { useCakeVaultContract } from 'hooks/useContract'\nimport useTheme from 'hooks/useTheme'\nimport useWithdrawalFeeTimer from 'hooks/cakeVault/useWithdrawalFeeTimer'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport useToast from 'hooks/useToast'\nimport { fetchCakeVaultUserData } from 'state/pools'\nimport { Pool } from 'state/types'\nimport { convertCakeToShares } from '../../helpers'\nimport FeeSummary from './FeeSummary'\n\ninterface VaultStakeModalProps {\n  pool: Pool\n  stakingMax: BigNumber\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst VaultStakeModal: React.FC<VaultStakeModalProps> = ({ pool, stakingMax, isRemovingStake = false, onDismiss }) => {\n  const dispatch = useAppDispatch()\n  const { stakingToken } = pool\n  const { account } = useWeb3React()\n  const cakeVaultContract = useCakeVaultContract()\n  const {\n    userData: { lastDepositedTime, userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [percent, setPercent] = useState(0)\n  const { hasUnstakingFee } = useWithdrawalFeeTimer(parseInt(lastDepositedTime, 10), userShares)\n  const cakePriceBusd = usePriceCakeBusd()\n  const usdValueStaked =\n    cakePriceBusd.gt(0) && stakeAmount ? formatNumber(new BigNumber(stakeAmount).times(cakePriceBusd).toNumber()) : ''\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = new BigNumber(input).multipliedBy(BIG_TEN.pow(stakingToken.decimals))\n      const percentage = Math.floor(convertedInput.dividedBy(stakingMax).multipliedBy(100).toNumber())\n      setPercent(percentage > 100 ? 100 : percentage)\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = stakingMax.dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleWithdrawal = async (convertedStakeAmount: BigNumber) => {\n    setPendingTx(true)\n    const shareStakeToWithdraw = convertCakeToShares(convertedStakeAmount, pricePerFullShare)\n    // trigger withdrawAll function if the withdrawal will leave 0.000001 CAKE or less\n    const triggerWithdrawAllThreshold = new BigNumber(1000000000000)\n    const sharesRemaining = userShares.minus(shareStakeToWithdraw.sharesAsBigNumber)\n    const isWithdrawingAll = sharesRemaining.lte(triggerWithdrawAllThreshold)\n\n    if (isWithdrawingAll) {\n      cakeVaultContract.methods\n        .withdrawAll()\n        .send({ from: account })\n        .on('sending', () => {\n          setPendingTx(true)\n        })\n        .on('receipt', () => {\n          toastSuccess(t('Unstaked!'), t('Your earnings have also been harvested to your wallet'))\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        })\n        .on('error', (error) => {\n          console.error(error)\n          // Remove message from toast before prod\n          toastError(t('Error'), t('%error% - Please try again.', { error: error.message }))\n          setPendingTx(false)\n        })\n    } else {\n      cakeVaultContract.methods\n        .withdraw(shareStakeToWithdraw.sharesAsBigNumber.toString())\n        // .toString() being called to fix a BigNumber error in prod\n        // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n        .send({ from: account })\n        .on('sending', () => {\n          setPendingTx(true)\n        })\n        .on('receipt', () => {\n          toastSuccess(t('Unstaked!'), t('Your earnings have also been harvested to your wallet'))\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        })\n        .on('error', (error) => {\n          console.error(error)\n          // Remove message from toast before prod\n          toastError(t('Error'), t('%error% - Please try again.', { error: error.message }))\n          setPendingTx(false)\n        })\n    }\n  }\n\n  const handleDeposit = async (convertedStakeAmount: BigNumber) => {\n    cakeVaultContract.methods\n      .deposit(convertedStakeAmount.toString())\n      // .toString() being called to fix a BigNumber error in prod\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n      .send({ from: account })\n      .on('sending', () => {\n        setPendingTx(true)\n      })\n      .on('receipt', () => {\n        toastSuccess(t('Staked!'), t('Your funds have been staked in the pool'))\n        setPendingTx(false)\n        onDismiss()\n        dispatch(fetchCakeVaultUserData({ account }))\n      })\n      .on('error', (error) => {\n        console.error(error)\n        // Remove message from toast before prod\n        toastError(t('Error'), t('%error% - Please try again.', { error: error.message }))\n        setPendingTx(false)\n      })\n  }\n\n  const handleConfirmClick = async () => {\n    const convertedStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n    setPendingTx(true)\n    // unstaking\n    if (isRemovingStake) {\n      handleWithdrawal(convertedStakeAmount)\n      // staking\n    } else {\n      handleDeposit(convertedStakeAmount)\n    }\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image src={`/images/tokens/${stakingToken.symbol}.png`} width={24} height={24} alt={stakingToken.symbol} />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={cakePriceBusd.gt(0) && `~${usdValueStaked || 0} USD`}\n       />\n      <Text mt=\"8px\" ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', { balance: getFullDisplayBalance(stakingMax, stakingToken.decimals) })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(25)}>\n          25%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(50)}>\n          50%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(75)}>\n          75%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(100)}>\n          {t('Max')}\n        </StyledButton>\n      </Flex>\n      {isRemovingStake && hasUnstakingFee && (\n        <FeeSummary stakingTokenSymbol={stakingToken.symbol} stakeAmount={stakeAmount} />\n      )}\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <Button mt=\"8px\" as=\"a\" external href={BASE_EXCHANGE_URL} variant=\"secondary\">\n          {t('Get %symbol%', { symbol: stakingToken.symbol })}\n        </Button>\n      )}\n    </Modal>\n  )\n}\n\nexport default VaultStakeModal\n","import React from 'react'\nimport { Flex, Text, IconButton, AddIcon, MinusIcon, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport { useCakeVault, usePriceCakeBusd } from 'state/hooks'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport { convertSharesToCake } from '../../../helpers'\nimport VaultStakeModal from '../VaultStakeModal'\n\ninterface HasStakeActionProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n}\n\nconst HasSharesActions: React.FC<HasStakeActionProps> = ({ pool, stakingTokenBalance }) => {\n  const {\n    userData: { userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { stakingToken } = pool\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\n  const cakePriceBusd = usePriceCakeBusd()\n  const stakedDollarValue = cakePriceBusd.gt(0)\n    ? getBalanceNumber(cakeAsBigNumber.multipliedBy(cakePriceBusd), stakingToken.decimals)\n    : 0\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n  const [onPresentStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n  const [onPresentUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\n      <Flex flexDirection=\"column\">\n        <Balance fontSize=\"20px\" bold value={cakeAsNumberBalance} decimals={5} />\n        <Text fontSize=\"12px\" color=\"textSubtle\">\n          {cakePriceBusd.gt(0) ? (\n            <Balance value={stakedDollarValue} fontSize=\"12px\" color=\"textSubtle\" decimals={2} prefix=\"~\" unit=\" USD\" />\n          ) : (\n            <Skeleton mt=\"1px\" height={16} width={64} />\n          )}\n        </Text>\n      </Flex>\n      <Flex>\n        <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n          <MinusIcon color=\"primary\" width=\"24px\" />\n        </IconButton>\n        <IconButton variant=\"secondary\" onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n          <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n        </IconButton>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default HasSharesActions\n","import React from 'react'\nimport { Flex, Button, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { Pool } from 'state/types'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport VaultStakeModal from '../VaultStakeModal'\nimport HasSharesActions from './HasSharesActions'\n\ninterface VaultStakeActionsProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  accountHasSharesStaked: boolean\n  isLoading?: boolean\n}\n\nconst VaultStakeActions: React.FC<VaultStakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  accountHasSharesStaked,\n  isLoading = false,\n}) => {\n  const { stakingToken } = pool\n  const { t } = useTranslation()\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n  const [onPresentStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n\n  const renderStakeAction = () => {\n    return accountHasSharesStaked ? (\n      <HasSharesActions pool={pool} stakingTokenBalance={stakingTokenBalance} />\n    ) : (\n      <Button onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>{t('Stake')}</Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default VaultStakeActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCheckVaultApprovalStatus } from 'hooks/useApprove'\nimport { Pool } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport VaultApprovalAction from './VaultApprovalAction'\nimport VaultStakeActions from './VaultStakeActions'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\nconst CakeVaultCardActions: React.FC<{\n  pool: Pool\n  accountHasSharesStaked: boolean\n  isLoading: boolean\n}> = ({ pool, accountHasSharesStaked, isLoading }) => {\n  const { stakingToken, userData } = pool\n  const { t } = useTranslation()\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        <Box display=\"inline\">\n          <InlineText\n            color={accountHasSharesStaked ? 'secondary' : 'textSubtle'}\n            textTransform=\"uppercase\"\n            bold\n            fontSize=\"12px\"\n          >\n            {accountHasSharesStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText\n            color={accountHasSharesStaked ? 'textSubtle' : 'secondary'}\n            textTransform=\"uppercase\"\n            bold\n            fontSize=\"12px\"\n          >\n            {accountHasSharesStaked ? t('Staked (compounding)') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {isVaultApproved ? (\n          <VaultStakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            accountHasSharesStaked={accountHasSharesStaked}\n          />\n        ) : (\n          <VaultApprovalAction isLoading={isLoading} setLastUpdated={setLastUpdated} />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CakeVaultCardActions\n","import React from 'react'\nimport { Text, TooltipText, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\n\ninterface RecentCakeProfitBalanceProps {\n  cakeToDisplay: number\n  dollarValueToDisplay: number\n  dateStringToDisplay: string\n}\n\nconst RecentCakeProfitBalance: React.FC<RecentCakeProfitBalanceProps> = ({\n  cakeToDisplay,\n  dollarValueToDisplay,\n  dateStringToDisplay,\n}) => {\n  const { t } = useTranslation()\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Balance fontSize=\"16px\" value={cakeToDisplay} decimals={3} bold unit=\" CAKE\" />\n      <Balance fontSize=\"16px\" value={dollarValueToDisplay} decimals={2} bold prefix=\"~$\" />\n      {t('Earned since your last action')}\n      <Text>{dateStringToDisplay}</Text>\n    </>,\n    {\n      placement: 'bottom-end',\n    },\n  )\n\n  return (\n    <>\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef} small>\n        <Balance fontSize=\"14px\" value={cakeToDisplay} />\n      </TooltipText>\n    </>\n  )\n}\n\nexport default RecentCakeProfitBalance\n","import React from 'react'\nimport { Flex, Text } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault, usePriceCakeBusd } from 'state/hooks'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport RecentCakeProfitBalance from './RecentCakeProfitBalance'\n\nconst RecentCakeProfitCountdownRow = () => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    pricePerFullShare,\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    cakePriceBusd.toNumber(),\n  )\n\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\n  const dateTimeLastAction = new Date(lastActionInMs)\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      <Text fontSize=\"14px\">{`${t('Recent CAKE profit')}:`}</Text>\n      {hasAutoEarnings && (\n        <RecentCakeProfitBalance\n          cakeToDisplay={autoCakeToDisplay}\n          dollarValueToDisplay={autoUsdToDisplay}\n          dateStringToDisplay={dateStringToDisplay}\n        />\n      )}\n    </Flex>\n  )\n}\n\nexport default RecentCakeProfitCountdownRow\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box, CardBody, Flex, Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport UnlockButton from 'components/UnlockButton'\nimport { useCakeVault } from 'state/hooks'\nimport { Pool } from 'state/types'\nimport AprRow from '../PoolCard/AprRow'\nimport { StyledCard } from '../PoolCard/StyledCard'\nimport CardFooter from '../PoolCard/CardFooter'\nimport StyledCardHeader from '../PoolCard/StyledCardHeader'\nimport VaultCardActions from './VaultCardActions'\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\nimport RecentCakeProfitRow from './RecentCakeProfitRow'\n\nconst StyledCardBody = styled(CardBody)<{ isLoading: boolean }>`\n  min-height: ${({ isLoading }) => (isLoading ? '0' : '254px')};\n`\n\ninterface CakeVaultProps {\n  pool: Pool\n  showStakedOnly: boolean\n}\n\nconst CakeVaultCard: React.FC<CakeVaultProps> = ({ pool, showStakedOnly }) => {\n  const { t } = useTranslation()\n  const { isXl } = useMatchBreakpoints()\n  const { account } = useWeb3React()\n  const {\n    userData: { userShares, isLoading: isVaultUserDataLoading },\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const accountHasSharesStaked = userShares && userShares.gt(0)\n  const isLoading = !pool.userData || isVaultUserDataLoading\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  if (showStakedOnly && !accountHasSharesStaked) {\n    return null\n  }\n\n  return (\n    <StyledCard isPromoted={{ isDesktop: isXl }}>\n        <StyledCardHeader\n          isStaking={accountHasSharesStaked}\n          isAutoVault\n          earningTokenSymbol=\"ZEUS\"\n          stakingTokenSymbol=\"ZEUS\"\n        />\n        <StyledCardBody isLoading={isLoading}>\n          <AprRow pool={pool} performanceFee={performanceFeeAsDecimal} />\n          <Box mt=\"24px\">\n            <RecentCakeProfitRow />\n          </Box>\n          <Box mt=\"8px\">\n            <UnstakingFeeCountdownRow />\n          </Box>\n          <Flex mt=\"32px\" flexDirection=\"column\">\n            {account ? (\n              <VaultCardActions pool={pool} accountHasSharesStaked={accountHasSharesStaked} isLoading={isLoading} />\n            ) : (\n              <>\n                <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                  {t('Start earning')}\n                </Text>\n                <UnlockButton />\n              </>\n            )}\n          </Flex>\n        </StyledCardBody>\n        <CardFooter pool={pool} account={account} />\n     </StyledCard>\n  )\n}\n\nexport default CakeVaultCard\n","import React from 'react'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport {\n  ButtonMenu,\n  ButtonMenuItem,\n  Toggle,\n  Text,\n  Flex,\n  NotificationDot,\n  useMatchBreakpoints,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport ToggleView, { ViewMode } from './ToggleView/ToggleView'\n\nconst PoolTabButtons = ({ stakedOnly, setStakedOnly, hasStakeInFinishedPools, viewMode, setViewMode }) => {\n  const { url, isExact } = useRouteMatch()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { t } = useTranslation()\n\n  const viewModeToggle = <ToggleView viewMode={viewMode} onToggle={(mode: ViewMode) => setViewMode(mode)} />\n\n  const liveOrFinishedSwitch = (\n    <ButtonMenu activeIndex={isExact ? 0 : 1} scale=\"sm\" variant=\"subtle\">\n      <ButtonMenuItem as={Link} to={`${url}`}>\n        {t('Live')}\n      </ButtonMenuItem>\n      <NotificationDot show={hasStakeInFinishedPools}>\n        <ButtonMenuItem as={Link} to={`${url}/history`}>\n          {t('Finished')}\n        </ButtonMenuItem>\n      </NotificationDot>\n    </ButtonMenu>\n  )\n\n  const stakedOnlySwitch = (\n    <Flex mt={['4px', null, 0, null]} ml={[0, null, '24px', null]} justifyContent=\"center\" alignItems=\"center\">\n      <Toggle scale=\"sm\" checked={stakedOnly} onChange={() => setStakedOnly((prev) => !prev)} />\n      <Text ml={['4px', '4px', '8px']}>{t('Staked only')}</Text>\n    </Flex>\n  )\n\n  if (isXs || isSm) {\n    return (\n      <Flex flexDirection=\"column\" alignItems=\"flex-start\" mb=\"24px\">\n        <Flex width=\"100%\" justifyContent=\"space-between\">\n          {viewModeToggle}\n          {liveOrFinishedSwitch}\n        </Flex>\n        {stakedOnlySwitch}\n      </Flex>\n    )\n  }\n\n  return (\n    <Flex\n      alignItems=\"center\"\n      justifyContent={['space-around', 'space-around', 'flex-start']}\n      mb={['24px', '24px', '24px', '0px']}\n    >\n      {viewModeToggle}\n      {liveOrFinishedSwitch}\n      {stakedOnlySwitch}\n    </Flex>\n  )\n}\n\nexport default PoolTabButtons\n","import { Flex, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nconst BaseCell = styled.div`\n  color: black;\n\n  padding: 24px 8px;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\n\nexport const CellContent = styled(Flex)`\n  flex-direction: column;\n  justify-content: center;\n  max-height: 40px;\n  ${Text} {\n    line-height: 1;\n  }\n`\n\nexport default BaseCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Text, Image, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/hooks'\nimport { Pool } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface NameCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 5;\n  flex-direction: row;\n  padding-left: 12px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 150px;\n    padding-left: 32px;\n  }\n`\n\nconst NameCell: React.FC<NameCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { sousId, stakingToken, earningToken, userData, isFinished, isAutoVault } = pool\n  const {\n    userData: { userShares },\n  } = useCakeVault()\n  const hasVaultShares = userShares && userShares.gt(0)\n\n  const stakingTokenSymbol = stakingToken.symbol\n  const earningTokenSymbol = earningToken.symbol\n  const iconFile = `${earningTokenSymbol}-${stakingTokenSymbol}.png`.toLocaleLowerCase()\n\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isStaked = stakedBalance.gt(0)\n  const isManualCakePool = sousId === 0\n\n  const showStakedTag = isAutoVault ? hasVaultShares : isStaked\n\n  let title = `${t('Earn')} ${earningTokenSymbol}`\n  let subtitle = `${t('Stake')} ${stakingTokenSymbol}`\n  const showSubtitle = sousId !== 0 || (sousId === 0 && !isXs && !isSm)\n\n  if (isAutoVault) {\n    title = t('Auto CAKE')\n    subtitle = t('Automatic restaking')\n  } else if (isManualCakePool) {\n    title = t('Manual ZEUS')\n    subtitle = `${t('Earn')} ZEUS ${t('Stake').toLocaleLowerCase()} ZEUS`\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n      <Image src={`/images/pools/${iconFile}`} alt=\"icon\" width={32} height={40} mr=\"8px\" />\n      <CellContent>\n        {showStakedTag && (\n          <Text fontSize=\"12px\" bold color={isFinished ? 'failure' : 'secondary'} textTransform=\"uppercase\">\n            {t('Staked')}\n          </Text>\n        )}\n        <Text bold={!isXs && !isSm} small={isXs || isSm}>\n          {title}\n        </Text>\n        {showSubtitle && (\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            {subtitle}\n          </Text>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default NameCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Skeleton, Text, useTooltip, HelpIcon, Flex, Box, useModal, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport BigNumber from 'bignumber.js'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport BaseCell, { CellContent } from './BaseCell'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\n\ninterface EarningsCellProps {\n  pool: Pool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 4.5;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 120px;\n  }\n`\n\nconst HelpIconWrapper = styled.div`\n  align-self: center;\n`\n\nconst EarningsCell: React.FC<EarningsCellProps> = ({ pool, account, userDataLoaded }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { sousId, earningToken, poolCategory, userData, earningTokenPrice, isAutoVault } = pool\n  const isManualCakePool = sousId === 0\n\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  // These will be reassigned later if its Auto CAKE vault\n  let earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  let earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n  let hasEarnings = account && earnings.gt(0)\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n  const earningsDollarValue = formatNumber(earningTokenDollarBalance)\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  // Auto CAKE vault calculations\n  const {\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\n  const dateTimeLastAction = new Date(lastActionInMs)\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\n\n  const labelText = isAutoVault ? t('Recent CAKE profit') : t('%asset% Earned', { asset: earningToken.symbol })\n  earningTokenBalance = isAutoVault ? autoCakeToDisplay : earningTokenBalance\n  hasEarnings = isAutoVault ? hasAutoEarnings : hasEarnings\n  earningTokenDollarBalance = isAutoVault ? autoUsdToDisplay : earningTokenDollarBalance\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Balance fontSize=\"16px\" value={autoCakeToDisplay} decimals={3} bold unit=\" CAKE\" />\n      <Balance fontSize=\"16px\" value={autoUsdToDisplay} decimals={2} bold prefix=\"~$\" />\n      {t('Earned since your last action')}\n      <Text>{dateStringToDisplay}</Text>\n    </>,\n    { placement: 'bottom' },\n  )\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningsDollarValue}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isManualCakePool}\n    />,\n  )\n\n  const handleEarningsClick = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation()\n    onPresentCollect()\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {labelText}\n        </Text>\n        {!userDataLoaded && account ? (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        ) : (\n          <>\n            {tooltipVisible && tooltip}\n            <Flex>\n              <Box mr=\"8px\" height=\"32px\" onClick={!isAutoVault && hasEarnings ? handleEarningsClick : undefined}>\n                <Balance\n                  mt=\"4px\"\n                  bold={!isXs && !isSm}\n                  fontSize={isXs || isSm ? '14px' : '16px'}\n                  color={hasEarnings ? 'primary' : 'textDisabled'}\n                  decimals={hasEarnings ? 5 : 1}\n                  value={hasEarnings ? earningTokenBalance : 0}\n                />\n                {hasEarnings ? (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color={hasEarnings ? 'textSubtle' : 'textDisabled'}\n                    decimals={2}\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                    prefix=\"~\"\n                  />\n                ) : (\n                  <Text mt=\"4px\" fontSize=\"12px\" color={hasEarnings ? 'textSubtle' : 'textDisabled'}>\n                    0 USD\n                  </Text>\n                )}\n              </Box>\n              {isAutoVault && hasEarnings && !isXs && !isSm && (\n                <HelpIconWrapper ref={targetRef}>\n                  <HelpIcon color=\"textSubtle\" />\n                </HelpIconWrapper>\n              )}\n            </Flex>\n          </>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EarningsCell\n","import React from 'react'\nimport { Flex, useModal, CalculateIcon, IconButton, Skeleton, FlexProps } from '@pancakeswap/uikit'\nimport { BASE_EXCHANGE_URL } from 'config'\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\nimport Balance from 'components/Balance'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getAprData } from 'views/Pools/helpers'\n\ninterface AprProps extends FlexProps {\n  pool: Pool\n  showIcon: boolean\n  performanceFee?: number\n}\n\nconst Apr: React.FC<AprProps> = ({ pool, showIcon, performanceFee = 0, ...props }) => {\n  const { stakingToken, earningToken, isFinished, earningTokenPrice, apr } = pool\n  const { t } = useTranslation()\n\n  const { apr: earningsPercentageToDisplay, roundingDecimals, compoundFrequency } = getAprData(pool, performanceFee)\n\n  const apyModalLink =\n    stakingToken.address &&\n    `${BASE_EXCHANGE_URL}/#/swap?outputCurrency=${stakingToken.address[process.env.REACT_APP_CHAIN_ID]}`\n\n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal\n      tokenPrice={earningTokenPrice}\n      apr={apr}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink || BASE_EXCHANGE_URL}\n      earningTokenSymbol={earningToken.symbol}\n      roundingDecimals={roundingDecimals}\n      compoundFrequency={compoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n  const openRoiModal = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation()\n    onPresentApyModal()\n  }\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\" {...props}>\n      {earningsPercentageToDisplay || isFinished ? (\n        <>\n          <Flex>\n            <Balance\n              onClick={openRoiModal}\n              fontSize=\"16px\"\n              isDisabled={isFinished}\n              value={isFinished ? 0 : earningsPercentageToDisplay}\n              decimals={2}\n              unit=\"%\"\n            />\n          </Flex>\n          {!isFinished && showIcon && (\n            <Flex>\n              <IconButton\n                onClick={openRoiModal}\n                variant=\"text\"\n                width=\"20px\"\n                height=\"20px\"\n                mr={['-14px', '-14px', '0px']}\n              >\n                <CalculateIcon color=\"textSubtle\" width=\"20px\" />\n              </IconButton>\n            </Flex>\n          )}\n        </>\n      ) : (\n        <Skeleton width=\"80px\" height=\"16px\" />\n      )}\n    </Flex>\n  )\n}\n\nexport default Apr\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell, { CellContent } from './BaseCell'\nimport Apr from '../Apr'\n\ninterface AprCellProps {\n  pool: Pool\n  performanceFee: number\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 1 0 50px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n  }\n`\n\nconst AprCell: React.FC<AprCellProps> = ({ pool, performanceFee }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { isAutoVault } = pool\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {isAutoVault ? t('APY') : t('APR')}\n        </Text>\n        <Apr\n          pool={pool}\n          performanceFee={isAutoVault ? performanceFee : 0}\n          showIcon={!isXs && !isSm}\n          alignItems=\"flex-start\"\n        />\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default AprCell\n","import React, { useMemo } from 'react'\nimport { Flex, Skeleton, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport BigNumber from 'bignumber.js'\nimport Balance from 'components/Balance'\nimport { Pool } from 'state/types'\nimport { useCakeVault } from 'state/hooks'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface TotalStakedCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst TotalStakedCell: React.FC<TotalStakedCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { sousId, stakingToken, totalStaked, isAutoVault } = pool\n  const { totalCakeInVault } = useCakeVault()\n\n  const isManualCakePool = sousId === 0\n\n  const totalStakedBalance = useMemo(() => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }, [isAutoVault, totalCakeInVault, isManualCakePool, totalStaked, stakingToken.decimals])\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {t('Total staked')}\n        </Text>\n        {totalStakedBalance ? (\n          <Flex height=\"100%\" alignItems=\"center\">\n            <Balance fontSize=\"16px\" value={totalStakedBalance} decimals={0} unit={` ${stakingToken.symbol}`} />\n          </Flex>\n        ) : (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Link, Skeleton, Text, TimerIcon } from '@pancakeswap/uikit'\nimport { getBscScanBlockCountdownUrl } from 'utils/bscscan'\nimport { Pool } from 'state/types'\nimport { useBlock } from 'state/hooks'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface FinishCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst EndsInCell: React.FC<FinishCellProps> = ({ pool }) => {\n  const { sousId, totalStaked, endBlock, isFinished } = pool\n  const { currentBlock } = useBlock()\n  const { t } = useTranslation()\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isCakePool = sousId === 0\n\n  const renderBlocks = shouldShowBlockCountdown ? (\n    <Flex alignItems=\"center\">\n      <Flex flex=\"1.3\">\n        <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} />\n        <Text ml=\"4px\" textTransform=\"lowercase\">\n          {t('Blocks')}\n        </Text>\n      </Flex>\n      <Flex flex=\"1\">\n        <Link external href={getBscScanBlockCountdownUrl(endBlock)} onClick={(e) => e.stopPropagation()}>\n          <TimerIcon ml=\"4px\" />\n        </Link>\n      </Flex>\n    </Flex>\n  ) : (\n    <Text>-</Text>\n  )\n\n  // A bit hacky way to determine if public data is loading relying on totalStaked\n  // Opted to go for this since we don't really need a separate publicDataLoaded flag\n  // anywhere else\n  const isLoadingPublicData = !totalStaked.gt(0) || !currentBlock || (!blocksRemaining && !blocksUntilStart)\n  const showLoading = isLoadingPublicData && !isCakePool && !isFinished\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {hasPoolStarted || !shouldShowBlockCountdown ? t('Ends in') : t('Starts in')}\n        </Text>\n        {showLoading ? <Skeleton width=\"80px\" height=\"16px\" /> : renderBlocks}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EndsInCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, ChevronDownIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell from './BaseCell'\n\ninterface ExpandActionCellProps {\n  expanded: boolean\n  isFullLayout: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex-direction: row;\n  justify-content: flex-end;\n  align-items: center;\n  flex: 1;\n  padding-right: 12px;\n  padding-left: 0px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n    padding-right: 32px;\n    padding-left: 8px;\n  }\n`\n\nconst ArrowIcon = styled(ChevronDownIcon)<{ toggled: boolean }>`\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\n  height: 24px;\n`\n\nconst TotalStakedCell: React.FC<ExpandActionCellProps> = ({ expanded, isFullLayout }) => {\n  const { t } = useTranslation()\n  return (\n    <StyledCell role=\"cell\">\n      {isFullLayout && (\n        <Text color=\"primary\" bold>\n          {expanded ? t('Hide') : t('Details')}\n        </Text>\n      )}\n      <ArrowIcon color=\"primary\" toggled={expanded} />\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import styled from 'styled-components'\n\nexport const ActionContainer = styled.div`\n  padding: 16px;\n  border: 2px solid ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  flex-grow: 1;\n  flex-basis: 0;\n  margin-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 12px;\n    margin-right: 12px;\n    margin-bottom: 0;\n    height: 130px;\n    max-height: 130px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    margin-left: 32px;\n    margin-right: 0;\n    margin-bottom: 0;\n    height: 130px;\n    max-height: 130px;\n  }\n`\n\nexport const ActionTitles = styled.div`\n  font-weight: 600;\n  font-size: 12px;\n`\n\nexport const ActionContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n","import React from 'react'\nimport { Button, Text, useModal, Flex, TooltipText, useTooltip, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport { PoolCategory } from 'config/constants/types'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/hooks'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Pool } from 'state/types'\n\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\nimport UnstakingFeeCountdownRow from '../../CakeVaultCard/UnstakingFeeCountdownRow'\n\ninterface HarvestActionProps extends Pool {\n  userDataLoaded: boolean\n}\n\nconst HarvestAction: React.FunctionComponent<HarvestActionProps> = ({\n  sousId,\n  poolCategory,\n  earningToken,\n  userData,\n  userDataLoaded,\n  isAutoVault,\n  earningTokenPrice,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  // These will be reassigned later if its Auto CAKE vault\n  let earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  let earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n  let hasEarnings = earnings.gt(0)\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n  const earningsDollarValue = formatNumber(earningTokenDollarBalance)\n  const isCompoundPool = sousId === 0\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  // Auto CAKE vault calculations\n  const {\n    userData: { cakeAtLastUserAction, userShares },\n    pricePerFullShare,\n    fees: { performanceFee },\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  earningTokenBalance = isAutoVault ? autoCakeToDisplay : earningTokenBalance\n  hasEarnings = isAutoVault ? hasAutoEarnings : hasEarnings\n  earningTokenDollarBalance = isAutoVault ? autoUsdToDisplay : earningTokenDollarBalance\n\n  const displayBalance = hasEarnings ? earningTokenBalance : 0\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningsDollarValue}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const actionTitle = isAutoVault ? (\n    <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n      {t('Recent CAKE profit')}\n    </Text>\n  ) : (\n    <>\n      <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n        {earningToken.symbol}{' '}\n      </Text>\n      <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n        {t('Earned')}\n      </Text>\n    </>\n  )\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Balance pt=\"8px\" lineHeight=\"1\" bold fontSize=\"20px\" decimals={5} value={0} />\n          <Button disabled>{isCompoundPool ? t('Collect') : t('Harvest')}</Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>{actionTitle}</ActionTitles>\n      <ActionContent>\n        <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n          <Balance lineHeight=\"1\" bold fontSize=\"20px\" decimals={5} value={displayBalance} />\n          {hasEarnings ? (\n            <Balance\n              display=\"inline\"\n              fontSize=\"12px\"\n              color={hasEarnings ? 'textSubtle' : 'textDisabled'}\n              decimals={2}\n              value={earningTokenDollarBalance}\n              unit=\" USD\"\n              prefix=\"~\"\n            />\n          ) : (\n            <Text fontSize=\"12px\" color={hasEarnings ? 'textSubtle' : 'textDisabled'}>\n              0 USD\n            </Text>\n          )}\n        </Flex>\n        {isAutoVault ? (\n          <Flex flex=\"1.3\" flexDirection=\"column\" alignSelf=\"flex-start\" alignItems=\"flex-start\">\n            <UnstakingFeeCountdownRow isTableVariant />\n            <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n              {tooltipVisible && tooltip}\n              <TooltipText ref={targetRef} small>\n                {t('Performance Fee')}\n              </TooltipText>\n              <Flex alignItems=\"center\">\n                <Text ml=\"4px\" small>\n                  {performanceFee / 100}%\n                </Text>\n              </Flex>\n            </Flex>\n          </Flex>\n        ) : (\n          <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n            {isCompoundPool ? t('Collect') : t('Harvest')}\n          </Button>\n        )}\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default HarvestAction\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, useModal, IconButton, AddIcon, MinusIcon, Skeleton, useTooltip, Flex, Text } from '@pancakeswap/uikit'\nimport UnlockButton from 'components/UnlockButton'\nimport { useWeb3React } from '@web3-react/core'\nimport { useCakeVault } from 'state/hooks'\nimport { Pool } from 'state/types'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCheckVaultApprovalStatus, useSousApprove, useVaultApprove } from 'hooks/useApprove'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useERC20 } from 'hooks/useContract'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport StakeModal from '../../PoolCard/Modals/StakeModal'\nimport VaultStakeModal from '../../CakeVaultCard/VaultStakeModal'\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n`\n\ninterface StackedActionProps {\n  pool: Pool\n  userDataLoaded: boolean\n}\n\nconst Staked: React.FunctionComponent<StackedActionProps> = ({ pool, userDataLoaded }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    stakingLimit,\n    isFinished,\n    poolCategory,\n    userData,\n    stakingTokenPrice,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { handleApprove: handlePoolApprove, requestedApproval: requestedPoolApproval } = useSousApprove(\n    stakingTokenContract,\n    sousId,\n    earningToken.symbol,\n  )\n\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\n  const { handleApprove: handleVaultApprove, requestedApproval: requestedVaultApproval } =\n    useVaultApprove(setLastUpdated)\n\n  const handleApprove = isAutoVault ? handleVaultApprove : handlePoolApprove\n  const requestedApproval = isAutoVault ? requestedVaultApproval : requestedPoolApproval\n\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isNotVaultAndHasStake = !isAutoVault && stakedBalance.gt(0)\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const {\n    userData: { userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\n  const hasSharesStaked = userShares && userShares.gt(0)\n  const isVaultWithShares = isAutoVault && hasSharesStaked\n  const stakedAutoDollarValue = getBalanceNumber(cakeAsBigNumber.multipliedBy(stakingTokenPrice), stakingToken.decimals)\n\n  const needsApproval = isAutoVault ? !isVaultApproved : !allowance.gt(0) && !isBnbPool\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentVaultStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const [onPresentVaultUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\n\n  const onStake = () => {\n    if (isAutoVault) {\n      onPresentVaultStake()\n    } else {\n      onPresentStake()\n    }\n  }\n\n  const onUnstake = () => {\n    if (isAutoVault) {\n      onPresentVaultUnstake()\n    } else {\n      onPresentUnstake()\n    }\n  }\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t(\"You've already staked the maximum amount you can stake in this pool!\"),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <UnlockButton width=\"100%\" />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (needsApproval) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Enable pool')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove} variant=\"secondary\">\n            {t('Enable')}\n          </Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  // Wallet connected, user data loaded and approved\n  if (isNotVaultAndHasStake || isVaultWithShares) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n            {stakingToken.symbol}{' '}\n          </Text>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {isAutoVault ? t('Staked (compounding)') : t('Staked')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n            <Balance\n              lineHeight=\"1\"\n              bold\n              fontSize=\"20px\"\n              decimals={5}\n              value={isAutoVault ? cakeAsNumberBalance : stakedTokenBalance}\n            />\n            <Balance\n              fontSize=\"12px\"\n              display=\"inline\"\n              color=\"textSubtle\"\n              decimals={2}\n              value={isAutoVault ? stakedAutoDollarValue : stakedTokenDollarBalance}\n              unit=\" USD\"\n              prefix=\"~\"\n            />\n          </Flex>\n          <IconButtonWrapper>\n            <IconButton variant=\"secondary\" onClick={onUnstake} mr=\"6px\">\n              <MinusIcon color=\"primary\" width=\"14px\" />\n            </IconButton>\n            {reachStakingLimit ? (\n              <span ref={targetRef}>\n                <IconButton variant=\"secondary\" disabled>\n                  <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n                </IconButton>\n              </span>\n            ) : (\n              <IconButton\n                variant=\"secondary\"\n                onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n                disabled={isFinished}\n              >\n                <AddIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n            )}\n          </IconButtonWrapper>\n          {tooltipVisible && tooltip}\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n          {t('Stake')}{' '}\n        </Text>\n        <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n          {stakingToken.symbol}\n        </Text>\n      </ActionTitles>\n      <ActionContent>\n        <Button\n          width=\"100%\"\n          onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n          variant=\"secondary\"\n          disabled={isFinished}\n        >\n          {t('Stake')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default Staked\n","import React from 'react'\nimport styled, { keyframes, css } from 'styled-components'\nimport {\n  Box,\n  Button,\n  Flex,\n  HelpIcon,\n  Link,\n  LinkExternal,\n  MetamaskIcon,\n  Skeleton,\n  Text,\n  TimerIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { BASE_URL } from 'config'\nimport { getBscScanBlockCountdownUrl } from 'utils/bscscan'\nimport { useBlock, useCakeVault } from 'state/hooks'\nimport BigNumber from 'bignumber.js'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport { getAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\nimport Harvest from './Harvest'\nimport Stake from './Stake'\nimport Apr from '../Apr'\n\nconst expandAnimation = keyframes`\n  from {\n    max-height: 0px;\n  }\n  to {\n    max-height: 700px;\n  }\n`\n\nconst collapseAnimation = keyframes`\n  from {\n    max-height: 700px;\n  }\n  to {\n    max-height: 0px;\n  }\n`\n\nconst StyledActionPanel = styled.div<{ expanded: boolean }>`\n  animation: ${({ expanded }) =>\n    expanded\n      ? css`\n          ${expandAnimation} 300ms linear forwards\n        `\n      : css`\n          ${collapseAnimation} 300ms linear forwards\n        `};\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.dropdown};\n  display: flex;\n  flex-direction: column-reverse;\n  justify-content: center;\n  padding: 12px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    flex-direction: row;\n    padding: 16px 32px;\n  }\n`\n\nconst ActionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    align-items: center;\n    flex-grow: 1;\n    flex-basis: 0;\n  }\n`\n\ntype MediaBreakpoints = {\n  isXs: boolean\n  isSm: boolean\n  isMd: boolean\n  isLg: boolean\n  isXl: boolean\n}\n\ninterface ActionPanelProps {\n  account: string\n  pool: Pool\n  userDataLoaded: boolean\n  expanded: boolean\n  breakpoints: MediaBreakpoints\n}\n\nconst InfoSection = styled(Box)`\n  flex-grow: 0;\n  flex-shrink: 0;\n  flex-basis: auto;\n  padding: 8px 8px;\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding: 0;\n    flex-basis: 230px;\n  }\n`\n\nconst ActionPanel: React.FC<ActionPanelProps> = ({ account, pool, userDataLoaded, expanded, breakpoints }) => {\n  const { sousId, stakingToken, earningToken, totalStaked, endBlock, stakingLimit, isAutoVault } = pool\n  const { t } = useTranslation()\n  const { currentBlock } = useBlock()\n  const { isXs, isSm, isMd } = breakpoints\n  const showSubtitle = (isXs || isSm) && sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isMetaMaskInScope = !!(window as WindowChain).ethereum?.isMetaMask\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n  const imageSrc = `${BASE_URL}/images/tokens/${earningToken.symbol.toLowerCase()}.png`\n\n  const {\n    totalCakeInVault,\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n  const isManualCakePool = sousId === 0\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const {\n    targetRef: tagTargetRef,\n    tooltip: tagTooltip,\n    tooltipVisible: tagTooltipVisible,\n  } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom-start',\n  })\n\n  const maxStakeRow = stakingLimit.gt(0) ? (\n    <Flex mb=\"8px\" justifyContent=\"space-between\">\n      <Text>{t('Max. stake per user')}:</Text>\n      <Text>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n    </Flex>\n  ) : null\n\n  const blocksRow =\n    blocksRemaining || blocksUntilStart ? (\n      <Flex mb=\"8px\" justifyContent=\"space-between\">\n        <Text>{hasPoolStarted ? t('Ends in') : t('Starts in')}:</Text>\n        <Flex>\n          <Link external href={getBscScanBlockCountdownUrl(endBlock)}>\n            <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} color=\"primary\" />\n            <Text ml=\"4px\" color=\"primary\" textTransform=\"lowercase\">\n              {t('Blocks')}\n            </Text>\n            <TimerIcon ml=\"4px\" color=\"primary\" />\n          </Link>\n        </Flex>\n      </Flex>\n    ) : (\n      <Skeleton width=\"56px\" height=\"16px\" />\n    )\n\n  const aprRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text>{isAutoVault ? t('APY') : t('APR')}</Text>\n      <Apr pool={pool} showIcon performanceFee={isAutoVault ? performanceFeeAsDecimal : 0} />\n    </Flex>\n  )\n\n  const totalStakedRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text maxWidth={['50px', '100%']}>{t('Total staked')}</Text>\n      <Flex alignItems=\"center\">\n        {totalStaked ? (\n          <>\n            <Balance fontSize=\"16px\" value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n            <span ref={totalStakedTargetRef}>\n              <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"6px\" />\n            </span>\n          </>\n        ) : (\n          <Skeleton width=\"56px\" height=\"16px\" />\n        )}\n        {totalStakedTooltipVisible && totalStakedTooltip}\n      </Flex>\n    </Flex>\n  )\n\n  return (\n    <StyledActionPanel expanded={expanded}>\n      <InfoSection>\n        {maxStakeRow}\n        {(isXs || isSm) && aprRow}\n        {(isXs || isSm || isMd) && totalStakedRow}\n        {shouldShowBlockCountdown && blocksRow}\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n          <LinkExternal href={`https://pancakeswap.info/token/${getAddress(earningToken.address)}`} bold={false}>\n            {t('Info site')}\n          </LinkExternal>\n        </Flex>\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n          <LinkExternal href={earningToken.projectLink} bold={false}>\n            {t('Project site')}\n          </LinkExternal>\n        </Flex>\n        {account && isMetaMaskInScope && tokenAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <Button\n              variant=\"text\"\n              p=\"0\"\n              height=\"auto\"\n              onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals, imageSrc)}\n            >\n              <Text color=\"primary\">{t('Add to Metamask')}</Text>\n              <MetamaskIcon ml=\"4px\" />\n            </Button>\n          </Flex>\n        )}\n        {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n        {tagTooltipVisible && tagTooltip}\n        <span ref={tagTargetRef}>\n          <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n        </span>\n      </InfoSection>\n      <ActionContainer>\n        {showSubtitle && (\n          <Text mt=\"4px\" mb=\"16px\" color=\"textSubtle\">\n            {isAutoVault ? t('Automatic restaking') : `${t('Earn')} CAKE ${t('Stake').toLocaleLowerCase()} CAKE`}\n          </Text>\n        )}\n        <Harvest {...pool} userDataLoaded={userDataLoaded} />\n        <Stake pool={pool} userDataLoaded={userDataLoaded} />\n      </ActionContainer>\n    </StyledActionPanel>\n  )\n}\n\nexport default ActionPanel\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { useCakeVault } from 'state/hooks'\nimport useDelayedUnmount from 'hooks/useDelayedUnmount'\nimport NameCell from './Cells/NameCell'\nimport EarningsCell from './Cells/EarningsCell'\nimport AprCell from './Cells/AprCell'\nimport TotalStakedCell from './Cells/TotalStakedCell'\nimport EndsInCell from './Cells/EndsInCell'\nimport ExpandActionCell from './Cells/ExpandActionCell'\nimport ActionPanel from './ActionPanel/ActionPanel'\n\ninterface PoolRowProps {\n  pool: Pool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledRow = styled.div`\n  background-color: transparent;\n  display: flex;\n  cursor: pointer;\n`\n\nconst PoolRow: React.FC<PoolRowProps> = ({ pool, account, userDataLoaded }) => {\n  const { isXs, isSm, isMd, isLg, isXl } = useMatchBreakpoints()\n  const [expanded, setExpanded] = useState(false)\n  const shouldRenderActionPanel = useDelayedUnmount(expanded, 300)\n\n  const toggleExpanded = () => {\n    setExpanded((prev) => !prev)\n  }\n\n  const {\n    fees: { performanceFee },\n  } = useCakeVault()\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  return (\n    <>\n      <StyledRow role=\"row\" onClick={toggleExpanded}>\n        <NameCell pool={pool} />\n        <EarningsCell pool={pool} account={account} userDataLoaded={userDataLoaded} />\n        <AprCell pool={pool} performanceFee={performanceFeeAsDecimal} />\n        {(isLg || isXl) && <TotalStakedCell pool={pool} />}\n        {isXl && <EndsInCell pool={pool} />}\n        <ExpandActionCell expanded={expanded} isFullLayout={isMd || isLg || isXl} />\n      </StyledRow>\n      {shouldRenderActionPanel && (\n        <ActionPanel\n          account={account}\n          pool={pool}\n          userDataLoaded={userDataLoaded}\n          expanded={expanded}\n          breakpoints={{ isXs, isSm, isMd, isLg, isXl }}\n        />\n      )}\n    </>\n  )\n}\n\nexport default PoolRow\n","import React, { useRef } from 'react'\nimport styled from 'styled-components'\nimport { Button, ChevronUpIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Pool } from 'state/types'\nimport PoolRow from './PoolRow'\n\ninterface PoolsTableProps {\n  pools: Pool[]\n  userDataLoaded: boolean\n  account: string\n}\n\nconst StyledTable = styled.div`\n  border-radius: ${({ theme }) => theme.radii.card};\n\n  background-color: ${({ theme }) => theme.card.background};\n  > div:not(:last-child) {\n    border-bottom: 2px solid ${({ theme }) => theme.colors.background};\n  }\n`\n\nconst StyledTableBorder = styled.div`\n  border-radius: ${({ theme }) => theme.radii.card};\n  background-color: ${({ theme }) => theme.colors.cardBorder};\n  padding: 1px 1px 3px 1px;\n  background-size: 400% 400%;\n`\n\nconst ScrollButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 5px;\n  padding-bottom: 5px;\n`\n\nconst PoolsTable: React.FC<PoolsTableProps> = ({ pools, userDataLoaded, account }) => {\n  const { t } = useTranslation()\n  const tableWrapperEl = useRef<HTMLDivElement>(null)\n  const scrollToTop = (): void => {\n    tableWrapperEl.current.scrollIntoView({\n      behavior: 'smooth',\n    })\n  }\n  return (\n    <StyledTableBorder>\n      <StyledTable role=\"table\" ref={tableWrapperEl}>\n        {pools.map((pool) => (\n          <PoolRow\n            key={pool.isAutoVault ? 'auto-cake' : pool.sousId}\n            pool={pool}\n            account={account}\n            userDataLoaded={userDataLoaded}\n          />\n        ))}\n        <ScrollButtonContainer>\n          <Button variant=\"text\" onClick={scrollToTop}>\n            {t('To Top')}\n            <ChevronUpIcon color=\"primary\" />\n          </Button>\n        </ScrollButtonContainer>\n      </StyledTable>\n    </StyledTableBorder>\n  )\n}\n\nexport default PoolsTable\n","import React, { useEffect, useMemo, useRef, useState } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Heading, Flex, Image, Text } from '@pancakeswap/uikit'\nimport orderBy from 'lodash/orderBy'\nimport partition from 'lodash/partition'\nimport { useTranslation } from 'contexts/Localization'\nimport usePersistState from 'hooks/usePersistState'\nimport { usePools, useFetchCakeVault, useFetchPublicPoolsData, usePollFarmsData, useCakeVault } from 'state/hooks'\nimport { latinise } from 'utils/latinise'\nimport FlexLayout from 'components/layout/Flex'\nimport Page from 'components/layout/Page'\nimport PageHeader from 'components/PageHeader'\nimport SearchInput from 'components/SearchInput'\nimport Select, { OptionProps } from 'components/Select/Select'\nimport { Pool } from 'state/types'\nimport PoolCard from './components/PoolCard'\nimport CakeVaultCard from './components/CakeVaultCard'\nimport PoolTabButtons from './components/PoolTabButtons'\nimport PoolsTable from './components/PoolsTable/PoolsTable'\nimport { ViewMode } from './components/ToggleView/ToggleView'\nimport { getAprData, getCakeVaultEarnings } from './helpers'\n\nconst CardLayout = styled(FlexLayout)`\n  justify-content: center;\n`\n\nconst PoolControls = styled(Flex)`\ndisplay: flex;\nwidth: 100%;\nalign-items: center;\nposition: relative;\n\njustify-content: space-between;\nflex-direction: column;\nmargin-bottom: 50px;\nbackground-color: rgb(0, 21, 46) ;\nborder-radius: 25px;\n\n${({ theme }) => theme.mediaQueries.sm} {\n  flex-direction: row;\n    flex-wrap: wrap;\n    padding: 20px 32px;\n    margin-bottom: 50;\n}\n`\n\nconst SearchSortContainer = styled(Flex)`\n  gap: 10px;\n  justify-content: space-between;\n`\n\nconst ControlStretch = styled(Flex)`\n  > div {\n    flex: 1;\n  }\n`\n\nconst NUMBER_OF_POOLS_VISIBLE = 12\n\nconst Pools: React.FC = () => {\n  const location = useLocation()\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { pools: poolsWithoutAutoVault, userDataLoaded } = usePools(account)\n  const [stakedOnly, setStakedOnly] = usePersistState(false, { localStorageKey: 'pancake_pool_staked' })\n  const [numberOfPoolsVisible, setNumberOfPoolsVisible] = useState(NUMBER_OF_POOLS_VISIBLE)\n  const [observerIsSet, setObserverIsSet] = useState(false)\n  const loadMoreRef = useRef<HTMLDivElement>(null)\n  const [viewMode, setViewMode] = usePersistState(ViewMode.TABLE, { localStorageKey: 'pancake_farm_view' })\n  const [searchQuery, setSearchQuery] = useState('')\n  const [sortOption, setSortOption] = useState('hot')\n  const {\n    userData: { cakeAtLastUserAction, userShares },\n    fees: { performanceFee },\n    pricePerFullShare,\n    totalCakeInVault,\n  } = useCakeVault()\n  const accountHasVaultShares = userShares && userShares.gt(0)\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  const pools = useMemo(() => {\n    const cakePool = poolsWithoutAutoVault.find((pool) => pool.sousId === 0)\n     return [ ...poolsWithoutAutoVault]\n  }, [poolsWithoutAutoVault])\n\n  // TODO aren't arrays in dep array checked just by reference, i.e. it will rerender every time reference changes?\n  const [finishedPools, openPools] = useMemo(() => partition(pools, (pool) => pool.isFinished), [pools])\n  const stakedOnlyFinishedPools = useMemo(\n    () =>\n      finishedPools.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [finishedPools, accountHasVaultShares],\n  )\n  const stakedOnlyOpenPools = useMemo(\n    () =>\n      openPools.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [openPools, accountHasVaultShares],\n  )\n  const hasStakeInFinishedPools = stakedOnlyFinishedPools.length > 0\n\n  usePollFarmsData()\n  useFetchCakeVault()\n  useFetchPublicPoolsData()\n\n  useEffect(() => {\n    const showMorePools = (entries) => {\n      const [entry] = entries\n      if (entry.isIntersecting) {\n        setNumberOfPoolsVisible((poolsCurrentlyVisible) => poolsCurrentlyVisible + NUMBER_OF_POOLS_VISIBLE)\n      }\n    }\n\n    if (!observerIsSet) {\n      const loadMoreObserver = new IntersectionObserver(showMorePools, {\n        rootMargin: '0px',\n        threshold: 1,\n      })\n      loadMoreObserver.observe(loadMoreRef.current)\n      setObserverIsSet(true)\n    }\n  }, [observerIsSet])\n\n  const showFinishedPools = location.pathname.includes('history')\n\n  const handleChangeSearchQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchQuery(event.target.value)\n  }\n\n  const handleSortOptionChange = (option: OptionProps): void => {\n    setSortOption(option.value)\n  }\n\n  const sortPools = (poolsToSort: Pool[]) => {\n    switch (sortOption) {\n      case 'apr':\n        // Ternary is needed to prevent pools without APR (like MIX) getting top spot\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => (pool.apr ? getAprData(pool, performanceFeeAsDecimal).apr : 0),\n          'desc',\n        )\n      case 'earned':\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => {\n            if (!pool.userData || !pool.earningTokenPrice) {\n              return 0\n            }\n            return pool.isAutoVault\n              ? getCakeVaultEarnings(\n                  account,\n                  cakeAtLastUserAction,\n                  userShares,\n                  pricePerFullShare,\n                  pool.earningTokenPrice,\n                ).autoUsdToDisplay\n              : pool.userData.pendingReward.times(pool.earningTokenPrice).toNumber()\n          },\n          'desc',\n        )\n      case 'totalStaked':\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => (pool.isAutoVault ? totalCakeInVault.toNumber() : pool.totalStaked.toNumber()),\n          'desc',\n        )\n      default:\n        return poolsToSort\n    }\n  }\n\n  const poolsToShow = () => {\n    let chosenPools = []\n    if (showFinishedPools) {\n      chosenPools = stakedOnly ? stakedOnlyFinishedPools : finishedPools\n    } else {\n      chosenPools = stakedOnly ? stakedOnlyOpenPools : openPools\n    }\n\n    if (searchQuery) {\n      const lowercaseQuery = latinise(searchQuery.toLowerCase())\n      chosenPools = chosenPools.filter((pool) =>\n        latinise(pool.earningToken.symbol.toLowerCase()).includes(lowercaseQuery),\n      )\n    }\n\n    return sortPools(chosenPools).slice(0, numberOfPoolsVisible)\n  }\n\n  const cardLayout = (\n    <CardLayout>\n      {poolsToShow().map((pool) =>\n        pool.isAutoVault ? (\n          <CakeVaultCard key=\"auto-cake\" pool={pool} showStakedOnly={stakedOnly} />\n        ) : (\n          <PoolCard key={pool.sousId} pool={pool} account={account} />\n        ),\n      )}\n    </CardLayout>\n  )\n\n  const tableLayout = <PoolsTable pools={poolsToShow()} account={account} userDataLoaded={userDataLoaded} />\n\n  return (\n    <>\n      <PageHeader>\n        <Flex justifyContent=\"space-between\" flexDirection={['column', null, null, 'row']}>\n          <Flex flex=\"1\" flexDirection=\"column\" mr={['8px', 0]}>\n            <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\" mb=\"24px\">\n              {t('Zeus Pools')}\n            </Heading>\n            <Heading scale=\"lg\" color=\"text\">\n              {t('Just stake some tokens to earn.')}\n            </Heading>\n          </Flex>\n           \n        </Flex>\n      </PageHeader>\n      <Page>\n        <PoolControls justifyContent=\"space-between\">\n          <PoolTabButtons\n            stakedOnly={stakedOnly}\n            setStakedOnly={setStakedOnly}\n            hasStakeInFinishedPools={hasStakeInFinishedPools}\n            viewMode={viewMode}\n            setViewMode={setViewMode}\n          />\n          <SearchSortContainer>\n            <Flex flexDirection=\"column\" width=\"50%\">\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\n                {t('Sort by')}\n              </Text>\n              <ControlStretch>\n                <Select\n                  options={[\n                    {\n                      label: t('Hot'),\n                      value: 'hot',\n                    },\n                    {\n                      label: t('APR'),\n                      value: 'apr',\n                    },\n                    {\n                      label: t('Earned'),\n                      value: 'earned',\n                    },\n                    {\n                      label: t('Total staked'),\n                      value: 'totalStaked',\n                    },\n                  ]}\n                  onChange={handleSortOptionChange}\n                />\n              </ControlStretch>\n            </Flex>\n            <Flex flexDirection=\"column\" width=\"50%\">\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\n                {t('Search')}\n              </Text>\n              <ControlStretch>\n                <SearchInput onChange={handleChangeSearchQuery} placeholder=\"Search Pools\" />\n              </ControlStretch>\n            </Flex>\n          </SearchSortContainer>\n        </PoolControls>\n        {showFinishedPools && (\n          <Text fontSize=\"20px\" color=\"failure\" pb=\"32px\">\n            {t('These pools are no longer distributing rewards. Please unstake your tokens.')}\n          </Text>\n        )}\n        {viewMode === ViewMode.CARD ? cardLayout : tableLayout}\n        <div ref={loadMoreRef} />\n      </Page>\n    </>\n  )\n}\n\nexport default Pools\n","import React, { lazy } from 'react'\nimport { Router, Redirect, Route, Switch } from 'react-router-dom'\nimport { ResetCSS } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport useEagerConnect from 'hooks/useEagerConnect'\nimport { usePollCoreFarmData, useFetchProfile, usePollBlockNumber } from 'state/hooks'\nimport GlobalStyle from './style/Global'\nimport Menu from './components/Menu'\nimport SuspenseWithChunkError from './components/SuspenseWithChunkError'\nimport ToastListener from './components/ToastListener'\nimport PageLoader from './components/PageLoader'\nimport EasterEgg from './components/EasterEgg'\nimport Pools from './views/Pools'\nimport history from './routerHistory'\n\n// Route-based code splitting\n// Only pool is included in the main bundle because of it's the most visited page\nconst Home = lazy(() => import('./views/Home'))\nconst Farms = lazy(() => import('./views/Farms'))\nconst Lottery = lazy(() => import('./views/Lottery'))\nconst Ifos = lazy(() => import('./views/Ifos'))\nconst NotFound = lazy(() => import('./views/NotFound'))\nconst Collectibles = lazy(() => import('./views/Collectibles'))\nconst Teams = lazy(() => import('./views/Teams'))\nconst Team = lazy(() => import('./views/Teams/Team'))\nconst Profile = lazy(() => import('./views/Profile'))\nconst TradingCompetition = lazy(() => import('./views/TradingCompetition'))\nconst Predictions = lazy(() => import('./views/Predictions'))\n\n// This config is required for number formatting\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nconst App: React.FC = () => {\n  usePollBlockNumber()\n  useEagerConnect()\n  useFetchProfile()\n  usePollCoreFarmData()\n\n  return (\n    <Router history={history}>\n      <ResetCSS />\n      <GlobalStyle />\n      <Menu>\n        <SuspenseWithChunkError fallback={<PageLoader />}>\n          <Switch>\n            <Route path=\"/\" exact>\n              <Home />\n            </Route>\n            <Route path=\"/farms\">\n              <Farms />\n            </Route>\n            <Route path=\"/pools\">\n              <Pools />\n            </Route>\n            <Route path=\"/lottery\">\n              <Lottery />\n            </Route>\n            <Route path=\"/ifo\">\n              <Ifos />\n            </Route>\n            <Route path=\"/collectibles\">\n              <Collectibles />\n            </Route>\n            <Route exact path=\"/teams\">\n              <Teams />\n            </Route>\n            <Route path=\"/teams/:id\">\n              <Team />\n            </Route>\n            <Route path=\"/profile\">\n              <Profile />\n            </Route>\n            <Route path=\"/competition\">\n              <TradingCompetition />\n            </Route>\n            <Route path=\"/prediction\">\n              <Predictions />\n            </Route>\n            {/* Redirect */}\n            <Route path=\"/staking\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            <Route path=\"/syrup\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            <Route path=\"/nft\">\n              <Redirect to=\"/collectibles\" />\n            </Route>\n            {/* 404 */}\n            <Route component={NotFound} />\n          </Switch>\n        </SuspenseWithChunkError>\n      </Menu>\n      <EasterEgg iterations={2} />\n      <ToastListener />\n    </Router>\n  )\n}\n\nexport default React.memo(App)\n","import React from 'react'\nimport { ModalProvider } from '@pancakeswap/uikit'\nimport { Web3ReactProvider } from '@web3-react/core'\nimport { HelmetProvider } from 'react-helmet-async'\nimport { Provider } from 'react-redux'\nimport { getLibrary } from 'utils/web3React'\nimport { ThemeContextProvider } from 'contexts/ThemeContext'\nimport { LanguageProvider } from 'contexts/Localization'\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\nimport { ToastsProvider } from 'contexts/ToastsContext'\nimport store from 'state'\n\nconst Providers: React.FC = ({ children }) => {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <Provider store={store}>\n        <ToastsProvider>\n          <HelmetProvider>\n            <ThemeContextProvider>\n              <LanguageProvider>\n                <RefreshContextProvider>\n                  <ModalProvider>{children}</ModalProvider>\n                </RefreshContextProvider>\n              </LanguageProvider>\n            </ThemeContextProvider>\n          </HelmetProvider>\n        </ToastsProvider>\n      </Provider>\n    </Web3ReactProvider>\n  )\n}\n\nexport default Providers\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport Providers from './Providers'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Providers>\n      <App />\n    </Providers>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n","export const tokenEarnedPerThousandDollarsCompounding = ({\n  numberOfDays,\n  farmApr,\n  tokenPrice,\n  roundingDecimals = 2,\n  compoundFrequency = 1,\n  performanceFee = 0,\n}) => {\n  // Everything here is worked out relative to a year, with the asset compounding at the compoundFrequency rate. 1 = once per day\n  const timesCompounded = 365 * compoundFrequency\n  // We use decimal values rather than % in the math for both APY and the number of days being calculates as a proportion of the year\n  let aprAsDecimal = farmApr / 100\n\n  if (performanceFee) {\n    // Reduce the APR by the % performance fee\n    const feeRelativeToApr = (farmApr / 100) * performanceFee\n    const aprAfterFee = farmApr - feeRelativeToApr\n    aprAsDecimal = aprAfterFee / 100\n  }\n\n  const daysAsDecimalOfYear = numberOfDays / 365\n  // Calculate the starting TOKEN balance with a dollar balance of $1000.\n  const principal = 1000 / tokenPrice\n  // This is a translation of the typical mathematical compounding APY formula. Details here: https://www.calculatorsoup.com/calculators/financial/compound-interest-calculator.php\n  const finalAmount = principal * (1 + aprAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear)\n  // To get the TOKEN amount earned, deduct the amount after compounding (finalAmount) from the starting TOKEN balance (principal)\n  const interestEarned = finalAmount - principal\n\n  return parseFloat(interestEarned.toFixed(roundingDecimals))\n}\n\nexport const getRoi = ({ amountEarned, amountInvested }) => {\n  const percentage = (amountEarned / amountInvested) * 100\n  return percentage\n}\n","import { Profile } from 'state/types'\n\nexport type ProfileResponse = {\n  0: string\n  1: string\n  2: string\n  3: string\n  4: string\n  5: boolean\n}\n\nexport const transformProfileResponse = (profileResponse: ProfileResponse): Partial<Profile> => {\n  const { 0: userId, 1: numberPoints, 2: teamId, 3: nftAddress, 4: tokenId, 5: isActive } = profileResponse\n\n  return {\n    userId: Number(userId),\n    points: Number(numberPoints),\n    teamId: Number(teamId),\n    tokenId: Number(tokenId),\n    nftAddress,\n    isActive,\n  }\n}\n","import Cookies from 'js-cookie'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Nft } from 'config/constants/types'\nimport { getNftByTokenId } from 'utils/collectibles'\nimport { Profile } from 'state/types'\nimport { getTeam } from 'state/teams/helpers'\nimport { transformProfileResponse } from './helpers'\n\nconst profileContract = getProfileContract()\nconst profileApi = process.env.REACT_APP_API_PROFILE\n\nexport interface GetProfileResponse {\n  hasRegistered: boolean\n  profile?: Profile\n}\n\nconst getUsername = async (address: string): Promise<string> => {\n  try {\n    const response = await fetch(`${profileApi}/api/users/${address}`)\n\n    if (!response.ok) {\n      return ''\n    }\n\n    const { username = '' } = await response.json()\n\n    return username\n  } catch (error) {\n    return ''\n  }\n}\n\nconst getProfile = async (address: string): Promise<GetProfileResponse> => {\n  try {\n    const hasRegistered = (await profileContract.methods.hasRegistered(address).call()) as boolean\n\n    if (!hasRegistered) {\n      return { hasRegistered, profile: null }\n    }\n\n    const profileResponse = await profileContract.methods.getUserProfile(address).call()\n    const { userId, points, teamId, tokenId, nftAddress, isActive } = transformProfileResponse(profileResponse)\n    const team = await getTeam(teamId)\n    const username = await getUsername(address)\n\n    // If the profile is not active the tokenId returns 0, which is still a valid token id\n    // so only fetch the nft data if active\n    let nft: Nft\n    if (isActive) {\n      nft = await getNftByTokenId(nftAddress, tokenId)\n\n      // Save the preview image in a cookie so it can be used on the exchange\n      Cookies.set(\n        `profile_${address}`,\n        {\n          username,\n          avatar: `https://pancakeswap.finance/images/nfts/${nft?.images.sm}`,\n        },\n        { domain: 'pancakeswap.finance', secure: true, expires: 30 },\n      )\n    }\n\n    const profile = {\n      userId,\n      points,\n      teamId,\n      tokenId,\n      username,\n      nftAddress,\n      isActive,\n      nft,\n      team,\n    } as Profile\n\n    return { hasRegistered, profile }\n  } catch (error) {\n    return null\n  }\n}\n\nexport default getProfile\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { ProfileState } from 'state/types'\nimport type { AppDispatch } from 'state'\nimport getProfile, { GetProfileResponse } from './getProfile'\n\nconst initialState: ProfileState = {\n  isInitialized: false,\n  isLoading: true,\n  hasRegistered: false,\n  data: null,\n}\n\nexport const profileSlice = createSlice({\n  name: 'profile',\n  initialState,\n  reducers: {\n    profileFetchStart: (state) => {\n      state.isLoading = true\n    },\n    profileFetchSucceeded: (_state, action: PayloadAction<GetProfileResponse>) => {\n      const { profile, hasRegistered } = action.payload\n\n      return {\n        isInitialized: true,\n        isLoading: false,\n        hasRegistered,\n        data: profile,\n      }\n    },\n    profileFetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    profileClear: () => ({\n      ...initialState,\n      isLoading: false,\n    }),\n    addPoints: (state, action: PayloadAction<number>) => {\n      state.data.points += action.payload\n    },\n  },\n})\n\n// Actions\nexport const { profileFetchStart, profileFetchSucceeded, profileFetchFailed, profileClear, addPoints } =\n  profileSlice.actions\n\n// Thunks\n// TODO: this should be an AsyncThunk\nexport const fetchProfile = (address: string) => async (dispatch: AppDispatch) => {\n  try {\n    dispatch(profileFetchStart())\n    const response = await getProfile(address)\n    dispatch(profileFetchSucceeded(response))\n  } catch (error) {\n    dispatch(profileFetchFailed())\n  }\n}\n\nexport default profileSlice.reducer\n","import { useContext } from 'react'\nimport { ThemeContext as StyledThemeContext } from 'styled-components'\nimport { ThemeContext } from 'contexts/ThemeContext'\n\nconst useTheme = () => {\n  const { isDark, toggleTheme } = useContext(ThemeContext)\n  const theme = useContext(StyledThemeContext)\n  return { isDark, toggleTheme, theme }\n}\n\nexport default useTheme\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport teamsList from 'config/constants/teams'\nimport { Team } from 'config/constants/types'\nimport { TeamsById, TeamsState } from '../types'\nimport { getTeam, getTeams } from './helpers'\n\nconst teamsById: TeamsById = teamsList.reduce((accum, team) => {\n  return {\n    ...accum,\n    [team.id]: team,\n  }\n}, {})\n\nconst initialState: TeamsState = {\n  isInitialized: false,\n  isLoading: true,\n  data: teamsById,\n}\n\nexport const teamsSlice = createSlice({\n  name: 'teams',\n  initialState,\n  reducers: {\n    fetchStart: (state) => {\n      state.isLoading = true\n    },\n    fetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    teamFetchSucceeded: (state, action: PayloadAction<Team>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data[action.payload.id] = action.payload\n    },\n    teamsFetchSucceeded: (state, action: PayloadAction<TeamsById>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } = teamsSlice.actions\n\n// Thunks\nexport const fetchTeam = (teamId: number) => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const team = await getTeam(teamId)\n    dispatch(teamFetchSucceeded(team))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport const fetchTeams = () => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const teams = await getTeams()\n    dispatch(teamsFetchSucceeded(teams))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport default teamsSlice.reducer\n"],"sourceRoot":""}